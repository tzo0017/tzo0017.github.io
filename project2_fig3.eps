%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: project2_fig3.pdf
%%Creator: (Adobe Acrobat 17.12.0)
%%For: tzo0017
%%CreationDate: 11/2/23, 3:18 PM
%%BoundingBox: 0 0 781 518
%%HiResBoundingBox: 0 0 780.2014 517.0782
%%CropBox: 0 0 780.2014 517.0782
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1001 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c017 91.164464, 2020/06/15-10:20:05        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2023-11-02T20:17:12Z"
   xmp:CreatorTool="PowerPoint"
   xmp:ModifyDate="2023-11-02T15:18:05-05:00"
   xmp:MetadataDate="2023-11-02T15:18:05-05:00"
   pdf:Keywords=""
   pdf:Producer="macOS Version 10.14.6 (Build 18G103) Quartz PDFContext"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:34424c5d-b836-2f48-9da8-154ad50972c3"
   xmpMM:InstanceID="uuid:bb6f25ff-127f-bf47-87ec-09533e0d4857">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">project2_fig3</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -517.078 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 517.078 li
780.201 517.078 li
780.201 0 li
cp
clp
-106.349 -21.0864 mo
853.41 -21.0864 li
853.41 518.913 li
-106.349 518.913 li
-106.349 -21.0864 li
false sop
0 0 0 0 cmyk
f
gsave
-106.349 518.913 mo
853.651 518.913 li
853.651 -21.0864 li
-106.349 -21.0864 li
-106.349 518.913 li
clp
-106.349 -21.0864 mo
853.651 -21.0864 li
853.651 518.913 li
-106.349 518.913 li
-106.349 -21.0864 li
f
3.21568 366.955 mo
3.21568 351.034 16.1221 338.127 32.043 338.127 cv
746.562 338.127 li
762.483 338.127 775.39 351.034 775.39 366.955 cv
775.39 482.26 li
775.39 498.181 762.483 511.087 746.562 511.087 cv
32.043 511.087 li
16.1221 511.087 3.21568 498.181 3.21568 482.26 cv
3.21568 366.955 li
.125673 .0634165 .0010071 0 cmyk
f
1 lw
0 lc
0 lj
8 ml
[] 0 dsh
true sadj
3.21577 366.955 mo
3.21577 351.034 16.1222 338.127 32.0431 338.127 cv
746.562 338.127 li
762.483 338.127 775.39 351.034 775.39 366.955 cv
775.39 482.26 li
775.39 498.181 762.483 511.087 746.562 511.087 cv
32.0431 511.087 li
16.1222 511.087 3.21577 498.181 3.21577 482.26 cv
cp
.145724 .0872206 .0472419 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: KAAAAA+Calibri-Bold Initial
ct_T42Dict begin
-0.516 -0.348 1.262 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /KAAAAA+Calibri-Bold
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000006886670
676d000000000000074400000913676c7966000000000000285c000016ba
686561640000000000001058000000366868656100000000000010900000
0024686d747800000000000010b4000000506c6f63610000000000001104
0000002a6d6178700000000000001130000000206e616d65000000000000
115000000028707265700000000000001178000016e16764697200000000
00000000000000000000079e0000fe930000000000000000000000810081
009c00ab00b500ba00c100ca00d300f3010a0060008500bf00e300ea00f2
00fb010001070115011c0129000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe83056d
000d03c0000600170000fffaffe9fea9ffe90000050e000600170000fffa
ffe9fe93050e00170426000600170000fffaffe9ff12ffed050e00170426
000600170000fffaffe9fe93feb8fece060b0010050e0006001002cbfffa
fff001edfffa023f00060010ff36fffafff00287000600100000fffafff0
079efeaffe9f00000000000000000000000000700072007500780079007a
007b007d007e007f008300860087008800890085007f0086008b008c008d
008e008f0090009100920093009400950096009700980099009a009b009c
009d009e009f009200930094009b009c009e009e00960099009a009d009e
00a200a600a900ac00a200a300a400a500a700a800a900aa00ab00ac00ae
00a300a500a700a800aa00ab00ac00ad00ae00a000a100a300a600a700a9
00aa00ac00ad00af00af00b000b100b200b300b400b500af00af00b000b2
00b300b400b500b800c000b600b700b800b900ba00bb00bc00bd00be00bf
00c000c100c200b900ba00bc00bd00bf00c000c100c200b600b700b800b9
00ba00bb00bc00bd00be00bf00c000c100c200c000c100c200c300c400c5
00c600c700c800c900ca00cb00cc00cd00ce00cf00c300c400c500c600c7
00c800c900ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c500c800c900ca00cb00ce00cf00d000d1
00d200d300d400d500d600d700d900db00de00df00e000e200e300ec00d0
00d100d200d300d400d500d600d700d800d900da00db00dd00de00df00e0
00e100e300e500e900ec00ed00d100d300d400d500d800d900da00dc00e0
00e100e800d000d100d400d600e000e4010800f5010200fb00ff0108008f
009000960092009300990090009100970098009a009d00a400a600a700a8
00a900af009a00a200a300a700a900aa00ab00ac00ad00b000ad009b00aa
00ab00ad00b0009a00aa00ac00ad00ae00af00b100b900bb00bc00bd00be
00c100c200c300c400c500c600c700c800c900ca00cb00ce00b300b400b5
00b600b700b800bc00c200c500c800ca00cb00cd00ce00cf00d000c700b7
00b800b900bb00bc00be00c600c700c800c900cb00cf00d000b200b600b7
00c200c400c500c600c700cb00cc00cd00ce00cf00d000d100d400d500d7
00d800d900da00db00dc00de00df00e000e200e300e500e600d100d300d6
00d700d800da00db00dc00dd00de00df00e000e100e200e300e400e500d1
00d200d400d500da00db00dd00de00df00e000e100e200e600d200d300d4
00d700d800dd00de00e000e100e200e300e400e500e600d200da00e100e9
00ea00ec00e800e900ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e7
00e900ea00ec00ed00ee00ef00f500ee00ef00f000f100f200f300f400f5
00f600ee00f000f200ef00f000f100f200f300f400f500f600ee00ef00f0
00f100f200f300f400f500f600f700f700f800f900fa00fb00fc00fd00f7
00f800f900fa00fb00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff
010001010102010300fe010001010102010300fe00ff0100010101020103
01020103010401050106010701080109010a010c010d010e010f01100107
010401050106010701080109010a010b010d010e010f0110011101040105
0106010701080109010a010b010c010d010e010f01100111010401050106
01070109010e010f011201130114011501170118011a011b011c011d011e
011f01210122011201130114011501170119011b011c011d011e01200121
0123012401250113011401150116011701180119011a011b011c011d011f
01200117011c011d011e012001210129013001770129012b012e012f0130
01310134013501370139012b012d013001320134013a012e01300134013a
014200500062006c00fa05e802cc0114011400a000b10000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000005aa001500a0fff8ff42fea2
fdbc03b6015401cc0108010e00ff00f5006e014000a0055e006b0570fff6
0122fff10547ffec04faffec0131fff4000a03a0036600b400e1044c007c
40465f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948474645444342
41403f3e3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d
0b0a090807060504030201002c4523466020b02660b004262348482d2c45
2346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c4523
4660b0406120b06660b004262348482d2c4523462361b0406020b02661b0
4061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b0042651582320b0
0d44235921212d2c20204518684420b001602045b04676688a4560442d2c
01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e
01b0282370b10228453ab10200080d2d2c2045b00325456164b050515845
441b2121592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b0
4061b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c
8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23
442d2c4b525845441b2121592d2c01b005251023208af500b0016023edec
2d2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d
2c20b001600110203c003c2d2c20b001610110203c003c2d2c00b00743b0
06430b2d2c21210c6423648bb84000622d2c21b08051580c6423648bb820
00621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb2
00802f2b59b002602d2c0c6423648bb84000626023212d2c452345602345
6023456023766818b08062202d2cb00426b00426b00425b0042545234520
b003266062636820b0032661658a2344442d2c2045b0005458b040442045
b04061441b2121592d2c45b1302f4523456160b0016069442d2c4b5158b0
2f2370b01423421b2121592d2c4b515820b0032545695358441b2121591b
2121592d2c45b01443b0006063b0016069442d2cb02f45442d2c45232045
8a60442d2c45234560442d2c4b235158b90033ffe0b134201bb333003400
5944442d2cb0164358b00326458a586466b01f601b64b020606620581b21
b04059b001615923586559b02923442310b029e01b2121212121592d2cb0
164358b004254564b020606620581b21b04059b0016123586559b0292344
b00425b00725082058021b0359b0052510b004252046b0042523423cb007
2510b006252046b00425b0016023423c2058011b0059b0052510b00425b0
29e0b0072510b00625b029e0b00425b00725082058021b0359b00425b003
254348b00625b00325b0016043481b2159212121212121212d2cb0164358
b004254564b020606620581b21b04059b0016123581b6559b0292344b005
25b00825082058021b0359b0042510b005252046b0042523423cb00425b0
072508b0072510b006252046b00425b0016023423c2058011b0059b00425
10b00525b029e0b02920456544b0072510b00625b029e0b00525b0082508
2058021b0359b00525b003254348b00425b0072508b00625b00325b00160
43481b2159212121212121212d2c02b00425202046b004252342b0052508
b003254548212121212d2c02b0032520b0042508b0022543482121212d2c
452320451820b00050205823652359236820b040505821b0405923586559
8a60442d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60
441b2121592d2c4b53234b515a58381b2121592d2cb000214b5458381b21
21592d2cb002435458b0462b1b21212121592d2cb002435458b0472b1b21
2121592d2cb002435458b0482b1b21212121592d2cb002435458b0492b1b
212121592d2c208a08234b538a4b515a5823381b2121592d2c0020b20040
0325b0062649618b3812342d2c014623466023466123201020468a61b8ff
80628ab140408a704560683a2d2c208a2349648a2353583c1b21592d2c4b
52587d1b7a592d2cb012004b014b54422d2cb1020042b123018851b14001
88535a58b910000020885458b202010243604259b12401885158b9200000
40885458b2020202436042b12401885458b2022002436042004b014b5258
b2020802436042591bb940000080885458b202040243604259b940000080
63b80100885458b202080243604259b94000010063b80200885458b20210
0243604259b94000020063b80400885458b202400243604259595959592d
2c451868234b51582320452064b04050587c59688a6059442d2cb00016b0
0225b0022501b001233e00b002233eb10102060cb00a236542b00b234201
b001233f00b002233fb10102060cb006236542b0072342b00116012d2c20
b82000628a6023622d2cb0072558001b0159b0042510b00325b0022520b8
ffff545821cd1bed5921b006255cb006255a58b0092b5920b005254ab004
2547b004254760b0062547b0806361b00225b0005558b00325b007254963
59b0082558001b0159b00425b0062549b009255cb009255a58b0092b59b0
072546b0806361b0032520b0005558631b2159612320b0005558b080631b
21b08059b0592bb006255c586959b00425202010b00048233ab006265800
1b0159b0052658b003252f598a12233221212d2cb00625b00a2587b00625
b009254ab0005358b00625b00a251bb00925b0072559b00225b00225070c
b005256323b00625636020b94000040063535821b00426b00426b00a1bb9
4000040063655158b0042665b0042665b00a1bb00426b00426b000b00325
b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525075959
20b0005558b00525b0052587b00725b007250bb0092510b00b25b0092620
b8ffff545821cd1bed59b00525b0052507b00825b00b254923b00625b006
2587b00a2510b00b25c15920b00051b800522378b00161b00225b00725b0
072507b00a25b00d254961b08062b00525b005250bb00a252338b00625b0
062587b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c
2549b0032554b8ffa723792121212121212121212121212d2c23b0005458
b9400000001bb900004000598ab0005458b9400000001bb90000400059b0
5b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a08
0d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0042608
0db00426b00426080db05b2b2d00000100000006333390900fbf5f0f3cf5
0019080000000000bbeb7ccc00000000d5968a63fbdafd350a1a08500001
0009000200000000000000010000079efdda00000aa0fbdafa860a1a0001
00000000000000000000000000000014040e000001cf000003e7008d03ac
008d06fe008d03c8003f03f6000c03f300470407004a03cb001b01f7006b
01f7007e0682007e044d004802d8007e02c60017044b007903c900160273
003b040e00550000009e009e013601cc028f034a03a80493055e066306b7
06f907ba082c08aa094009bb0a270a4c0b5d000000010000001404420017
0110000800020010002f006000000cf8013f000400010000000100120001
000000000006001300004541415456512b43616c696272692d426f6c6400
0000b20903eb411d03430001003b03410001008b0330009b033000020004
032f0064032f0074032f00d4032f0004032d032a0038001f032c032a0038
001f032b032ab2381f24bf032a00a4032a00b4032a0003ffc0032ab22327
46b9ffc0032ab21c20464163033c0038033b0055033a0038033900550338
003803370055033600380335005503340038033300550323003803220055
0321003803200055002b03400001006b03400001033d003803220055006b
033b00010024033100540331000200240331003403310054033100f40331
0004001403270044032700e4032700030004032700240327004403270074
0327008403270094032700d4032700f40327000800a40322000100340320
0001001403200024032000440320005403200074032000840320000602f9
b21e1d1fb802f8b21e2b1fb802f7b21e2c1fb802f6b21e2c1fb802f5b21e
2c1fb802f4b21e2b1fb802f3b21e2c1fb802f2b21e2c1fb802f1b21e2c1f
b802f0b21e2c1fb802efb21e2c1fb802eeb21e2b1fb802edb21e2b1fb802
ecb21e2c1fb802ebb21e2c1fb802eab21e2c1fb802e9b21e2c1fb802e8b2
1e2c1fb802e7b21e2c1fb802e6b21e2c1fb802e5b21e2c1fb802e4b21e09
1fb802e3b21e2c1fb802e2b21e2c1fb802e1b21d121fb802e0b21d191fb8
02dfb21d2f1fb802deb21d2f1fb802ddb21d2f1fb802dcb21d2f1fb802db
b21d191fb802dab21d2f1fb802d9b21d2f1fb802d8b21d2f1fb802d7b21d
2f1fb802d6b21d2f1fb802d5b21d2f1fb802d4b21d2f1fb802d3b21d2f1f
b802d2b21d2f1fb802d1b21d2f1fb802d0b21d2f1fb802cfb21d2f1fb802
ceb21d121fb802cdb21d121fb802ccb21d121fb802cbb21d121fb802cab2
1d191fb802c9b21d2f1fb802c8b21d2f1fb802c7b21d2f1fb802c6b21d2f
1fb802c5b21d2f1fb802c4b21d2f1fb802c3b21d2f1fb802c2b21d2f1fb8
02c1b21d2f1fb802c0b21d2f1fb802bfb21d121fb802beb21d121fb802bd
b21d2f1fb802bcb21d2f1fb802bbb21d2f1fb802bab21d2f1fb802b9b21d
2f1fb802b8b21d2f1fb802b7b21d2f1fb802b6b21d2f1fb802b5b21d2f1f
b802b4b21d2f1fb802b3b21d2f1fb802b2b21d2f1fb802b1b21c321fb802
b0b21c321fb802afb21c331fb802aeb21c331fb802adb21c331fb802acb2
1c331fb802abb21c331fb802aab21c311fb802a9b21c311fb802a8b21c32
1fb802a7b21c321fb802a6b21c321fb802a5b21c321fb802a4b21c321fb8
02a3b21c321fb802a2b21c331fb802a1b21c331fb802a0b21c331fb8029f
b21c331fb8029eb21c331fb8029db21c331fb8029cb21c311fb8029bb21c
311fb8029ab21c321fb80299b21c321fb80298b21c321fb80297b21c321f
b80296b21c321fb80295b21c331fb80294b21c331fb80293b21c331fb802
92b21c331fb80291b21c331fb80290b21c331fb8028fb21c331fb8028eb2
1c311fb8028db21c321fb8028cb21c321fb8028bb21c321fb8028ab21c32
1fb80289b21c321fb80288b21c331fb80287b21c331fb80286b21c331fb8
0285b21c331fb80284b21c331fb80283b21c331fb80282b21b341fb80281
b21b341fb80280b21b341fb8027fb21b341fb8027eb21b341fb8027db21b
341fb8027cb21b341fb8027bb21b341fb8027ab21b341fb80279b21b341f
b80278b21b341fb80277b21b341fb80276b21b341fb80275b21b341fb802
74b21b341fb80273b21b341fb80272b21b341fb80271b21b341fb80270b2
1b341fb8026fb21a351fb8026eb21a351fb8026db21a351fb8026cb21a35
1fb8026bb21a351fb8026ab21a351fb80269b21a351fb80268b21a351fb8
0267b21a351fb80266b21a351fb80265b21a351fb80264b21a351fb80263
b21a351fb80262b21a351fb80261b21a351fb80260b21a351fb8025fb21a
351fb8025eb21a351fb8025db21a351fb8025cb21a351fb8025bb21a351f
b8025ab21a351fb80259b219371fb80258b219371fb80257b219371fb802
56b219371fb80255b219371fb80254b219371fb80253b219371fb80252b2
19371fb80251b219371fb80250b219371fb8024fb219371fb8024eb21937
1fb8024db219371fb8024cb219371fb8024bb219371fb8024ab219371fb8
0249b219371fb80248b219371fb80247b219371fb80246b219371fb80245
b219371fb80244b219371fb80243b219371fb80242b219371fb80241b219
371fb80240b219371fb8023fb219371fb8023eb219371fb8023db219371f
b8023cb219371fb8023bb219371fb8023ab219371fb80239b218391fb802
38b218391fb80237b218391fb80236b218391fb80235b218391fb80234b2
18391fb80233b218391fb80232b218391fb80231b218391fb80230b21839
1fb80301b2182e1fb8022fb218391fb8022eb218391fb8022db218391fb8
022cb218391fb8022bb218391fb8022ab218391fb80229b218391fb80228
b218391fb80227b218391fb80226b218391fb80225b2173b1fb80224b217
3b1fb80223b217321fb80222b2173a1fb80221b2173b1fb80220b2173b1f
b8021fb2173b1fb8021eb2173b1fb8021db2173b1fb8021cb2173b1fb802
1bb2173b1fb8021ab2173b1fb80219b2173b1fb80218b2173b1fb80217b2
173b1fb80216b2173b1fb80215b217321fb80214b2173a1fb80213b2173b
1fb80212b2173b1fb80211b2173b1fb80210b2173b1fb8020fb2173b1fb8
020eb2173b1fb8020db2173b1fb8020cb2173b1fb8020bb2173b1fb8020a
b2173b1fb80209b217321fb80208b217321fb80207b2173b1fb80206b217
3b1fb80205b2173b1fb80204b2173b1fb80203b2173b1fb80202b2173b1f
b80201b2173b1fb80200b2173b1fb801ffb2173b1fb801feb2173b1fb801
fdb2173b1fb801fcb2173b1fb801fbb2173b1fb801fab2173b1fb801f9b2
173b1fb801f8b2173b1fb801f7b217321fb801f6b2173a1fb801f5b2173b
1fb801f4b2173b1fb801f3b2173b1fb801f2b2173b1fb801f1b2173b1fb8
01f0b2173b1fb801efb2173b1fb801eeb2173b1fb801edb2173b1fb801ec
b2173b1fb801ebb2173b1fb801eab2173b1fb801e9b2173b1fb801e8b217
3b1fb801e7b217321fb801e6b216231fb801e5b216231fb801e4b216371f
b801e3b216371fb801e2b216381fb801e1b216381fb801e0b216431fb801
dfb216441fb801deb216441fb801ddb216441fb801dcb216451fb801dbb2
16461fb801dab216461fb801d9b216461fb801d8b216231fb801d7b21623
1fb801d6b216381fb801d5b216431fb801d4b216431fb801d3b216431fb8
01d2b216441fb801d1b216461fb801d0b216461fb801cfb216461fb801ce
b216461fb801cdb216461fb801ccb216461fb801cbb216431fb801cab216
231fb801c9b216231fb801c8b216371fb801c7b216371fb801c6b216381f
b801c5b216421fb801c4b216431fb801c3b216441fb801c2b216451fb801
c1b216461fb801c0b216461fb801bfb216461fb801beb216461fb801bdb2
16461fb801bcb216461fb801bbb216461fb801bab216371fb801b9b21638
1fb801b8b216421fb801b7b216431fb801b6b216431fb801b5b216431fb8
01b4b216441fb801b3b216441fb801b2b216441fb801b1b216451fb801b0
b216451fb801afb216451fb801aeb216461fb801adb216461fb801acb216
461fb801abb216461fb801aab216461fb801a9b215341fb801a8b215411f
b801a7b215411fb801a6b2154d1fb801a5b2154e1fb801a4b2154f1fb801
a3b215521fb801a2b215401fb801a1b2154d1fb801a0b2154e1fb8019fb2
154f1fb8019eb215521fb8019db2154d1fb8019cb215401fb8019bb2154d
1fb8019ab2154e1fb80199b2154e1fb80198b2154f1fb80197b2154f1fb8
0196b215501fb80195b215521fb80194b215521fb80193b215521fb80192
b215411fb80191b2154f1fb80190b215501fb8018fb215501fb8018eb215
511fb8018db215521fb8018cb215521fb8018bb215521fb8018ab214581f
b80189b214591fb80188b2145c1fb80187b2145d1fb80186b2144a1fb801
85b2145b1fb80184b2145c1fb80183b214591fb80182b2145d1fb8018140
af145d1ff00f451fef0e481fe00c4e1fc20c4e1fc10c4e1fc00c4e1fbf0b
561fb20b561fb10b561fb00b561faf0b561fae0b561fad0b561fac0b561f
ab0b561faa0b561fa90b561fa80b561fa70b561fa60b561fa50b561fa40b
561fa30b561fa20b561fa10b561fa00b561f9f0b561f9e0a681f9a0a681f
990a681f980a681f970a681f960a681f950a681f940a681f930a681f920a
681f910a681f9009681f8f09681f8e09681f8d09681f8c09681f410902fc
02fa0056001f02fb02fa0068001f017fb213321fb8017eb212371fb80174
b212371fb80173b211421fb80172b211421fb80171b211421fb80170b211
421fb8016fb211421fb8016eb211421fb8016db211421fb8016cb211421f
b8016bb211421fb8016ab211421fb8013cb211421fb8013bb210421fb801
3ab210421fb80139b210421fb80138b210421fb80137b210421fb80136b2
10421fb80135b210421fb80134b210421fb80133b210421fb80132b20f45
1fb80131b20f451fb80130b20f451fb80112b20f451fb80111b20f451fb8
0110b20f451fb8010fb20f451fb8010eb20f451fb8010db20e481fb8010c
b20e481fb8010bb20e481fb8010ab20e481fb80109b20e481fb80108b20e
481fb80107b20d4a1fb80106405b0d4a1fee0d4a1fed0d4a1fec0d4a1feb
0d4a1fea0d4a1fe90c4e1fdf0c4e1fde0c4e1fdd0c4e1fdc0c4e1fdb0c4e
1fda0c4e1fd90b561fd80b561fd70b561fbe0b561fbd0b561fbc0b561fbb
0b561fba0b561f9d0a681f9c0a681fb80180b213321fb8017ab211401fb8
0179b211421fb80178b211421fb80177b211421fb80176b211421fb80175
b211421fb80143b211421fb80142b210421fb80141b210421fb80140b210
421fb8013fb210421fb8013eb210421fb8013db20f451fb80115b20f451f
b80114b20f451fb80113b20f451fb903030302b2401fa4be030200b40302
00c4030200030300b213321fb8017bb213321fb80153b212371fb80152b2
11401fb80151b211401fb80150b211401fb8014fb211401fb8014eb21140
1fb8014db211401fb8014cb211401fb8014bb211401fb8014ab211401fb8
0149b211401fb80148b211401fb80147b211401fb80146b211401fb80145
b211401fb80144b211401fb80122b211401fb80121b210421fb80120b210
421fb8011fb210421fb8011eb210421fb8011db210421fb8011cb210421f
b8011bb210421fb8011ab210421fb80119b210421fb80118b20f451fb801
17b20f451fb80116409b0f451ffd0f451ffc0f451ffb0f451ffa0f451ff9
0e481ff80e481ff70e481ff60e481ff50e481ff40e481ff30d4a1ff20d4a
1ff10d4a1fe70d4a1fe60d4a1fe50d4a1fe40d4a1fe30d4a1fe20d4a1fe1
0c4e1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc90c4e1fc80c4e1fc70c4e
1fc60c4e1fc50c4e1fc40c4e1fc30c4e1fb80c4e1fb70b561fb60b561fb5
0b561fb40b561fb30b561f9b0a681fb802fdb212371fb8017db212371fb8
017cb212371fb80169b2112e1fb80168b2112e1fb80167b211401fb80166
b211401fb80165b211401fb80164b211401fb80163b211401fb80162b211
401fb80161b211401fb80160b211401fb8015fb211401fb8015eb211401f
b8015db211401fb8015cb211401fb8015bb211401fb8015ab211401fb801
59b211401fb80158b211401fb80157b211401fb80156b211401fb80155b2
11401fb80154b211401fb8012fb211401fb8012eb210421fb8012db21042
1fb8012cb210421fb8012bb210421fb8012ab210421fb80129b210421fb8
0128b210421fb80127b210421fb80126b210421fb80125b20f451fb80124
b20f451fb80123b20f451fb80105b20f451fb80104b20f451fb80103b20f
451fb80102b20f451fb80101b20e481fb8010040a20e481fff0e481ffe0e
481fe80c4e1fd60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c4e1fd10c4e1f
d00c4e1fcf0c4e1fce0b561fb90b561f8503251f84032e1f83012e1f8248
805581ab80557f487d557eab7d550b7d3b7d4b7d030b7d1b7d4b7d7b7dab
7ddb7d067c487a557bab7a55047a147a020a7948775578ab77550b77010c
764875555475e475f4750314755475647574759475d475e47507a475b475
c47503b8ffc0401275383b46807590750214757475020075010fb8ffc040
21750b0e467448725573ab725504723472023bf47201e072010230720150
72607202b8ffc0b372242846b8ffc0403572161a46107230724072037148
6f5570ab6f554f6f6f6f7f6f9f6fbf6f057f6f8f6f02af6fbf6f02406f09
0d466e486d55df6d0100bc02ff001002ff00c002ffb2030a6fbb02fe0001
00ef02fe40ff016b032e1f6a03251f692e675568ab6755662e645565ab64
55632e6255612e60555f2e5d555eab5d555c2e5a555bab5a55592e585557
03251f562e545555ab5455532e515552ab51554f2e4e554e03251f4d2e4b
554cab4b554a2e485549ab4855504801472e46554503361f001f01001e01
001e701e801ef01e040b601d701d02701de01df01d03701cf01c027f1b01
0f1a7f1a8f1a030f1a8f1a020f1a8f1a020f191f198f199f19af19050f19
8f199f19030c7012801202701180110230114011d011e011040011a01102
0f8f0f9f0faf0f034f0f5f0fef0fff0f04af0f01af0ebf0ecf0e034f0e5f
0e6f0e030f0eaf0ebf0e0310400e2e31460f0d1f0d40472f0d033c2f0d3f
0d4f0d038f0d01400d2e3246400d2427463f0c4f0c5f0c039f0c01400c26
2946ef0aff0a02400a242746ef09ff0902ff090100030120010100011001
20010308b8ffc0b401151f4603bd0100010000050001019000542b4bb807
ff524bb008505bb00188b02553b00188b040515ab00688b000555a5b58b1
01018e59b101024354b0144b515a58b101018e59858d8d001d424bb01d53
58b203a0a01d42594bb0805358b20340401d42594bb0ff5358b20300001d
42592b5e73757373742b732b73742b2b73745e732b5e7374757374755e73
747573015e7374737475757473745e737473002b2b732b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73745e73732b2b7374752b2b732b
2b73755f75755e732b2b2b5e7373732b7374752b5e732b2b5e732b2b7374
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b0073747373747374732b73742b2b2b2b2b2b2b2b2b732b
2b2b73737373185f5e00000000>
[5819 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 620 3 <0001008dfffa0363050e002700b7b10102435558b10713b8029440160d1d
001e1d07280f014d07180c0d014c07100b014d07ba01570013fff0b60b01
4d13131906b8ffe0b30f014d06b8ffe8b40b0e014c06b8015bb440225119
5500183f3f1aed2b2b12392f2bed2b2b2b012f2fc41139ed3230311b4011
07280f014d07180c0d014c07100b014d07ba01570013fff0b60b014d1313
1906b8ffe0b30f014d06b8ffe8b40b0e014c06b8015bb440225119550018
3f3f1aed2b2b12392f2bed2b2b2b30315901140e0223211121321e021514
0e02232111140e0223222e02351134363321321e020363050b0e09fe5901
8d090e0b05050b0e09fe730c1f322726331e0d2d210261090e0b0504a21e
29180cfea40a18281e1e281a0bfe1e0b100b06060b100b04952c270b192a
>KAAAAA+Calibri-Bold AddT42Char 
1 3270 10 <0002006bfffa018d054e001500210043b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61aed012fedd4ed3031
1bb9001f017bb540191049054c00183f3fd61aed30315925140e0223222e
023511343e0233321e0215131406232226353436333216017a0c1d302525
301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f0a03
7a0a0f0b06060b0f0a01304c3a38494c3b39>KAAAAA+Calibri-Bold AddT42Char 
1 2748 9 <0003001bfe9303a203d3003e004e005f0100b10102435558404f0f300703
38234a334ac34a031f4a014ae1c90c01180c010cc953011e530118530153
f1cd150117150100151015020f1515603803f93c482a202c42bc42020042
0142cd384a0f5b0110035bcc40204f00183f1aed5f5e5d3fed5d5d12393f
ed1112392f5e5d5d5ded5d5d5dd65d5ded5d5d12173930311b40550f3007
0338234a334ac34a030b4a011f4a014ae1c90c01180c010cc953011e5301
18530153f1cd150117150100151015021515603803f93c482a203c42cc42
020442010f00420142cd384a0f5b0110035bcc40204f00183f1aed5f5e5d
3fed5d5e5d5d12393fed1112392f5d5d5ded5d5d5dd65d5ded5d5d5d1217
393031590114062323161615140e0223222627060615141617171e031514
0e0223222e0235343e0237262635343637262635343e0233321617213216
01342623220e0215141633323e0213342627270e0315141633323e0203a2
1610691613346189542b4e150c13332ed94c77512b3a74af7572a1672f11
21301f2b2f362b232a376288522a4d21011b1115febd5049253825125047
263825133b483fb31a1f1306655c394e30140360302e183d214e79532b15
0e0d24161d2502080325435e3c4275563224405935213c373217174f2f3b
61272362494e7b552d0a092cfef94850192b391f444f182a37fd562d3002
051323201e10323417262f00>KAAAAA+Calibri-Bold AddT42Char 
1 4736 16 <00010079ffe903cc03c600320069b10102435558b10b27bb025e0000001f
025f400f132d49270b05194924180b0f014c24b8014db4400e4d054c0018
3f3f1aed2b3f1239393f012fedd4ed3930311b400e2d49270b0519492418
0b0f014c24b8014db4400e4d054c00183f3f1aed2b3f1239393f30315925
140e0223222e023535060623222e023511343e0233321e021511141e0233
32363711343e0233321e021503cc0a19291f2129180a4a99525c7d4d210b
1d312425301d0c122539263061370b1d302525301c0c220a0f0a05050a0f
0a6750503c68896602220a0f0a05050a0f0afe08464a351d464302510a0f
0a05050a0f0a>KAAAAA+Calibri-Bold AddT42Char 
1 4184 14 <0001007efffa02bb03d70033006eb10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1aed2b5f5e5d012fc4ed3930311bb9000affe8
b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1aed
2b30315901140e0223222e0223220e020711140e0223222e023511343e02
33321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c0c1d
302525301d0c0a1a291f202a170a233e38381c0d1e20180b050402034b24
2e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a0f0a
6f3241260f0307090a0c152a>KAAAAA+Calibri-Bold AddT42Char 
1 2342 8 <0002004affe903b603d7002b00340103b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d01
2fed32dded12392f30311b4009032c132c021b2cc304b8ffc040170d014d
00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ff
e840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d
09f9401c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed
5e5d3031590114062321141e0233323e0233321e0215140e0623222e0235
343e0233321e021527362623220e020703b62924fde11b3b5d4142644930
0f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b5f30
472f190201fa2e2c395d412213171307122119161f160f0e1817113c7aba
7d77bf85464275a05e206a79243d532f>KAAAAA+Calibri-Bold AddT42Char 

1 0 1 <> KAAAAA+Calibri-Bold AddT42Char 
1 5272 19 <00010055ffe903b605250058013fb10102435558b70847010a46010b5ab8
ffc0b60f024d005a0131b802c9400d4e53264e40264e4e2640030e1bba02
e90000ffe8b40f024d000eb8ffe8400a0f024d000e010f030e45bb015600
3b0009015eb6113b113b111636b8ffe8b30b014d36b8ffe8b40b0f014c36
b80155b249532cb801044011202005495316180b014d16180b0f014c16b8
0156b240055600183f1aed2b2b3f12392fed3910ed2b2b1139392f2f10ed
10ed012f5f5e5d2bd42bed1217392f2f2f11123910ed30315d2b005e5d5d
1b400d0847010a46010b005a010f0345bb0156003b0009015eb6113b113b
111636b8ffe8b30b014d36b8ffe8b40b0f014c36b80155b249532cb80104
4011202005495316180b014d16180b0f014c16b80156b240055600183f1a
ed2b2b3f12392fed3910ed2b2b1139392f2f10ed10ed3031015f5e5d005e
5d5d5901140e0223222e0635343633321e0233323e0235342e022323222e
0235343e023333323e0235342e0223220e0223222e0235343e0633321e02
15140e0207151e0303b64a84b86d4274593a1209070310100a314c664137
543b1d23456947700d120c05050b110c713a5a3d20162b442e345c49330c
080c0804020609143e5e7b485e9163331e3a5739446c4b28017b61966635
131c1e10141b291d30251b1f1b1a2f43292d48331c0716271f1d2514081b
32472b213b2b191f25200714261e19211610132624192c53794c3b665038
0e0308355065>KAAAAA+Calibri-Bold AddT42Char 
1 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3031011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>KAAAAA+Calibri-Bold AddT42Char 
KAAAAA+Calibri-Bold /CharStrings get begin
/g3 3 def
/g10 10 def
/g9 9 def
/g16 16 def
/g14 14 def
/g8 8 def
/g1 1 def
/g19 19 def
end
KAAAAA+Calibri-Bold /Encoding get
dup 33 /g3 put
dup 34 /g10 put
dup 35 /g9 put
dup 36 /g16 put
dup 37 /g14 put
dup 38 /g8 put
dup 39 /g1 put
dup 40 /g19 put
pop
end
%ADOEndSubsetFont
/OPXJEI+Calibri-Bold /KAAAAA+Calibri-Bold findfont ct_VMDictPut/OPXJEI+Calibri-Bold*1 [33{/.notdef}rp /g3 /g10 /g9 /g16 /g14 /g8 /g1 /g19 215{/.notdef}rp]OPXJEI+Calibri-Bold nfOPXJEI+Calibri-Bold*1 [24 0 0 -24 0 0 ]msf20.8507 360.753 mo(!"#$%&'\()[10.9992 5.87525 11.376 12.8761 8.22949 12.1249 5.37595 0 ]xsh%ADOBeginSubsetFont: MAAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.313 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /MAAAAA+Calibri
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000005bc6670
676d000000000000067800000d2b676c79660000000000003a0c00002e78
6865616400000000000013a4000000366868656100000000000013dc0000
0024686d74780000000000001400000000946c6f63610000000000001494
0000004c6d61787000000000000014e0000000206e616d65000000000000
150000000020707265700000000000001520000024eb6764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea700000000000000000000000000500051005a005b005c005d
006000610062006400680069006a006b006c006d006e00680069006e0060
0067006e00660068005f00610063006400660068006a006b006c006d006e
006f0070006f00720074007500760076007000720073007400750076006f
007000710072007300750077007700780079007a007b007c007d007b007c
007d00770079007a007c0078007a007c007d0078007d007e007f00800081
0082007e007f00810082007e007f00800081008200830084008500860087
008800890083008400850086008700880089008300840085008600870088
008900890086008700880089008a008b008c008d008e008f008a008b008c
008d008e008f008a008b008c008d008e008f008d008a008b008c008d008e
008f0090009000910092009300940095009600980099009b009c00900091
00920093009400950096009700980099009a009e009f00a6009000910095
0098009f009000910096009700bc00c600b500ae00af00b6006800690063
006a006f00700071006f0070007100720066006c006d00700079007c007f
00830086008700880089008a0074007500760077007a007b007c007d007e
008200850086008a0088008900830078007b008200830086008700880089
00760079007a007c007d007e0083008500880089008a0073007400750077
007a007d00880089008a008b008c008d008e00900094008b008c008d0091
0092009300940095008c008d00910095008f009000910092009300940095
008b008c008d008e008f009000910092009300940095008b008c008d008e
008f00900091009200930096009700980099009c0096009700980099009a
009b009c00960099009a009c0096009700980099009a009b009c00970098
0099009a009b009c009700980099009a009b009c0096009d00a000a1009d
009e009f00a000a100a2009d009f00a000a1009f00a2009d009e009f00a0
00a100a2009d009e00a000a1009d009e00a000a2009d00a300a400a500a6
00a700a300a400a600a700a300a400a500a600a700a600a300a700a800a9
00aa00ab00ac00ac00a800a900aa00ab00ac00a800a900aa00ab00ac00a8
00aa00ab00ac00ae00ad00ae00af00b000b100b200b300b400b500b600b7
00b800ad00ae00ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700b800b300ae00af
00b000b200b500b600b700b800b900ba00bb00bc00be00c000c100c200c2
00b900ba00bb00bc00bd00be00bf00c000c100c200c400ba00bb00be00bf
00c000c200c300c400b900ba00bf00c000c200c600c700c900ca00cb00cc
00cf00c500c700ce00c500c700c800cf00d000d200d300d7010d00d000d1
00e900d000fd00d005e4000e0041000005ba009c009c005e005e00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000051a
001500a0fff8ff77fff803480066015401cc00ac00a200b4008c0101006e
00000000000000000000011f000a04e2001400b4fff6035c00140028fdda
0568fea2ffef405a868574737271706f6e6d6c6b6a696867666564625f5e
5d5c5b5a59585554535251504f4e4d4c4b4a494847464544434241403f3e
3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a0908
07060504030201002c4523466020b02660b004262348482d2c4523462361
20b02661b004262348482d2c45234660b0206120b04660b004262348482d
2c4523462361b0206020b02661b02061b004262348482d2c45234660b040
6120b06660b004262348482d2c4523462361b0406020b02661b04061b004
262348482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320
b08d44235920b0ed51582320b04d44235920b0042651582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b02823
70b10228453ab10200080d2d2c2045b00325456164b050515845441b2121
592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b000
8b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a03458a
8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c4b
525845441b2121592d2c01b005251023208af500b0016023edec2d2c01b0
05251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001
600110203c003c2d2c20b001610110203c003c2d2c00b00743b006430b2d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2c45234560234560234560
23766818b08062202d2cb00426b00426b00425b0042545234520b0032660
62636820b0032661658a2344442d2c2045b0005458b040442045b0406144
1b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f2370b0
1423421b2121592d2c4b515820b0032545695358441b2121591b2121592d
2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a60442d
2c45234560442d2c4b235158b90033ffe0b134201bb3330034005944442d
2cb0164358b00326458a586466b01f601b64b020606620581b21b04059b0
01615923586559b02923442310b029e01b2121212121592d2cb0164358b0
04254564b020606620581b21b04059b0016123586559b0292344b00425b0
0725082058021b0359b0052510b004252046b0042523423cb0072510b006
252046b00425b0016023423c2058011b0059b0052510b00425b029e0b007
2510b00625b029e0b00425b00725082058021b0359b00425b003254348b0
0625b00325b0016043481b2159212121212121212d2cb0164358b0042545
64b020606620581b21b04059b0016123581b6559b0292344b00525b00825
082058021b0359b0042510b005252046b0042523423cb00425b0072508b0
072510b006252046b00425b0016023423c2058011b0059b0042510b00525
b029e0b02920456544b0072510b00625b029e0b00525b00825082058021b
0359b00525b003254348b00425b0072508b00625b00325b0016043481b21
59212121212121212d2c02b00425202046b004252342b0052508b0032545
48212121212d2c02b0032520b0042508b0022543482121212d2c45232045
1820b00050205823652359236820b040505821b04059235865598a60442d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2cb000214b5458381b2121592d2c
b002435458b0462b1b21212121592d2cb002435458b0472b1b212121592d
2cb002435458b0482b1b21212121592d2cb002435458b0492b1b21212159
2d2c2320b000508a8a64b10003255458b0401bb10103255458b005438b59
b04f2b5923b0622b2321235865592d2cb108000c215460432d2c01462346
6023466123201020468a61b8ff80628ab140408a704560683a2d2c208a23
49648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d
2cb1020042b123018851b1400188535a58b910000020885458b202010243
604259b12401885158b920000040885458b2020202436042b12401885458
b2022002436042004b014b5258b2020802436042591bb940000080885458
b202040243604259b94000008063b80100885458b202080243604259b940
00010063b80200885458b202100243604259b12601885158b94000020063
b80400885458b202400243604259b94000040063b80800885458b2028002
43604259b12801885158b94000080063b81000885458ba00020100000243
604259595959595959b10002435458400a0540084009400c020d021bb101
02435458b2054008ba010000090100b30c010d011bb18002435258b20540
08b80180b109401bb901000002435258b2054008ba0180000901401bb901
800002435258b2054008b80200b109401bb2054008ba0100000901005959
59b9400000808855b94000020063b8040088555a58b30c000d011bb30c00
0d0159595942424242422d2c451868234b51582320452064b04050587c59
688a6059442d2cb00016b00225b0022501b001233e00b002233eb1010206
0cb00a236542b00b234201b001233f00b002233fb10102060cb006236542
b0072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b0
042510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58
b0092b5920b005254ab0042547b004254760b0062547b0806361b00225b0
005558b00325b00725496359b0082558001b0159b00425b0062549b00925
5cb009255a58b0092b59b0072546b0806361b0032520b0005558631b2159
612320b0005558b080631b21b08059b0592bb006255c586959b004252020
10b00048233ab0062658001b0159b0052658b003252f598a12233221212d
2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b0
072559b00225b00225070cb005256323b00625636020b940000400635358
21b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1b
b00426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab0
0b2eb00525b0052507595920b0005558b00525b0052587b00725b007250b
b0092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b008
25b00b254923b00625b0062587b00a2510b00b25c15920b00051b8005223
78b00161b00225b00725b0072507b00a25b00d254961b08062b00525b005
250bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b0
0625b0062507b00925b00c2549b0032554b8ffa723792121212121212121
212121212d2c23b0005458b9400000001bb900004000598ab0005458b940
0000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9000040
00590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b0
5b2b2d2cb00426b00426080db00426b00426080db05b2b2d2cb0022563b0
206066b00225b82000626023622d2c204569442d2c234ab1024e2b2d2c23
4ab1014e2b2d2c238a4a234564b0022564b002256164b003435258212064
59b1024e2b23b000505865592d2c238a4a234564b0022564b002256164b0
0343525821206459b1014e2b23b000505865592d2c20b003254ab1024e2b
8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b003258ab0672b8a
103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003254660b004
252eb00425b00425b0042620b000505821b06a1bb06c592bb0032546b003
25466061b08062208a2010233a232010233a2d2cb0032547b003254760b0
052547b0806361b00225b00625496323b005254ab080632058621b2159b0
042646608a468a4660b02063612d2cb00426b00425b00425b00426b06e2b
208a2010233a232010233a2d2c2320b001545821b00225b1024e2bb08050
20605920606020b001515821211b20b005515821206661b0402361b10003
2550b00325b00325505a5820b00325618a535821b000591b21591bb00754
582066616523211b2121b000595959b1024e2b2d2cb00225b004254ab000
5358b0001b8a8a238ab00159b004254620666120b00526b0062649b00526
b00526b0702b236165b02060206661b02061652d2cb0022546208a20b000
505821b1024e2b1b452321596165b00225103b2d2cb0042620b802006220
b80200638a236120b05d602bb00525118a128a20398a58ba005d10000004
266356602b23212010204620b1024e2b23611b2321208a201049b1024e2b
593b2d2cba005d10000009256356602bb00525b00525b00526b06d2bb15d
0725602bb00525b00525b00525b00525b06f2bba005d1000000826635660
2b20b0005258b0502bb00525b00525b00725b00725b00525b0712bb00217
38b00052b00225b001525a58b00425b0062549b00325b00525496020b040
5258211bb000525820b0025458b00425b00425b00725b0072549b0021738
1bb00425b00425b00425b0062549b0021738595959595921212121212d2c
b12801885158b94000040063b8080088545c1bb001592d2cb12801885158
b94000040063b8080088545c1bb001592d000001000000063333a1099dfd
5f0f3cf50019080000000000bbeb7ccc00000000d5968a66fbfafd8009ec
083600000009000200000000000000010000079efdda00000aa0fbfafaa0
09ec000100000000000000000000000000000025040e000001cf0000050c
005b06d700ac03e6000f03d5005c043400990362005a0434006003fb005d
0271002503c400350434009901d6008503a3009901d60099066400990434
00990438005a0434009902ca00990321005102ae002104340094039d0022
05b800350329005901ff002a022400bb0205009702730045040e0048040e
00ae040e0072040e0067040e006503fc005e000000bf00bf0184024602ba
038c043e04e90598065706ec07fc0892091809c10a0c0b070baa0c490cf8
0d820e690efb0f9e106a116b11dc12161269129412c01384144e1509161e
16f1173c000100000025043a00170108000800020010002f008700001236
0235000400010000000100120001000000000006000e00004d4554504f56
2b43616c69627269b10903415302c802c60038001f02c702c60038001f02
dd003802da005502d9003802d7005502d8003802d7005502d6003802d500
5502d4003802d3005502d2003802d1005502bf003802be005502bd003802
bc0055000402db003402db005402db0003003402db005402db006402db00
a402db00d402db0005006b02d50001000b02d10001001402c2004402c200
6402c2007402c2009402c2000500a402be000100a402bc000100200284b4
0918014a20b80283b40918014a20b80282b40918014a20b80281b4091801
4a20b80280b40918014a20b8027fb40918014a20b8027eb40918014a20b8
027db40918014a20b8027cb40918014a20b8027bb40918014a20b8027ab4
0918014a20b80279b40918014a20b80278b40918014a20b80277b4091801
4a20b80276b40918014a20b80275b40918014a20b80274b40918014a20b8
0273b40918014a20b80271b40918014a20b80270b40918014a20b8026fb4
0918014a20b8026eb40918014a20b8026db40918014a20b8026cb4091801
4a20b8026bb40918014a20b8026ab40918014a20b80269b40918014a20b8
0268b40918014a20b80267b40918014a20b80266b40918014a20b80265b4
0918014a20b80264b40918014a20b80263b40918014a20b80262b4091801
4a20b80261b40918014a20b80260b40918014a20b8025fb40918014a20b8
025eb40918014a20b8025db40918014a20b8025cb40918014a20b8025bb4
0918014a20b8025ab40918014a20b80259b40918014a20b80258b4091801
4a20b80257b40918014a20b80256b40918014a20b80255b40918014a20b8
0254b40918014a20b80253b40918014a20b80252b40918014a20b80251b4
0918014a20b80250b40918014a20b8024fb40918014a20b8024eb4091801
4a20b8024db40918014a20b8024cb40918014a20b8024bb40918014a20b8
024ab40918014a20b80249b40918014a20b80248b40918014a20b80247b4
0918014a20b80246b40918014a20b80245b40918014a20b80244b4091801
4a20b80243b40918014a20b80242b40918014a20b80241b40918014a20b8
0240b40918014a20b8023fb40918014a20b8023eb40918014a20b8023db4
0918014a20b8023cb40918014a20b8023bb40918014a20b8023ab4091801
4a20b80239b40918014a20b80238b40918014a20b80237b40918014a20b8
0236b40918014a20b80235b40918014a20b80234b40918014a20b80233b4
0918014a20b80232b40918014a20b80231b40918014a20b80230b4091801
4a20b8022fb40918014a20b8022eb40918014a20b8022db40918014a20b8
022cb40918014a20b8022bb40918014a20b8022ab40918014a20b80229b4
0918014a20b80228b40918014a20b80227b40918014a20b80226b4091801
4a20b80225b40918014a20b80224b40918014a20b80223b40918014a20b8
0222b40918014a20b80221b40918014a20b80220b40918014a20b8021fb4
0918014a20b8021eb40918014a20b8021db40918014a20b8021cb4091801
4a20b8021bb40918014a20b8021ab40918014a20b80219b40918014a20b8
0218b40918014a20b80217b40918014a20b80216b40918014a20b80215b4
0918014a20b80214b40918014a20b80213b40918014a20b80212b4091801
4a20b80211b40918014a20b80210b40918014a20b8020fb40918014a20b8
020eb40918014a20b8020db40918014a20b8020cb40918014a20b8020bb4
0918014a20b8020ab40918014a20b80209b40918014a20b80208b4091801
4a20b80207b40918014a20b80206b40918014a20b80205b40918014a20b8
0204b40918014a20b80203b40918014a20b80202b40918014a20b80201b4
0918014a20b80200b40918014a20b801ffb40918014a20b801feb4091801
4a20b801fdb40918014a20b801fcb40918014a20b801fbb40918014a20b8
01fab40918014a20b801f9b40918014a20b801f8b40918014a20b801f7b4
0918014a20b801f6b40918014a20b801f5b40918014a20b801f4b4091801
4a20b801f3b40918014a20b801f2b40918014a20b801f1b40918014a20b8
01f0b40918014a20b801efb40918014a20b801eeb40918014a20b801edb4
0918014a20b801ecb40918014a20b801ebb40918014a20b801eab4091801
4a20b801e9b40918014a20b801e8b40918014a20b801e7b40918014a20b8
01e6b40918014a20b801e5b40918014a20b801e4b40918014a20b801e3b4
0918014a20b801e2b40918014a20b801e1b40918014a20b801e0b4091801
4a20b801dfb40918014a20b801deb40918014a20b801ddb40918014a20b8
01dcb40918014a20b801dbb40918014a20b801dab40918014a20b801d9b4
0918014a20b801d8b40918014a20b801d7b40918014a20b801d6b4091801
4a20b801d5b40918014a20b801d4b40918014a20b801d3b40918014a20b8
01d2b40918014a20b801d1b40918014a20b801d0b40918014a20b801cfb4
0918014a20b801ceb40918014a20b801cdb40918014a20b801ccb4091801
4a20b801cbb40918014a20b801cab40918014a20b801c9b40918014a20b8
01c8b40918014a20b801c7b40918014a20b801c6b40918014a20b801c5b4
0918014a20b801c4b40918014a20b801c3b40918014a20b801c2b4091801
4a20b801c1b40918014a20b801c0b40918014a20b801bfb40918014a20b8
01beb40918014a20b801bdb40918014a20b801bcb40918014a20b801bbb4
0918014a20b801bab40918014a20b801b9b40918014a20b801b8b4091801
4a20b801b7b40918014a20b801b6b40918014a20b801b5b40918014a20b8
01b4b40918014a20b801b3b40918014a20b801b2b40918014a20b801b1b4
0918014a20b801b0b40918014a20b801afb40918014a20b801aeb4091801
4a20b801adb40918014a20b801acb40918014a20b801abb40918014a20b8
01aab40918014a20b801a9b40918014a20b801a8b40918014a20b801a7b4
0918014a20b801a6b40918014a20b801a5b40918014a20b801a4b4091801
4a20b801a3b40918014a20b801a2b40918014a20b801a1b40918014a20b8
01a0b40918014a20b8019fb40918014a20b8019eb40918014a20b8019db4
0918014a20b8019cb40918014a20b8019bb40918014a20b8019ab4091801
4a20b80199b40918014a20b80198b40918014a20b80197b40918014a20b8
0196b40918014a20b80195b40918014a20b80194b40918014a20b80193b4
0918014a20b80192b40918014a20b80191b40918014a20b80190b4091801
4a20b8018fb40918014a20b8018eb40918014a20b8018db40918014a20b8
018cb40918014a20b8018bb40918014a20b8018ab40918014a20b80189b4
0918014a20b80188b40918014a20b80187b40918014a20b80186b4091801
4a20b80185b40918014a20b80184b40918014a20b80183b40918014a20b8
0182b40918014a20b80181b40918014a20b80180b40918014a20b8017fb4
0918014a20b8017eb40918014a20b8017db40918014a20b8017cb4091801
4a20b8017bb40918014a20b8017ab40918014a20b80179b40918014a20b8
0178b40918014a20b80177b40918014a20b80176b40918014a20b80175b4
0918014a20b80174b40918014a20b80173b40918014a20b80172b4091801
4a20b80171b40918014a20b80170b40918014a20b8016fb40918014a20b8
016eb40918014a20b8016db40918014a20b8016cb40918014a20b8016bb4
0918014a20b8016ab40918014a20b80169b40918014a20b80168b4091801
4a20b80167b40918014a20b80166b40918014a20b80165b40918014a20b8
0164b40918014a20b80163b40918014a20b80162b40918014a20b80161b4
0918014a20b80160b40918014a20b8015fb40918014a20b8015eb4091801
4a20b8015db40918014a20b8015cb40918014a20b8015bb40918014a20b8
015ab40918014a20b80159b40918014a20b80158b40918014a20b80157b4
0918014a20b80156b40918014a20b80155b40918014a20b80154b4091801
4a20b80153b40918014a20b80152b40918014a20b80150b40918014a20b8
014fb40918014a20b8014eb40918014a20b8014cb40918014a20b8014bb4
0918014a20b8014ab40918014a20b80149b40918014a20b80148b4091801
4a20b80147b40918014a20b80146b40918014a20b80145b40918014a20b8
0144b40918014a20b80143b30918014ab80284b21e3e1fb80283b21e151f
b80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb802
7eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab2
1e3e1fb80279b21d411fb80278b21d431fb80277b21d431fb80276b21d43
1fb80275b21d411fb80274b21d431fb80273b21d431fb80272b21d411fb8
0271b21d421fb80270b21d421fb8026fb21d421fb8026eb21d431fb8026d
b21d431fb8026cb21d431fb8026bb21c451fb8026ab21c451fb80269b21c
451fb80268b21c451fb80267b21c451fb80266b21c441fb80265b21c451f
b80264b21c451fb80263b21c451fb80262b21c451fb80261b21c451fb802
60b21c451fb8025fb21c451fb8025eb21c441fb8025db21c451fb8025cb2
1c451fb8025bb21c451fb8025ab21c451fb80259b21c451fb80258b21c45
1fb80257b21c451fb80256b21c451fb80255b21c451fb80254b21c451fb8
0253b21c451fb80252b21c451fb80251b21c451fb80250b21c451fb8024f
b21c451fb8024eb21c451fb8024db21c451fb8024cb21c451fb8024bb21c
451fb8024ab21b491fb80249b21b491fb80248b21b4a1fb80247b21b4a1f
b80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243b21b4c1fb802
42b21b4b1fb80241b21b491fb80240b21b491fb8023fb21b4a1fb8023eb2
1b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c
1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb8
0235b21b491fb80234b21b491fb80233b21b4a1fb80232b21b4a1fb80231
b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b
4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1f
b80228b21b4c1fb80227b21b491fb80226b21b491fb80225b21b4a1fb802
24b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b2
1b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c
1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb8
0217b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213
b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a
4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1f
b8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207b21a4f1fb802
06b219501fb80205b219511fb80204b219511fb80203b219501fb80202b2
19511fb80201b219511fb80200b219511fb801ffb219511fb801feb21950
1fb801fdb219511fb801fcb219511fb801fbb219511fb801fab219501fb8
01f9b219511fb801f8b219511fb801f7b219511fb801f6b219511fb801f5
b218541fb801f4b218531fb801f3b218541fb801f2b218541fb801f1b218
541fb801f0b218531fb801efb218541fb801eeb218541fb801edb218541f
b801ecb218531fb801ebb218531fb801eab218541fb801e9b218541fb801
e8b218541fb801e7b218541fb801e6b218531fb801e5b218541fb801e4b2
18531fb801e3b218541fb801e2b218541fb801e1b218541fb801e0b21853
1fb801dfb218531fb801deb218541fb801ddb218541fb801dcb218541fb8
01dbb218541fb801dab218531fb801d9b218541fb801d8b218541fb801d7
b217571fb801d6b217561fb801d5b217561fb801d4b217571fb801d3b217
571fb801d2b217571fb801d1b217571fb801d0b217561fb801cfb217561f
b801ceb217571fb801cdb217571fb801ccb217571fb801cbb217571fb801
cab217561fb801c9b217561fb801c8b217571fb801c7b217571fb801c6b2
17571fb801c5b217571fb801c4b217571fb801c3b217561fb801c2b21757
1fb801c1b217571fb801c0b217571fb801bfb217561fb801beb217561fb8
01bdb217571fb801bcb217571fb801bbb217571fb801bab217571fb801b9
b217571fb801b8b217561fb801b7b217571fb801b6b217571fb801b5b217
571fb801b4b217571fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1f
b801b0b2165b1fb801afb2165b1fb801aeb2165b1fb801adb2165b1fb801
acb2165b1fb801abb2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2
163f1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b
1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8
019fb2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2165b1fb8019b
b2165b1fb8019ab2165b1fb80199b2165b1fb80198b2163e1fb80197b216
5b1fb80196b2165b1fb80195b2165b1fb80194b2163e1fb80193b2163f1f
b80192b2163f1fb80191b2165b1fb80190b2165b1fb8018fb2165b1fb801
8eb2165b1fb8018db2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2
165b1fb80189b2165b1fb80188b2165b1fb80187b2165b1fb80186b21561
1fb80185b215621fb80184b215621fb80183b215661fb80182b215661fb8
0181b215551fb80180b215451fb8017fb215361fb8017eb215361fb8017d
b215611fb8017cb215621fb8017bb215621fb8017ab215641fb80179b215
661fb80178b215661fb80177b215661fb80176b215661fb80175b215661f
b80174b215661fb80173b215451fb80172b215621fb80171b215621fb801
70b215631fb8016fb215641fb8016eb215661fb8016db215661fb8016cb2
15661fb8016bb215661fb8016ab215661fb80169b215621fb80168b21562
1fb80167b215611fb80166b215641fb80165b215641fb80164b215661fb8
0163b215661fb80162b215661fb80161b215661fb80160b215661fb8015f
b215661fb8015eb215551fb8015db215451fb8015cb215451fb8015bb215
361fb8015ab215611fb80159b215621fb80158b215621fb80157b215631f
b80156b215641fb80155b215661fb80154b215661fb80153b215661fb801
52b215661fb80151b214401fb80150b214551fb8014fb214561fb8014eb2
14831fb8014db2142d1fb8014cb214401fb8014bb214401fb8014ab21441
1fb80149b214401fb80148b214401fb80147b214411fb80146b2147e1fb8
0145b214871fb80144b2147f1fb80143b214801fb80142b212461fb80141
b212461fb80140b212461fb8013fb212461fb8013eb212441fb8013db212
461fb8013cb211591fb8013bb211591fb8013ab2115b1fb80139b2115b1f
b80138b211471fb80137b211581fb80136b2115a1fb80135b2115b1fb801
34b2115b1fb80133b2112c1fb80132b211471fb80131b211551fb80130b2
11571fb8012fb211571fb8012eb211581fb8012db211591fb8012cb21159
1fb8012bb2115a1fb8012ab2115a1fb80129b2115b1fb80128b2115b1fb8
0127b2115b1fb80126b2115b1fb80125b211561fb80124b211561fb80123
b211571fb80122b211581fb80121b211591fb80120b2115a1fb8011fb211
5a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1f
b8011ab2115b1fb80119b2105d1fb80118b2105e1fb80117b2105f1fb801
16b2105f1fb80115b2105f1fb80114b2105f1fb80113b2105f1fb80112b2
105d1fb80111b2105e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f
1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb8
0109b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105d1fb80105
b2105e1fb80104b2105f1fb80103b2105f1fb80102b2105f1fb80101b210
5f1fb8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621f
fa0f621ff90f631ff80f641ff70f641ff60f641ff50f641ff40f621ff30f
621ff20f631ff10f641ff00f641fef0f641fee0f641fed0f621fec0f621f
eb0f631fea0f641fe90f641fe80f641fe70f641fe60e671fe50e681fe40e
681fe30e681fe20e681fe10e671fe00e681fdf0e681fde0e681fdd0e671f
dc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d
6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1f
cd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d
681fc50d671fc40d261fc30d311fc20d311fc10d311f40ffc00d311fbf0d
311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c741fb80c741f
b70c711fb60c711fb50c721fb40c731fb30c741fb20c741fb10c741fb00c
741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1f
a80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b
7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f
990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b
6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f
8403381f8301381f8255805581ab80557f557d557eab7d550b7d010b7d1b
7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a557955775578ab7755ba
028600660285403c5576ab755504751475747503f47501ab750144750130
750102007510752075030c7455725573ab7255007250728072b072043bb0
72e072020072010ab8ffc0b3721b1e46b8ffc0407c720d104671556f5570
ab6f556e666d556a03251f6938675568ab67556638645565ab6455633862
55613860555f385d555eab5d555c385a555bab5a55593858555703251f56
38545555ab54555338515552ab51554f384e554e03251f4d384b554cab4b
554a38485549ab4855473846554503381f001c101c201c0310b8ffc0404e
1c1b1e46001b0142301b401be01bf01b04001bb01bc01b03120f1a1f1a02
290f1901434f19016f197f198f19030f18cf18024018292c460f17cf17df
17ef1704134017292e460016101620160315b8ffc0b3164d5446b8ffc0b3
163f4446b8ffc0b316313546b8ffc0401f162326460f15010f151f150245
ef1501860003012001010001100120010308b8ffc0b401151f4603bd0100
010000050001019000542b4bb80800524bb008505bb00188b02553b00188
b040515ab00688b000555a5b58b101018e59b101024354b0144b515a58b1
01018e59858d8d001d424bb01d5358b203a0a01d42594bb0805358b20340
401d42594bb0ff5358b20300001d42592b5e7375732b58403d0011e011f0
110315bf10cf10020f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0e
ff0e03400e3137460f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040
270c5054460f0b1f0b02553f0b4f0b02400b3f4346400b2d304600030120
01010001100120010308b8ffc0b301151f462b5e7375732b2b745e732b2b
5e73742b73742b7374745e735901755e73742b2b2b2b5e732b5e732b7374
755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b
2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff0284006402830064028200
640281006402800064027f0064027e0064027d0064027c0064027b006402
7a0064027900640278006402770064027600640275006402740064027300
640271006402700064026f0064026e0064026d0064026c0064026b006402
6a0064026900640268006402670064026600640265006402640064026300
64026200640261006402600064025f0064025e0064025d0064025c006402
5b0064025a00640259006402580064025700640256006402550064025400
6402530064025200640251006402500064024f0064024e0064024d006402
4c0064024b0064024a006402490064024800640247006402460064024500
640244006402430064024200640241006402400064023f0064023e006402
3d0064023c0064023b0064023a0064023900640238006402370064023600
64023500640234006402330064023200640231006402300064022f006402
2e0064022d0064022c0064022b0064022a00640229006402280064022700
640226006402250064022400640223006402220064022100640220006402
1f0064021e0064021d0064021c0064021b0064021a006402190064021800
640217006402160064021500640214006402130064021200640211006402
100064020f0064020e0064020d0064020c0064020b0064020a0064020900
6402080064020700640206006402050064020441ff006402030064020200
64020100640200006401ff006401fe006401fd006401fc006401fb006401
fa006401f9006401f8006401f7006401f6006401f5006401f4006401f300
6401f2006401f1006401f0006401ef006401ee006401ed006401ec006401
eb006401ea006401e9006401e8006401e7006401e6006401e5006401e400
6401e3006401e2006401e1006401e0006401df006401de006401dd006401
dc006401db006401da006401d9006401d8006401d7006401d6006401d500
6401d4006401d3006401d2006401d1006401d0006401cf006401ce006401
cd006401cc006401cb006401ca006401c9006401c8006401c7006401c600
6401c5006401c4006401c3006401c2006401c1006401c0006401bf006401
be006401bd006401bc006401bb006401ba006401b9006401b8006401b700
6401b6006401b5006401b4006401b3006401b2006401b1006401b0006401
af006401ae006401ad006401ac006401ab006401aa006401a9006401a800
6401a7006401a6006401a5006401a4006401a3006401a2006401a1006401
a00064019f0064019e0064019d0064019c0064019b0064019a0064019900
640198006401970064019600640195006401940064019300640192006401
91006401900064018f0064018e0064018d0064018c0064018b0064018a00
640189006401880064018700640186006401850064418001840064018300
64018200640181006401800064017f0064017e0064017d0064017c006401
7b0064017a00640179006401780064017700640176006401750064017400
6401730064017200640171006401700064016f0064016e0064016d006401
6c0064016b0064016a006401690064016800640167006401660064016500
640164006401630064016200640161006401600064015f0064015e006401
5d0064015c0064015b0064015a0064015900640158006401570064015600
640155006401540064015300640152006401500064014f0064014e006401
4c0064014b0064014a006401490064014800640147006401460064014500
6401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b00737373737373742b2b2b2b
2b2b2b2b2b2b185f5e0000>
[11897 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 9260 28 <000200bbfff7018d0395001300270032b0852b58b10014b8027bb70a1e23
194c050f48003fcd3fcd012f33e13231301bb623194c05400f4800183f1a
cd3fcd30315901140e0223222e0235343e0233321e0211140e0223222e02
35343e0233321e02018d0919281f20281809091828201f2819090919281f
20281809091828201f2819090320202c1b0b0b1b2c20222d1b0b0b1b2dfd
28212c1b0b0b1b2c21212d1a0c0c1a2d>MAAAAA+Calibri AddT42Char 

1 0 1 <> MAAAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>MAAAAA+Calibri AddT42Char 
MAAAAA+Calibri /CharStrings get begin
/g28 28 def
/g1 1 def
end
MAAAAA+Calibri /Encoding get
dup 33 /g28 put
dup 34 /g1 put
pop
end
%ADOEndSubsetFont
/OPXJEJ+Calibri /MAAAAA+Calibri findfont ct_VMDictPut/OPXJEJ+Calibri*1 [33{/.notdef}rp /g28 /g1 221{/.notdef}rp]OPXJEJ+Calibri nfOPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf99.8307 360.753 mo(!")[6.37453 0 ]xsh.165377 1 1 .0823682 cmyk
%ADOBeginSubsetFont: KAAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPXJEI+Calibri-Bold gcheck setglobal} if
1 1684 6 <0001000cfffa03ea050e00220053b10102435558b10006b80294b3181106
12b8ffe8b40b0f014c12b8015bb4401d510c5500183f3f1aed2b32012fc4
fdcd30311bb10612b8ffe8b40b0f014c12b8015bb4401d510c5500183f3f
1aed2b3230315901140e02232111140e0223222e02351121222e0235343e
023321321e0203ea050a0f09febc0d1e332626331e0dfebc0a0e0a05050a
0e0a0390090f0a0504a21d29190cfbed0a100a06060a100a04130c19291d
1e2a190b0b192a00>OPXJEI+Calibri-Bold AddT42Char 
1 3956 13 <00020048ffe9040403d700130027006fb10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1aed2b3fed2b012fedd4ed30311bb90019ffe8b40b
0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1aed
2b3fed2b30315901140e0223222e0235343e0233321e0205342e0223220e
0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fefd15
32533f3854361b1631543e3954361a01e972bc884a427eb87672bd874a41
7eb881426f522e294f6f47426f522d294e6f>OPXJEI+Calibri-Bold AddT42Char 
1 4436 15 <00010017ffec028e04b1003a0091b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1aed3fed2bcd3fed2b012f
33fd32c4321112392f30311bb9002dffe8b40b0f014c2db8011fb323481d
0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1aed3f
ed2bcd3fed2b30315925140e0423222e02351123222635343e0233333534
3e0233321e02151533321e02151406232311141633323e0233321e02028e
0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a0f0a
051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c92f37
1d28170ac70a100b05050b100ac70a17281d372ffe5d4949070907071524
>OPXJEI+Calibri-Bold AddT42Char 
1 1872 7 <00020047ffe9037603d7003300400127b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f
5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed323930311b
400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e41
2ab80118401be02201037d228d2202402250226022030f221f22020c0422
22041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe8400910014d
3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f5e5d5d5d5f5ded1112
392f2b5d71ed5d7130315925140606232226263535060623222e0235343e
02333335342e0223220e0223222e0235343e0433321e02150723220e0215
1416333236370376142b2a2d2911378d56477757303d79b4775711274130
3f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35592e
1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a2617
1f241d231e132955865cda122433213840363400>OPXJEI+Calibri-Bold AddT42Char 
1 3438 11 <0001007efffa017a05700015003eb10102435558400f0d15010b0b010b0a
010d00010b0400b80260b5400a1046054c00183f3f012f1aed30315f5e5d
5d5d5d1bb31046054c00183f3f30315925140e0223222e023511343e0233
321e0215017a0c1d302525301d0c0c1d302525301d0c220a0f0a05050a0f
0a05230a100b06060b100a00>OPXJEI+Calibri-Bold AddT42Char 
1 3570 12 <0001007efffa060903d7005000a9b10102435558b14613b8025fb31e1e32
0ab8025fb2503e27bb026000320010ffe8b40b0f014c10b8014db24b4a24
b8ffe8b40b0f014c24b8014d400e40414a3e462d38492d4c194c054c0018
3f3f3f3f1239393f1aed2b3fed2b012fed39d4ed11392fed3930311bb900
10ffe8b40b0f014c10b8014db24b4a24b8ffe8b40b0f014c24b8014d400e
40414a3e462d38492d4c194c054c00183f3f3f3f1239393f1aed2b3fed2b
30315925140e0223222e023511342e022322060711140e0223222e023511
342e022322060711140e0223222e023511343e0233321e02151536363332
1e02173e0333321e021506090c1c302526301d0b112335252d5c360c1d30
2425301d0c112236242e5c350c1d302525301d0c0a1a291f202a170a4a93
503758453211284d4b4b27597a4b20220a0f0a05050a0f0a02112d4a351d
4643fdaf0a0f0a05050a0f0a02112d4a351d4643fdaf0a0f0a05050a0f0a
037c0a0f0a05050a0f0a675050172b3c252b3e27133c678a4d00>OPXJEI+Calibri-Bold AddT42Char 
1 5198 18 <0001003b018f0238025d000f0011b200070bb901210004002fed012fcd30
31011406232122263534363321321e0202381618fe601916161901a00c11
0c0501f73a2e2f39382e0a182800>OPXJEI+Calibri-Bold AddT42Char 
1 4982 17 <00010016fffa03b303c6002c004eb10102435558b210211fb80284b41521
062123b8025d400b0040212849210b1a490b4c00183f3f12393f01192f1a
18dded123910dded123930311bb72849210b1a490b4c00183f3f12393f30
315901140e0207010e0323222e0227012e0235343e0233321e0217131737
133e0333321e0203b301030504fef405112743363543261105fef4060701
0b1c312529321d0c04cb0606c8030d1c2f26252f1a0a039f050e11160efc
d911150c04050c1510032714200e060a0f0a040509110cfd711919028f0c
110905040a0f>OPXJEI+Calibri-Bold AddT42Char 
1 920 4 <0001008dfffa0671050e003c00d7b10102435558400b0d3030172f2f0a2e
18181ab80264b424310c0c0ab80264b700243651190c0b18bb012d004000
2efff0b41023024c31b8fff040201023024c17101023024c0d101023024c
0d172f30312e061f28511f551255055500183f3f3f3f1217392b2b2b2b1a
ed3232323f012fd4ed32113310ed32113311393d2f3333113330311bb536
51190c0b18bb012d0040002efff0b41023024c31b8fff040201023024c17
101023024c0d101023024c0d172f30312e061f28511f551255055500183f
3f3f3f1217392b2b2b2b1aed3232323f30315925140e0223222e02351123
010e0323222e0227012311140e0223222e02351134363333321e02170133
013e033333321e021506710b1d302524301c0c02fe8904121f302222301f
1203fe96020b1e2f2524301d0b362dac2e4230200c01180401220d1f2938
25b11b27190d240a100a06060a100a041dfbe40d110a03050b100b041cfb
e30a100a06060a100a048133360f23392afcfd03012a3a240f0e1b271900
>OPXJEI+Calibri-Bold AddT42Char 
1 1310 5 <0001003fffe9038c0525004900b9b10102435558b900410297b524322432
0c1bb8029cb2000c2ebb012d0037000a012db61137113711163cb8ffe8b4
0b0f014c3cb8012d400c411b05295316180b0f014c16b80158b240055600
183f1aed2b3f123939ed2b1139392f2f10ed10ed012fd4ed1239392f2fed
30311bbc002e012d0037000a012db61137113711163cb8ffe8b40b0f014c
3cb8012d400c411b05295316180b0f014c16b80158b240055600183f1aed
2b3f123939ed2b1139392f2f10ed10ed30315901140e0223222e0435343e
0233321e0233323e0235342e0635343e0233321e0615140e0223222e0223
220e0215141e06038c4c82ae634373583b1a0b04090f0a0e33506f49304c
351c304d6268624d3045759f592e5c503e1407050203070d0b0b30465c37
2b402b152f4f6468644e300184669a6734161f221a312e1f2a1a0b212821
172a3e262c3f312b303d5574515d8d5d2e0e181e140e17231a1d281a0c1c
211b1525341d2b3f312b303d5573>OPXJEI+Calibri-Bold AddT42Char 
1 316 2 <0001008d0000038c050e002c00aeb10102435558b11a27b80292400f0913
2013200009001a180d0f014c1aba01290026ffe8b60d014d26260619b8ff
e8b40b0f014c19b8012e40090d5127180b0f014c27b8012eb24006540018
3f1aed2b3fed2b12392f2bed2b012f2f1239392f2f10ed3230311bb61a18
0d0f014c1aba01290026ffe8b60d014d26260619b8ffe8b40b0f014c19b8
012e40090d5127180b0f014c27b8012eb240065400183f1aed2b3fed2b12
392f2bed2b30315925140e0223212226351134363321321e0215140e0223
211121321e0215140e0223211121321e02038c050a0f09fd76212d2d2102
86090e0a05050a0e09fe320187090f0a05050a0f09fe7901d2090f0a0567
1d27180b272c04682c270a19271e1c27180bfec40b17271c1d26170afe93
0b182700>OPXJEI+Calibri-Bold AddT42Char 
OPXJEI+Calibri-Bold /CharStrings get begin
/g6 6 def
/g13 13 def
/g15 15 def
/g7 7 def
/g11 11 def
/g12 12 def
/g18 18 def
/g17 17 def
/g4 4 def
/g5 5 def
/g2 2 def
end
OPXJEI+Calibri-Bold /Encoding get
dup 41 /g6 put
dup 42 /g13 put
dup 43 /g15 put
dup 44 /g7 put
dup 45 /g11 put
dup 46 /g12 put
dup 47 /g18 put
dup 48 /g17 put
dup 49 /g4 put
dup 50 /g5 put
dup 51 /g2 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPXJEI+Calibri-Bold*1 [33{/.notdef}rp /g3 /g10 /g9 /g16 /g14 /g8 /g1 /g19 /g6 /g13 /g15 /g7 /g11 /g12 /g18 /g17 /g4 /g5 /g2 204{/.notdef}rp]OPXJEI+Calibri-Bold nfOPXJEI+Calibri-Bold*1 [24 0 0 -24 0 0 ]msf111.581 360.753 mo(\)*+,-'+".&)[9.79908 12.8711 8.1432 11.8873 5.88725 5.38315 8.38321 5.88725 19.4953 0 ]xsh211.396 360.753 mo(/)sh218.771 360.753 mo(,0&%,#&'123')[11.5345 11.1506 12.1345 7.9823 11.8705 11.1264 12.1346 5.36633 20.9902 11.3666 11.7505 0 ]xsh.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: MAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPXJEJ+Calibri gcheck setglobal} if
1 7996 24 <00010022fffa037b03bc002c010db0852b58b90023fff840170b0c014c1f
080b0c014c251f011e080b0c014c251e0116b8fff0b30b014d15b8fff0b3
0b014d14b8ffe8b30b014d13b8ffe8b30b014d12b8ffe8b30b014d11b8ff
f040370b014d37110126110127100128050122280b014d3d220124220121
280b014d3f210124210120280b014d3d2001242001270f0176210121b8ff
d04009111548212013014d21b8ffe8400910014d21200f014d21b8ffe8b3
0c014d21b8fff0400c0b014d212849210b1a490b4c003f3f12393f012f2b
2b2b2b2b002b5d31305d5d5d2b5d5d2b5d5d2b015d5d5d5d2b2b2b2b2b2b
5d2b5d2b2b1bb5002101100521b8ffd0400b1115482849210b1a490b4c00
183f3f12393f2b5f5e5d30315901140e0207010e0323222e0227012e0235
343e0233321e0217131737133e0333321e02037b01020302fecd040d1a28
1e1e28190e04fece04050108131f171d23130904fe0403fb020a13211b17
1e1107039f04090a0c07fca90b0e080304080e0a03570c120903080c0702
03080c09fd1a0c0c02e6090c080302080b00>OPXJEJ+Calibri AddT42Char 
1 6916 21 <00010051ffed02ce03ca00490110b0852b58400c2f4b3f4b4f4b7f4baf4b
0541b8fff0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b3
13014d41b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c
1b100d014d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f600
00ffc0400a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2e
dd370aeb115011601170110337113711163cdb411b05294a16e8054d003f
ed3f123939ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b12
39392f2fe12b2b2b2b2b2b31305d1b4025372edd6c110aeb6c0011101120
11030e033711371116293cdb6c411b05294a0516e86c054d00183f2b3f12
39392b1139392f2f5f5e5d2b2b30315901140e0223222e0435343e023332
1e0233323e0235342e0635343e0233321e0615140e0223222e0223220e02
15141e0602ce335e824e30574530160a04060b070b2b3f56382a44321b27
40505551402729527b5224483a291507030303070a06092236492f2a4029
1528405255534027010e456c4a260f171914241f131a10071b201b122336
252634281f222b3e563c3561492c0c1215100c0f16101119100716191613
23301c27352820222a3c5400>OPXJEJ+Calibri AddT42Char 
1 7378 22 <00010021ffef026d04ad003a0089b0852b58b4290011232db8fff0b30f01
4d2db8fff0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b3
0b014d2db801f8400c170d2ded23481d0ded174831b80104b1074d003fed
3fedcd3fed012f33e12b2b2b2b2b32cdc43231301b4011232ded6c23481d
1740170ded6c17480731b80104b26c074d00183f2b3f2b1a10cd3f2b3031
5925140e0423222e02351123222635343e02333335343e0233321e021515
33321e02151406232311141633323e0233321e02026d081020292e174664
401d7e0f1205080d087d0713201819201208e7080c0904120fe737471724
1c1408050905045b1d22100e0906254b734e020e2024131a1107d6070c09
0404090c07d607111a132420fe0a5d5f090a09050e18>OPXJEJ+Calibri AddT42Char 
1 4088 12 <00010099fffa03a005710032009db0852b58b43f34012a13b8ffe8b30b01
4d13b8fff0b40f10014c13b8fff6b30c014d13b8fff0b30d014d13b801f8
40171e0b0a0c014d0b100d014d0b180b014d0b100f10014c0bb801f8400a
00400c014d001e2a1910b80106b72d4a2446194c054c003f3f3f3fed1239
012f2f2be12b2b2b2b10e12b2b2b2b3931305d1bb32a192d10b801064009
6c2d4a2446194c054c00183f3f3f3f2b123930315925140e0223222e0235
11342e022322060711140e0223222e023511343e0233321e021511363633
321e021503a00812201819201208182e49303e7c44081220191820130707
132018192012084790495a7b4c2119080b080404080b08020f4d5e442458
55fd8b080b080404080b080538080c080404080c08fde54b493d66896100
>OPXJEJ+Calibri AddT42Char 
1 2864 9 <0002005dffed039903ca002b003400eab0852b58402a2f363f366f360313
200d014d13200f014d1313212c100c014d2c180b014d2c100d014d2c100f
10014c2cb801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d01
4d04b8ffeeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a
4021212cc78004900402c00401d0040104041c2fdc264a18ea600e700e02
0e09ea1c4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b
5de12b2b2b2b12392f2b2b31305d1b4022042cc76c76040104041c262fdc
6c264a0e18ea6c000e100e020f030e1c09ea6c1c4d00183f2bc45f5e5d2b
3f2b12392f5d2b3031590114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>OPXJEJ+Calibri AddT42Char 
OPXJEJ+Calibri /CharStrings get begin
/g24 24 def
/g21 21 def
/g22 22 def
/g12 12 def
/g9 9 def
end
OPXJEJ+Calibri /Encoding get
dup 35 /g24 put
dup 36 /g21 put
dup 37 /g22 put
dup 38 /g12 put
dup 39 /g9 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPXJEJ+Calibri*1 [33{/.notdef}rp /g28 /g1 /g24 /g21 /g22 /g12 /g9 216{/.notdef}rp]OPXJEJ+Calibri nfOPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf351.546 360.753 mo(#$")[10.7687 9.37695 0 ]xsh377.066 360.753 mo(%&'")[7.99936 12.631 12.0072 0 ]xsh.165377 1 1 .0823682 cmyk
%ADOBeginSubsetFont: MAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPXJEJ+Calibri gcheck setglobal} if
1 6290 19 <00020099fe9403d503ca002a003d00b1b0852b58b53f3f0121360ab8fff0
b30d014d0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0a
b801f84017152b200d014d2b120c014d2b180f10014c2b180b014d2bb802
0a400900150a363521040530b80105b6264a1b49104f39b80105b1054d00
3fed3f3f3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d1bb7
0a36352104052630b8010540096c264a1b49104f0539b80105b26c054d00
183f2b3f3f3f2b12173930315901140e0223222e022711140e0223222e02
3511343e0233321e0215153e0333321e0207342e0223220e020711161633
323e0203d53363925e2844414024081220191820130706121c14151b1207
294c4d512d628a5728ae15335640203e404627447a433e59371a01e976bc
834710223423fe3e080c080404080c0804e9090b080303080b09792a3e29
154c84af754581643c13294331fe9a53583c647c>OPXJEJ+Calibri AddT42Char 
1 1396 5 <0002005cffed033f03ca0033004000f6b0852b5840200f421f422f42030b
0917340c0c014d34100d014d34180b014d34100f10014c34b801f7400e00
27270f00010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8
ffe8b30b014d3ab8ffe8b40f10014c3ab8020840141117c500341034023b
c0340100340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d
04002f3fed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b
5e5d392f10e12b2b2b2b323931305e5d1b400d0b17013417c56c34342e41
222ab8011b40166c00220116042222042e1dea6c2e4a0c3ddc6c0c4d0400
182f3f2b3f2b12392f5f5e5d2b1112392f2b5d3031592514060623222626
3535060623222e0235343e02333335342e0223220e0223222e0235343e04
33321e02150723220e0215141633323637033f101c1b1a1f0e3b91514773
512d3e74a8697c16314e393d6149310c080c0904071b4256663461885426
a48d4464421f5950416f3d180c0c06060c0c5a3f46254666414c704a2546
3450351b1d231d0810190f191d1a231d132c557e54c4172d3f2946534244
>OPXJEJ+Calibri AddT42Char 
1 6640 20 <00010099fffa02a703ca00330086b0852b58b4703501260fb8fff6b30c01
4d0fb8ffe8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f8
4012004013014d004011014d00200d014d001a0ab8012540092b4a260f15
2049154c003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d1bb12b
0ab80125400a6c2b4a260f152049154c00183f3f1239393f2b3031590114
0e0223222e0223220e020711140e0223222e023511343e0233321e021515
3e0333321e0602a70206090808171d24151930353a230812201918201307
06121c17161d100725413a391d0d21241d0c0403010362161e1109090908
142e4c37fdb0080b080404080b080384080b090303090b08833644270f03
080a0a090e1b>OPXJEJ+Calibri AddT42Char 
1 5144 16 <00010099fffa05d003ca0050011eb0852b58401b12100b014d13180b014d
26100b0c014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b
014d13b8fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8
401e1e160d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f1001
4c0ab801f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27
b8fff0b310014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200
100106b24b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f
1239393fed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b
2b2b2b3931305d002b2b2b2b1bb14b10b80106b46c4b4a4124b80106400e
6c414a3e462d38492d4c194c054c00183f3f3f3f1239393f2b3f2b303159
25140e0223222e023511342e022322060711140e0223222e023511342e02
2322060711140e0223222e023511343e0233321e021515363633321e0217
3e0333321e021505d00812201819201308142c442e397345081320181721
1307162c432e397444081220191820130706121c17161d10074c8f493859
4430102d514b47245776491f19080b080404080b080223395e44245855fd
8b080b080404080b080223395e44245855fd8b080b080404080b08038408
0b090303090b0877554f1a2f412831442a133d66894c>OPXJEJ+Calibri AddT42Char 
OPXJEJ+Calibri /CharStrings get begin
/g19 19 def
/g5 5 def
/g20 20 def
/g16 16 def
end
OPXJEJ+Calibri /Encoding get
dup 40 /g19 put
dup 41 /g5 put
dup 42 /g20 put
dup 43 /g16 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPXJEJ+Calibri*1 [33{/.notdef}rp /g28 /g1 /g24 /g21 /g22 /g12 /g9 /g19 /g5 /g20 /g16 212{/.notdef}rp]OPXJEJ+Calibri nfOPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf415.066 360.753 mo(\(\)*\)+'%'*")[12.6238 11.5009 7.88397 11.5009 19.1255 11.8704 7.74017 12 8.37598 0 ]xsh.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: OAAAAA+CambriaMath Initial
ct_T42Dict begin
-1.473 -2.461 2.867 3.113
 256 array 0 1 255 {1 index exch /.notdef put} for  /OAAAAA+CambriaMath
Type42DictBegin
[<000100000008000800080008676c79660000000000000148000001fc6865
6164000000000000008c000000366868656100000000000000c400000024
686d747800000000000000e8000000106c6f636100000000000000f80000
000a6d6178700000000000000104000000206e616d650000000000000124
0000002467646972000000000000000000000000000100000006e66638ef
545c5f0f3cf5001b080000000000b9e6983d00000000d18d01e4f434ec4a
16f118ef00000009000200000000000000010000079afe390000175af434
fda416f1000100000000000000000000000000000004054400be04800073
0484000f04ae005a00000050008c00c900fe000000010000000400c0002d
0097000600020010002f0086000009a41128000300010000000100120001
0000000000060012000055484f534d412b43616d627269614d61746800>
[509 ] AllocGlyphStorage
]def 
76 12 
PrepFor2015
Type42DictEnd
1 160 1 <00030073fff0040d057a001000190022000005222635341a013e01332011
140a010e01032136353426232202012106151416333212019a95922c659f
cf7901222f669cccb301df2f444875c70182fe202f444c70c910b6b66301
22012feb7ffe9068fedffed4e77e02fdd3986968fed8fe86d9947069012d
>OAAAAA+CambriaMath AddT42Char 
1 0 0 <000400be0000048605540028002c0030003400000135343e02373e033534
2623220e020723353e0133321e0215140e02070e031d0117152335011121
1101112111023706162a2417261b0f413e2030241909603c894346633e1c
0f243c2c20261507129001fcfd060361fc3801e71616252a3527192f3339
234b521424321e821e2e1d334629263e3d462d212c27281c066ea1a1fee4
049afb6604f7faac0554>OAAAAA+CambriaMath AddT42Char 
OAAAAA+CambriaMath /CharStrings get begin
/g1 1 def
end
OAAAAA+CambriaMath /Encoding get
dup 33 /g1 put
pop
end
%ADOEndSubsetFont
/OPXJEK+CambriaMath /OAAAAA+CambriaMath findfont ct_VMDictPut/OPXJEK+CambriaMath*1 [33{/.notdef}rp /g1 222{/.notdef}rp]OPXJEK+CambriaMath nfOPXJEK+CambriaMath*1 [24 0 0 -24 0 0 ]msf523.061 360.753 mo(!)sh%ADOBeginSubsetFont: QAAAAA+Calibri-Italic Initial
ct_T42Dict begin
-0.723 -0.273 1.258 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /QAAAAA+Calibri-Italic
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000005146670
676d00000000000005d000000d24676c7966000000000000250400000b26
6865616400000000000012f40000003668686561000000000000132c0000
0024686d74780000000000001350000000246c6f63610000000000001374
000000146d6178700000000000001388000000206e616d65000000000000
13a8000000287072657000000000000013d0000011316764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea7000000000000000000000000004a004c0054005500560057
0059004f004e004f00500051004d005d005f006100630064006500660067
00680069006a006b006c006d006e006d0066006f00700071007200730074
007500760071007400700071007200740075007600780079007a007d0078
0079007a007b007c007d0079007c007a007c007d007e007f00800081007e
007f008000810082007f008000810082007e007f00800081008200830085
008300840085008600870088008900860088008900830084008500860087
008800890083008400850086008700880089008a008b008c008d008e008f
008a008b008c008d008f008a008b008c008d008e008f008a008b008c008d
008e008f0090009500900091009200930094009500980099009a009b009c
00900091009300960097009b009c009f00a2009400960090009100920093
009400950096009700980099009a009b009c009d009e009f00a000a100a2
00a300a600a7009000910092009300940095009600980099009f00bc00bd
00c100c600be00bf00bf00c100c200b900be00c200df00e000e400e700e8
00e9012b0136014700f200f400cf00640066006a006c006d0070006c006d
0069006c0067007300740075007600770078007a007b007c007d007e0081
008400850086008700880089008a0076007a007b007c007e007f00800082
00830084008700880089008a007700850087007900820084008500860087
0088008a0079007a007c007d007e0081008300840086008700880089008b
008c008d008e008f00900091009200940095008b008c008d008e008f0093
009400950093008b008c008d008e00900091009200930094008c008d008e
008f009000910092009300940095009700980099009a009b009c00960097
00980099009a009b009c009a009c009600980099009a009b009c00960097
009b009c009d009e009f00a000a100a2009d009e009f00a000a100a200a1
009d009e009f00a000a100a2009d009e009f00a000a100a200a300a500a3
00a400a500a600a700a300a500a300a400a500a600a700a300a400a500a6
00a700a800a900a800a900aa00ab00ac00a800ab00ac00a800a900aa00ab
00ac00a800a900aa00ab00ac00ad00ae00af00b000b100b300b500b600b7
00b800af00b000b100b300b400b700ad00ae00af00b000b100b200b300b4
00b500b600b700b800ad00ae00af00b000b100b200b300b400b500b600b7
00ba00bb00bc00bd00bf00c000c100c200c300c400ba00bb00bf00c300b9
00ba00bb00bc00bf00c100c200c300ba00bc00bf00c200c700c900cb00cc
00cd00c500c600c700c600c700cb00ce00cf00d100d200db00dc00de00df
00e000e400d600e800e90123012b00d000d1042600d8050e010503c000c2
024e0078042600d702990092000005e4000e4059868574737271706f6e6d
6c6b6a6968676665625f5e5d5c5b5a59585554535251504f4e4d4c4b4a49
4847464544434241403f3e3d3c3b3a39383736352f2e2d2c282625242322
1f181411100f0d0b0a090807060504030201002c4523466020b02660b004
262348482d2c452346236120b02661b004262348482d2c45234660b02061
20b04660b004262348482d2c4523462361b0206020b02661b02061b00426
2348482d2c45234660b0406120b06660b004262348482d2c4523462361b0
406020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0
cd442320b8015a51582320b08d44235920b0ed51582320b04d44235920b0
042651582320b00d44235921212d2c20204518684420b001602045b04676
688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0
282370b101283e01b0282370b10228453ab10200080d2d2c2045b0032545
6164b050515845441b2121592d2c2045b0004360442d2c01b00643b00743
650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c
58b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b0
2c234445b02b23442d2c4b525845441b2121592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2c00b00743b006430b2d2c21210c6423648bb84000622d2c21b0805158
0c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c642364
8bb81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d
2c4523456023456023456023766818b08062202d2cb00426b00426b00425
b0042545234520b003266062636820b0032661658a2344442d2c2045b000
5458b040442045b04061441b2121592d2c45b1302f4523456160b0016069
442d2c4b5158b02f2370b01423421b2121592d2c4b515820b00325456953
58441b2121591b2121592d2c45b01443b0006063b0016069442d2cb02f45
442d2c452320458a60442d2c45234560442d2c4b235158b90033ffe0b134
201bb3330034005944442d2cb0164358b00326458a586466b01f601b64b0
20606620581b21b04059b001615923586559b02923442310b029e01b2121
212121592d2cb0164358b004254564b020606620581b21b04059b0016123
586559b0292344b00425b00725082058021b0359b0052510b004252046b0
042523423cb0072510b006252046b00425b0016023423c2058011b0059b0
052510b00425b029e0b0072510b00625b029e0b00425b00725082058021b
0359b00425b003254348b00625b00325b0016043481b2159212121212121
212d2cb0164358b004254564b020606620581b21b04059b0016123581b65
59b0292344b00525b00825082058021b0359b0042510b005252046b00425
23423cb00425b0072508b0072510b006252046b00425b0016023423c2058
011b0059b0042510b00525b029e0b02920456544b0072510b00625b029e0
b00525b00825082058021b0359b00525b003254348b00425b0072508b006
25b00325b0016043481b2159212121212121212d2c02b00425202046b004
252342b0052508b003254548212121212d2c02b0032520b0042508b00225
43482121212d2c452320451820b00050205823652359236820b040505821
b04059235865598a60442d2c4b53234b515a5820458a60441b2121592d2c
4b545820458a60441b2121592d2c4b53234b515a58381b2121592d2cb000
214b5458381b2121592d2cb002435458b0462b1b21212121592d2cb00243
5458b0472b1b212121592d2cb002435458b0482b1b21212121592d2cb002
435458b0492b1b212121592d2c2320b000508a8a64b10003255458b0401b
b10103255458b005438b59b04f2b5923b0622b2321235865592d2cb10800
0c215460432d2c014623466023466123201020468a61b8ff80628ab14040
8a704560683a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a59
2d2cb012004b014b54422d2cb1020042b123018851b1400188535a58b910
000020885458b202010243604259b12401885158b920000040885458b202
0202436042b12401885458b2022002436042004b014b5258b20208024360
42591bb940000080885458b202040243604259b94000008063b801008854
58b202080243604259b94000010063b80200885458b202100243604259b1
2601885158b94000020063b80400885458b202400243604259b940000400
63b80800885458b202800243604259b12801885158b94000080063b81000
885458ba00020100000243604259595959595959b10002435458400a0540
084009400c020d021bb10102435458b2054008ba010000090100b30c010d
011bb18002435258b2054008b80180b109401bb901000002435258b20540
08ba0180000901401bb901800002435258b2054008b80200b109401bb205
4008ba010000090100595959b9400000808855b94000020063b804008855
5a58b30c000d011bb30c000d0159595942424242422d2c451868234b5158
2320452064b04050587c59688a6059442d2cb00016b00225b0022501b001
233e00b002233eb10102060cb00a236542b00b234201b001233f00b00223
3fb10102060cb006236542b0072342b00116012d2c20b82000628a602362
2d2cb0072558001b0159b0042510b00325b0022520b8ffff545821cd1bed
5921b006255cb006255a58b0092b5920b005254ab0042547b004254760b0
062547b0806361b00225b0005558b00325b00725496359b0082558001b01
59b00425b0062549b009255cb009255a58b0092b59b0072546b0806361b0
032520b0005558631b2159612320b0005558b080631b21b08059b0592bb0
06255c586959b00425202010b00048233ab0062658001b0159b0052658b0
03252f598a12233221212d2cb00625b00a2587b00625b009254ab0005358
b00625b00a251bb00925b0072559b00225b00225070cb005256323b00625
636020b94000040063535821b00426b00426b00a1bb94000040063655158
b0042665b0042665b00a1bb00426b00426b000b00325b003250b0d0ab009
2eb00725b007250b0d0ab00b2eb00525b0052507595920b0005558b00525
b0052587b00725b007250bb0092510b00b25b0092620b8ffff545821cd1b
ed59b00525b0052507b00825b00b254923b00625b0062587b00a2510b00b
25c15920b00051b800522378b00161b00225b00725b0072507b00a25b00d
254961b08062b00525b005250bb00a252338b00625b0062587b00825b008
250bb00a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ff
a723792121212121212121212121212d2c23b0005458b9400000001bb900
004000598ab0005458b9400000001bb90000400059b05b2b2d2c08b00054
58b9400000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940
0000001bb90000400059b05b2b2d2cb00426b00426080db00426b0042608
0db05b2b2d2cb0022563b0206066b00225b82000626023622d2c234ab102
4e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b002256164b00343
525821206459b1024e2b23b000505865592d2c238a4a234564b0022564b0
02256164b00343525821206459b1014e2b23b000505865592d2c20b00325
4ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b00325
8ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003
254660b004252eb00425b00425b0042620b000505821b06a1bb06c592bb0
032546b00325466061b08062208a2010233a232010233a2d2cb0032547b0
03254760b0052547b0806361b00225b00625496323b005254ab080632058
621b2159b0042646608a468a4660b02063612d2cb00426b00425b00425b0
0426b06e2b208a2010233a232010233a2d2c2320b001545821b00225b102
4e2bb0805020605920606020b001515821211b20b005515821206661b040
2361b100032550b00325b00325505a5820b00325618a535821b000591b21
591bb00754582066616523211b2121b000595959b1024e2b2d2cb00225b0
04254ab0005358b0001b8a8a238ab00159b004254620666120b00526b006
2649b00526b00526b0702b236165b02060206661b02061652d2cb0022546
208a20b000505821b1024e2b1b452321596165b00225103b2d2cb0042620
b802006220b80200638a236120b05d602bb00525118a128a20398a58ba00
5d10000004266356602b23212010204620b1024e2b23611b2321208a2010
49b1024e2b593b2d2cba005d10000009256356602bb00525b00525b00526
b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba005d100000
08266356602b20b0005258b0502bb00525b00525b00725b00725b00525b0
712bb0021738b00052b00225b001525a58b00425b0062549b00325b00525
496020b0405258211bb000525820b0025458b00425b00425b00725b00725
49b00217381bb00425b00425b00425b0062549b002173859595959592121
2121212d2cb12801885158b94000040063b8080088545c1bb001592d2cb1
2801885158b94000040063b8080088545c1bb001592d0001000000063333
90a432ec5f0f3cf50019080000000000bbeb7ccc00000000d5968a59fa34
fdcb0a14083600020009000200000000000000010000079efdda00000aa0
fa34fa0b0a140800019a0000000000000000000000000009040e000001cf
0000041d005101d6003f0205004a040e005f040e0020040e0023040e0018
000000bb00bb01760203024602ec03ba04c5059300010000000901200016
00e1000800020010002f008700000a3b0195000400010000000100120001
00000000000600150000434c474152552b43616c696272692d4974616c69
6300b10903b8027ab21e3e1fb80279b21e3e1fb80278b21e0b1fb80277b2
1e0b1fb80276b21e3a1fb80275b21e3a1fb80274b21e3e1fb80273b21e3b
1fb80272b21e3c1fb80271b21e3c1fb80270b21e3c1fb8026fb21e3d1fb8
026eb21e3d1fb8026db21e3e1fb8026cb21e3e1fb8026bb21d411fb8026a
b21d411fb80269b21d421fb80268b21d431fb80267b21d431fb80266b21d
431fb80265b21d431fb80264b21d431fb80263b21d411fb80262b21d421f
b80261b21d421fb80260b21d431fb8025fb21d431fb8025eb21c451fb802
5db21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b2
1c451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c45
1fb80254b21c451fb80252b21c451fb80251b21c451fb80250b21c451fb8
024fb21c451fb8024eb21c441fb8024db21c451fb8024cb21c451fb8024b
b21c451fb8024ab21c451fb80249b21c451fb80248b21c451fb80247b21c
451fb80246b21c451fb80245b21c451fb80244b21b491fb80243b21b4a1f
b80242b21b4a1fb80241b21b4a1fb80240b21b4b1fb8023fb21b4b1fb802
3eb21b4c1fb8023db21b4c1fb8023cb21b4c1fb8023bb21b4c1fb8023ab2
1b4c1fb80253b21b4c1fb80239b21b491fb80238b21b491fb80237b21b4a
1fb80236b21b4a1fb80235b21b4a1fb80234b21b4b1fb80233b21b4b1fb8
0232b21b4c1fb80231b21b4c1fb80230b21b4c1fb8022fb21b4c1fb8022e
b21b4c1fb8022db21b491fb8022cb21b4a1fb8022bb21b4b1fb8022ab21b
4c1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491f
b80225b21b4a1fb80224b21b4a1fb80223b21b4b1fb80222b21b4c1fb802
21b21b4c1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db2
1a4e1fb8021cb21a4e1fb8021bb21a4f1fb8021ab21a4f1fb80219b21a4f
1fb80218b21a4e1fb80217b21a4e1fb80216b21a4f1fb80215b21a4f1fb8
0214b21a4f1fb80213b21a4e1fb80212b21a4e1fb80211b21a4f1fb80210
b21a4e1fb8020fb21a4e1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a
4f1fb8020bb21a4f1fb8020ab21a4f1fb80209b219501fb80208b219511f
b80207b219511fb80206b219511fb80205b219511fb80204b219501fb802
03b219511fb80202b219511fb80201b219511fb80200b219511fb801ffb2
19511fb801feb219511fb801fdb219501fb801fcb219511fb801fbb21951
1fb801fab219511fb801f9b219511fb801f8b219511fb801f7b219511fb8
01f6b218531fb801f5b218531fb801f4b218541fb801f3b218541fb801f2
b218541fb801f1b218541fb801f0b218531fb801efb218531fb801eeb218
541fb801edb218541fb801ecb218541fb801ebb218541fb801eab218531f
b801e9b218531fb801e8b218531fb801e7b218541fb801e6b218541fb801
e5b218541fb801e4b218541fb801e3b218531fb801e2b218531fb801e1b2
18541fb801e0b218541fb801dfb218541fb801deb218541fb801ddb21756
1fb801dcb217561fb801dbb217571fb801dab217571fb801d9b217561fb8
01d8b217561fb801d7b217571fb801d6b217571fb801d5b217571fb801d4
b217571fb801d3b217561fb801d2b217571fb801d1b217561fb801d0b217
561fb801cfb217571fb801ceb217571fb801cdb217571fb801ccb217571f
b801cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801
c7b217571fb801c6b217571fb801c5b217571fb801c4b2163e1fb801c3b2
163f1fb801c2b2163f1fb801c1b2165b1fb801c0b2165b1fb801bfb2165b
1fb801beb2165b1fb801bdb2165b1fb801bcb2165b1fb801bbb2165b1fb8
01bab2163f1fb801b9b2163f1fb801b8b2165b1fb801b7b2165b1fb801b6
b2165b1fb801b5b2165b1fb801b4b2165b1fb801b3b2165b1fb801b2b216
5b1fb801b1b2163f1fb801b0b2163e1fb801afb2163f1fb801aeb2163f1f
b801adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2165b1fb801
a9b2165b1fb801a8b2163e1fb801a7b2163f1fb801a6b2165b1fb801a5b2
165b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b
1fb801a0b2165b1fb8019fb2165b1fb8019eb215621fb8019db215621fb8
019cb215631fb8019bb215641fb8019ab215651fb80199b215661fb80198
b215661fb80197b215661fb80196b215661fb80195b215661fb80194b215
661fb80193b215661fb80192b215611fb80191b215621fb80190b215631f
b8018fb215641fb8018eb215641fb8018db215651fb8018cb215661fb801
8bb215661fb8018ab215631fb80189b215641fb80188b215551fb80187b2
15611fb80186b215621fb80185b215621fb80184b215631fb80183b21565
1fb80182b215661fb80181b215661fb80180b215661fb8017fb215661fb8
017eb215661fb8017db215661fb8017cb215661fb8017bb215661fb8017a
b215451fb80179b215611fb80178b215621fb80177b215621fb80176b215
631fb80175b215641fb80174b215641fb80173b215651fb80172b215661f
b80171b215661fb80170b215661fb8016fb215661fb8016eb215661fb801
6db215661fb8016cb215661fb8016bb215551fb8016ab215451fb80169b2
15451fb80168b215361fb80167b215361fb80166b214821fb80165b21456
1fb80164b2147f1fb80163b214551fb80162b214561fb80161b214401fb8
0160b214551fb8015fb214561fb8015eb2147e1fb8015db214831fb8015c
b214851fb8015bb2133d1fb8015ab2131e1fb80159b2131e1fb80158b213
0a1fb80157b2130a1fb80156b2130b1fb80155b2133a1fb80154b2133a1f
b80153b2133a1fb80152b2133b1fb80151b2133c1fb80150b2133c1fb801
4fb212451fb8014eb212461fb8014db212461fb8014cb212451fb8014bb2
12451fb8014ab212461fb80149b212461fb80148b212461fb80147b21244
1fb80146b212451fb80145b212461fb80144b212461fb80143b211471fb8
0142b211571fb80141b211581fb80140b211591fb8013fb2115a1fb8013e
b2115a1fb8013db2115b1fb8013cb2115b1fb8013bb2115b1fb8013ab211
5b1fb80139b2112b1fb80138b2112c1fb80137b211391fb80136b211391f
b80135b211461fb80134b211471fb80133b211471fb80132b211551fb801
31b211551fb80130b211561fb8012fb211561fb8012eb211571fb8012db2
11571fb8012cb211581fb8012bb211591fb8012ab211591fb80129b2115a
1fb80128b2115a1fb80127b2115b1fb80126b2115b1fb80125b2115b1fb8
0124b2115b1fb80123b211591fb80122b2115a1fb80121b211391fb80120
b211471fb8011fb211561fb8011eb211561fb8011db211591fb8011cb211
591fb8011bb2115b1fb8011ab2115b1fb80119b2115b1fb80118b211561f
b80117b211561fb80116b211571fb80115b211571fb80114b211581fb801
13b2115a1fb80112b2115a1fb80111b2115b1fb80110b2115b1fb8010fb2
115b1fb8010eb2115b1fb8010db2115a1fb8010cb2115b1fb8010bb2105d
1fb8010ab2105e1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb8
0106b2105f1fb80105b2105d1fb80104b2105e1fb80103b2105f1fb80102
b2105f1fb80101b2105f1fb8010040ff105f1fff105d1ffe105f1ffd105f
1ffc105f1ffb105f1ffa105d1ff9105e1ff8105f1ff7105f1ff6105f1ff5
105f1ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f64
1fed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe6
0f621fe50f621fe40f641fe30f621fe20f621fe10f631fe00f641fdf0f64
1fde0f641fdd0f641fdc0f641fdb0f641fda0e671fd90e681fd80e681fd7
0e681fd60e681fd50e671fd40e681fd30e681fd20e681fd10e671fd00e68
1fcf0e681fce0e681fcd0e681fcc0e681fcb0e681fca0e681fc90e681fc8
0d6b1fc70d6c1fc60d2a1fc50d6c1fc40d2c1fc30d6b1fc20d6c1fc10d6d
1f40ffc00d6a1fbf0d691fbe0d681fbd0d6b1fbc0d311fbb0d311fba0d31
1fb90c711fb80c721fb70c731fb60c741fb50c741fb40c741fb30c731fb2
0c741fb10d311fb00d311faf0d311fae0d311fad0d311fac0d311fab0d31
1faa0d311fa90b7e1fa80b7a1fa70b791fa60b7a1fa50b7c1fa40b7d1fa3
0b7e1fa20b7e1fa10b7e1fa00b7e1f9f0b7e1f9e0b7e1f9d0b7e1f9c0b7e
1f9b0b7e1f9a0b2d1f990b2d1f980aa71f970aa51f960aa71f950aa71f94
0aa71f930aa71f920a681f910a821f900a9b1f8f0a9d1f8e0a9f1f8d0aa7
1f8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557e
ab7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a55
7955775578ab7755ba028900660288403c5576ab755504751475747503f4
7501ab750144750130750102007510752075030c7455725573ab72550072
50728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c
720d104671556f5570ab6f556e666d556a03251f6938675568ab67556638
645565ab645563386255613860555f385d555eab5d555c385a555bab5a55
593858555703251f5638545555ab54555338515552ab51554f384e554e03
251f4d384b554cab4b554a38485549ab4855473846554503381f001c101c
201c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01b
c01b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf180240
18292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0
b3164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0401f16232646
0f15010f151f150245ef1501860003012001010001100120010308b8ffc0
b401151f4603bc01000100000500010190b154532b2b4bb807ff524bb008
505bb00188b02553b00188b040515ab00688b000555a5b58b101018e59b1
01024354b0144b515a58b101018e59858d8db1160142001d424bb01d5358
b203a0a01d42594bb0805358b20340401d42594bb0ff5358b20300001d42
59004bb0ff5358b1160042592b5e7375732b58403e080011e011f0110315
bf10cf10020f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e03
400e3137460f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c50
54460f0b1f0b02553f0b4f0b02400b3f4346400b2d304600030120010100
011001200103085e7375732b2b745e732b2b5e73742b73742b7374745e73
5e5901755e73742b2b2b2b5e732b5e732b7374755e735e735e73755e732b
5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b2b2b5e73742b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00000000>
[2855 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 1164 5 <0001005f000003530517002e00c2b0852b58ba027d027e00582bb1010243
5558b90030ffc040180f024d0030010f032a142b1320141314001a0b2a25
081514b8014ab325522b13b80100b3400854282b183f1a4dfdc43ffdcd11
1239012fc4cd393911331133113331305f5e5d2b1b400a0030010f032a25
081514b8014ab325522b13b80100b3400854282b183f1a4dfdc43ffdcd11
12393130015f5e5d591bb62a250815402514b8014ab56c25522b0813b801
00b36c085428ba027d027e00582b2b3f2bc43f2b1acd1112393031592514
0e042321222635343e04332113050606262635343e0237253e0333321e02
070333321603530305080c0f09fd5b0c0f0305090c100a010ec3fee71014
0d05050b120e0151050d121911191f110301e2ea0e0b6606151716130b14
1105131618120d03ce94080506100c0b21211e08bf0304040104070b06fb
8f13>QAAAAA+Calibri-Italic AddT42Char 
1 0 0 <00050000fe7303da050e00030007003b005500560075b0852b58b52d162d
16083c410a01ed00490007016400020020018c0008000101644012040225
370603511b0d117051015144070254003fdddedd5ddeddcd3fdddecd012f
ddedd6ed10fdd6ed1239392f2f31301b400e25370603511b0d1151440740
025400183f1adddedddeddcd3fdddecd303159011121110111211101140e
020707060623222e02373736363333323e0235342e0223220e0223222635
343e02373e0333321e0201140e0207060623222e0235343e023736363332
1e020103dafc5b034ffd06027b1f456e4e24021f1b0e140c050120051f17
083d4f2e130f21352828402f1f070a060205080608293a4422445e3a1afe
b503070b070a2016161a0e0504070c0809201913190e04fe46050efaf205
0efb43046cfb9403313467523605980a0802040606bc1b17253b4621192b
20130f13100c0e05131612060713120b263d4afd8b08171a17070a0a070c
100a0918181608090a060c10fd38>QAAAAA+Calibri-Italic AddT42Char 
QAAAAA+Calibri-Italic /CharStrings get begin
/g5 5 def
end
QAAAAA+Calibri-Italic /Encoding get
dup 33 /g5 put
pop
end
%ADOEndSubsetFont
/OPXJEL+Calibri-Italic /QAAAAA+Calibri-Italic findfont ct_VMDictPut/OPXJEL+Calibri-Italic*1 [33{/.notdef}rp /g5 222{/.notdef}rp]OPXJEL+Calibri-Italic nfOPXJEL+Calibri-Italic*1 [16 0 0 -16 0 0 ]msf536.561 365.793 mo(!)sh%ADOBeginSubsetFont: MAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPXJEJ+Calibri gcheck setglobal} if
1 5972 18 <0002005affed03de03ca0013002700c9b0852b58401c3f29012812012911
01260d01260c012608012607012a03012902011eb8ffe8b310014d1eb8ff
f0b30f014d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1e
b8020a401e2f0a010a141810014d14100f014d14200d014d14120c014d14
180b014d14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b801
02b1054d003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d
5d5d5d5d5d5d5d5d1bb10f19b80101b46c0f4a0523b80102b26c054d0018
3f2b3f2b30315901140e0223222e0235343e0233321e0207342e0223220e
0215141e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e
6a4f496944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427e
b47c49826239345f824d4a826139345e8200>OPXJEJ+Calibri AddT42Char 
1 3246 10 <00010025fffa02860578003c0088b0852b58b2161000b8ffe0b40b014d00
1bb8fff0b30d014d1bb8fff0b40f10014c1bb8fff6b30c014d1bb8ffe8b3
0b014d1bb801f9b2302a25b8ffd040121011014c250aed36471a26ed3048
204c1048003f3f3fed323fed012f2bc433f12b2b2b2bc42b33c431301b40
11360aed6c36471a3026ed6c3048204c104800183f3f3f2b323f2b303159
01140e0223222e0223220e02151533321e02151406232311140e0223222e
02351123222635343e02333335343e0233321e0402860405080607151e29
1b2534200ec9080b0905120fc908132018182013087f101004080c087f23
486d4a2342240c0803050f13170e05090b091833513a6207111a132420fc
eb080b080404080b0803152024131a11075d5e8756290d0f0c131b00>OPXJEJ+Calibri AddT42Char 
1 382 2 <0001005bffee04780520003f00ddb0852b58401d1c1c0f181810014d1810
0f014d18100d014d180a0c014d18100b014d18b80211400d00bf27012027
4027602703270fb8ffe8b310014d0fb8fff0b30f014d0fb8ffecb30d014d
0fb8ffeeb30c014d0fb8ffe8b30b014d0fb80232b42f34013418b8010ab4
2222392f3ebb010a0005000a0129b2395314b8012cb12f56003fed3ffdd4
ed1112392fed012f5de12b2b2b2b2bd45d5dc4e12b2b2b2b2b12392f3130
1bb12218b8010ab66c2222392f053eb8010ab36c05390ab80129b46c3953
2f14b8012cb26c2f5600183f2b3f2bc42b1112392f2b30315901140e0223
222e0223220e0215141e02333236371121222635343e023321321e021511
140e0423222e0235343e0233321e04047804080c070c385e835a6baa763f
457aa9653c7b35fed4111104090c09019b0b16120a123a5c62643196eca3
565da9ed904a8265451a0a045e131d1308262e264e8abe6f7cc084441d1d
01792224131b110808101c12fe131a261d22180c5dacf0949afab0611a23
291a2200>OPXJEJ+Calibri AddT42Char 
1 7670 23 <00010094ffed039c03bc003200b8b0852b58401f3f34010b27100d014d27
0a0c014d27080b014d27100f10014c27100b014d27b801f9b6004011014d
001fb8fff0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8
b30b014d1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49
270b05194924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b
2b2bd42be12b2b2b2b2b3931305d1b40092d49270b0519490e24b80105b4
6c0e4d054c00183f3f2b3f1239393f30315925140e0223222e0235350606
23222e023511343e0233321e021511141e023332363711343e0233321e02
15039c07121d15171d11064d964d5a7b4c210714201818201308172f4830
3e7b4507141f191820120919080b080404080b0877554e3c678962022208
0b090303090b08fdf44f5f432558550275080b090303090b0800>OPXJEJ+Calibri AddT42Char 
1 9512 30 <0001004501b4022e023d000f0020b0852b58b400070bed04002fed012fcd
31301bb4040bed6c0400182f2b303159011406232122263534363321321e
02022e1211fe5e1212121201a2080d090501f9271e1f26261e06111a>OPXJEJ+Calibri AddT42Char 
1 776 3 <000100acfffa062b050e003c00d6b0852b584010603e703e020d3030172f
2f0a2e18181ab8ffe8b310014d1ab8fff0b30f014d1ab8fff0b30d014d1a
b8fff6b30c014d1ab8ffe8b30b014d1ab80211401e24310c0c0a1810014d
0a100f014d0a100d014d0a0a0c014d0a180b014d0aba02110000ffc04019
0b014d002436510b18170d2f18312e061f28511f5512550555003f3f3f3f
12173911333f012fd42be12b2b2b2b2b32113310e12b2b2b2b2b32113311
393d2f3333113331305d1b401436510b18170d2f18312e061f28511f5512
55055500183f3f3f3f12173911333f30315925140e0223222e0235112301
0e0323222e0227012311140e0223222e02351134363333321e0217013301
3e033333321e0215062b08141f191721130802fe33030b151d14151e140b
02fe470108142019182013072c1b68203024180901770501860b1a1f2619
6d0f1b130c1a080c070505070c080467fb94070a070304070a06046cfb99
080c070505070c0804a62a240c1a281bfc5703a61e2a190b09131d15>OPXJEJ+Calibri AddT42Char 
1 4656 14 <00010099fffa037c0571003400b3b0852b58400c3f360129310131401201
4d31b8ffd0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0
b30b014d31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8ff
f6b30c014d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c
014d0016220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f
10f12b2b2b2b32e02b2b2b2b2b31305d5d1b400b220b0528491c46114c05
4c00183f3f3f3f12393930315925140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>OPXJEJ+Calibri AddT42Char 
1 2172 7 <0001005affed032003c9003500c8b0852b58b11c00b8ffc0b310014d00b8
ffe0b30d014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f01
4d27b8ffeeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b40
0d2f0e010e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48
312cb80106b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b
2b2b3231301b400c1f19e76c1f400a0d481f1324b80102b76c134a3103eb
6c31b8ffc0b5090d4831092cb80106b26c094d00183f2bc42b2b3f2bc42b
2b30315925140e0623222e0235343e0233321e0615140623222e02232206
15141e0233323e0233321e020320020507193c4b582f6196653541719959
2b51443518090602120d0f273c553a777f21405d3c39563f2b0c070a0703
a21119110d19251d12407bb37585bf7a3b101a22180e131812271f212821
b7ae5783582b242b2308131d>OPXJEJ+Calibri AddT42Char 
1 9992 32 <000100ae0000039f0517002e010cb0852b584024241e01241d01241c0123
1b01241a01241901261801261701291201291101122010014d30b8ffc040
0d0f024d60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29
b8fff0b30d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e
18200b014d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8
ffc0b310014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b01
4da01101111312b8013fb323522910b80107b10654003fed323ffdcd012f
5d2b2b2b2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d
5d5d5d5d5d5d5d1bb313402312b8013fb56c2352290610b80107b26c0654
00183f2b323f2b1acd30315925140e022321222e0235343e023321110706
06262635343e0237253e0333321e02151133321e02039f060a0d07fd5c07
0c0b0606090d08010efa13170e0503060b09012a040c12181218201206ea
080e090544131a100707101a13121a110903d8950a040d1e171118100c06
bf0304040104070b06fb8f09111a>OPXJEJ+Calibri AddT42Char 
1 9144 27 <0001002afede017300e0001b001db0852b58b20b171c0010d4cd31301bb3
0b40171c001810d41acd30315925140e0207070e0323222e02371335343e
0233321e020173060e171189050d13191311170a0104850b18241a192417
0b8f1f342e2d19ce070a080303070c080113801b201006061020>OPXJEJ+Calibri AddT42Char 
1 5646 17 <00010099fffa03a003ca003200b8b0852b58400f12100b014d13100b014d
3f34012a13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8
fff6b30c014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d01
4d0b100f014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b8
0106400a2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b
2b2b10e12b2b2b2b2b3931305d002b2b1bb12d10b80106400b6c2d4a2a19
2449194c054c00183f3f3f12393f2b30315925140e0223222e023511342e
022322060711140e0223222e023511343e0233321e021515363633321e02
1503a00812201819201208182e49303e7c44081220191820130706121c17
161d10074c974d5a7b4c2119080b080404080b08020f4d5e44245855fd8b
080b080404080b080384080b090303090b0877554f3d66896000>OPXJEJ+Calibri AddT42Char 
1 1816 6 <00020099ffed03d50571002a003d00b6b0852b58b53f3f010a2136b8fff6
b30c014d36b8fff0b30d014d36b8ffe8b30b014d36b8fff0b40f10014c36
b801f8401b152b120c014d2b200d014d2b180b014d2b1810014d2b100f01
4d2bb8020a400900150a363521040530b80105b6264a1b46104c39b80105
b1054d003fed3f3f3fed121739012fd4e12b2b2b2b2b10e12b2b2b2b3239
31305d1bb70a36352104052630b8010540096c264a1b46104c0539b80105
b26c054d00183f2b3f3f3f2b12173930315901140e0223222e022715140e
0223222e023511343e0233321e0215113e0333321e0207342e0223220e02
0711161633323e0203d53363905d2b4946462708121b15141c1206071320
1819201208284b484828628b5728ae15345640203e404527447c433e5837
1901e775bb844611263a296e080c070404070c080538080c080404080c08
fde5293823104e83b0754582643d122a4232fe9953573c637b00>OPXJEJ+Calibri AddT42Char 
1 4388 13 <00020085fffa0151052f0015002100a7b0852b58b73f234f236f230316b8
ffe8b30d014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d
16b8fff0b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d
15b8fff6b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b6
0a1f400f014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4
e12b2b2b2b2b2b31305d1bb1191fb8013eb56c191049054c00183f3fc62b
30315925140e0223222e023511343e0233321e0215131406232226353436
333216013e08122019182013070713201819201208132c3b3a2b2c3b3a2b
19080b080404080b080384070c080404080c0701303a2a29393a2a29>OPXJEJ+Calibri AddT42Char 
OPXJEJ+Calibri /CharStrings get begin
/g18 18 def
/g10 10 def
/g2 2 def
/g23 23 def
/g30 30 def
/g3 3 def
/g14 14 def
/g7 7 def
/g32 32 def
/g27 27 def
/g17 17 def
/g6 6 def
/g13 13 def
end
OPXJEJ+Calibri /Encoding get
dup 44 /g18 put
dup 45 /g10 put
dup 46 /g2 put
dup 47 /g23 put
dup 48 /g30 put
dup 49 /g3 put
dup 50 /g14 put
dup 51 /g7 put
dup 52 /g32 put
dup 53 /g27 put
dup 54 /g17 put
dup 55 /g6 put
dup 56 /g13 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPXJEJ+Calibri*1 [33{/.notdef}rp /g28 /g1 /g24 /g21 /g22 /g12 /g9 /g19 /g5 /g20 /g16 /g18 /g10 /g2 /g23 /g30 /g3 /g14 /g7 /g32 /g27 /g17 /g6 /g13 199{/.notdef}rp]OPXJEJ+Calibri nfOPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf550.061 360.753 mo(,-")[12.6238 7.36786 0 ]xsh575.436 360.753 mo(%&'".\)/$$)[7.99933 12.631 12.0073 5.38312 15.1271 11.5033 12.631 9.36737 0 ]xsh671.436 360.753 mo(0)sh678.811 360.753 mo(1\)*2,#)[20.5007 11.5009 8.37598 10.0656 12.5206 0 ]xsh112.226 389.793 mo($,/*3'"45"%&'"6/+7'*",-"$,/*3'$"8$")[9.37455 12.6238 12.6239 8.02557 10.1257 12 5.37595 12.1249 6 5.37595 7.99936 12.6239 12 5.37595 12.6239 12.6238 19.1255 12.6238 12 8.37598 5.37595 12.6238 7.37503 5.37595 9.37454 12.6238 12.6239 8.02557 10.1257 12 9.37457 5.37595 5.50089 9.37457 0 ]xsh.708675 .287083 1 .131136 cmyk
%ADOBeginSubsetFont: SAAAAA+Calibri-BoldItalic Initial
ct_T42Dict begin
-0.691 -0.305 1.328 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /SAAAAA+Calibri-BoldItalic
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000006ac6670
676d000000000000076800000913676c796600000000000028680000067a
68656164000000000000107c000000366868656100000000000010b40000
0024686d747800000000000010d8000000186c6f636100000000000010f0
0000000e6d6178700000000000001100000000206e616d65000000000000
11200000002c70726570000000000000114c0000171b6764697200000000
00000000000000000000079e0000fe930000000000000000000000700081
009c00ab00b500ba00c100ca00d300f3010a0060008500bf00e300ea00f2
00fb010001070115011c0129000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe83056d
000d03c0000600170000fffaffe9fea9ffe90000050e000600170000fffa
ffe9fe93050e00170426000600170000fffaffe9ff12ffed050e00170426
000600170000fffaffe9fe93feb8fece060b0010050e0006001002cbfffa
fff001edfffa023f00060010ff36fffafff00287000600100000fffafff0
079efeaffe9f000000000000000000000000005f0060006e006f00700071
00620067006000720078007a007b007d007e007f00800083008500860087
00890086008c008d008e008f009100920093009400950096009700980099
009a009b009c009d009e009300960099009e0094009500000099009a00a0
00a200a600a800aa00ac00ad00ae00a100a200a300a400a500a700a800a9
00aa00ab00a300a700a800aa00ab00ac00ad00ae009e00a300a600a700a9
00aa00ac00ad00af00b000b100ac00ad00ae00af00b000b100b200b300b4
00b500af00af00b000b100b200b300b400b500b700b800b900b600b700b8
00b900ba00bb00bc00bd00be00bf00c000c100c200c000c100c200b900ba
00bb00bd00be00bf00c000c100c200b600b700b800b900ba00bb00bc00bd
00be00bf00c000c100c200cc00c300c400c500c600c700c800c900ca00cb
00cc00cd00ce00cf00c400c500c600c700c800c900ca00cb00ce00cf00c4
00c500c600c700c800c900ca00cb00cc00cd00ce00cf00c300c400c500c6
00c700c800c900ca00cb00cc00cd00ce00cf00d000d100d200d300d400d5
00d600d800d900da00db00de00df00e200e300e400ec00d000d100d400d5
00d600dc00dd00de00e000e400e200e800d000d100d200d300d400d500d6
00d700d800d900da00db00dc00dd00de00df00e000e100e200e300e400e6
00e700e800e900ed00ee00d100d200d300d400d500d800d900da00dc00e1
00e800f600f700fb0108011a011d010e011300f500f800fb010d011600f6
00fa0109010d01210127012d012e012f01340135013b014101420152012f
0130006a006b009000910094009600980099009a009a009c0077007b0089
00940092009300a300a400a500a6008100a900ab00ac00ad00ae00af00b1
00b300b4009b00bb00bb00bb00bf00bc00bd00c200c300c400c500c600c7
00c800c900ca00cb00cd00d000a800ac00b100b400b500b600b700b800b9
00ba00bb00bc00bd00be00c200c400c500c600c800b400ca000000b400b5
00b600b700b800b900be00bf00c300c600c700c800c900ca00cb00cf00d0
00aa00ad00ae00b100b200ba00be00c000c500c600c800c900cf00d000d1
00d200d5000000d400d900da00db00dc00dd00de00e200e500d100d300d4
00d100d200d800da00db00cb00de00df00df00e100e200e400e500e600d6
00d700d100d300d300d400d500d700ce00d600db00dc00dd00de00c400bb
00e100d200d200e000d200d100d300d500d600d900d600d600db00c900dc
00ac00e100de00de00df00e000e800eb00ed00e800e900ea00e000e700ed
00bc00e300ea00e500ba00e700e800e300e800e900ea00cc00ed00f000f2
00f400ee00ef00f100f200f300f400f400f400c100ee00f200ee00ee00f1
00ef00db00f300db00ee00ef00eb00d700f000dd00ec00f500f200f700f7
00f300f900f500f600fc00fc00f400d900fa00fb00fc00f700f700da00f9
00f600fa00fb00fb00ff00fe00ff010001010102010300f900ff01000100
00fc00fc00fc00e200fd00e900fe00fa00fe010100fd0103010401060107
01080109010a010b010c010d0100010101070108010900ff0100010100fa
01020104010b010c010800ff010001060107010800f8010a010b010c010d
010f011001110112011301140115011600fd010e010f01120118010f0110
01110109011301140115011601170118010e010f01100111011201130115
0000011701180119011a0000011e0120012100ce011c011e00f6011a011c
011d0120012201190102011d000000d50123012701280129013001330135
00000124012500fd012e012f013e013f012300000125012601270000012b
00fe012f0130013c013e014101440145012300ff012c0136013b013e0146
000000000000000000000000000000000000000002990092000000000000
042600d8050e010503c000c2024e0078042600d700b100a000500058005e
006a05e802cc40465f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948
47464544434241403f3e3d3c3b3a39383736352f2e2d2c2826252423221f
181411100f0d0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b004
2651582320b00d44235921212d2c20204518684420b001602045b0467668
8a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b028
2370b101283e01b0282370b10228453ab10200080d2d2c2045b003254561
64b050515845441b2121592d2c2045b0004360442d2c01b00643b0074365
0a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58
b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c
234445b02b23442d2c4b525845441b2121592d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c00b00743b006430b2d2c21210c6423648bb84000622d2c21b08051580c
6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648b
b81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c
4523456023456023456023766818b08062202d2cb00426b00426b00425b0
042545234520b003266062636820b0032661658a2344442d2c2045b00054
58b040442045b04061441b2121592d2c45b1302f4523456160b001606944
2d2c4b5158b02f2370b01423421b2121592d2c4b515820b0032545695358
441b2121591b2121592d2c45b01443b0006063b0016069442d2cb02f4544
2d2c452320458a60442d2c45234560442d2c4b235158b90033ffe0b13420
1bb3330034005944442d2cb0164358b00326458a586466b01f601b64b020
606620581b21b04059b001615923586559b02923442310b029e01b212121
2121592d2cb0164358b004254564b020606620581b21b04059b001612358
6559b0292344b00425b00725082058021b0359b0052510b004252046b004
2523423cb0072510b006252046b00425b0016023423c2058011b0059b005
2510b00425b029e0b0072510b00625b029e0b00425b00725082058021b03
59b00425b003254348b00625b00325b0016043481b215921212121212121
2d2cb0164358b004254564b020606620581b21b04059b0016123581b6559
b0292344b00525b00825082058021b0359b0042510b005252046b0042523
423cb00425b0072508b0072510b006252046b00425b0016023423c205801
1b0059b0042510b00525b029e0b02920456544b0072510b00625b029e0b0
0525b00825082058021b0359b00525b003254348b00425b0072508b00625
b00325b0016043481b2159212121212121212d2c02b00425202046b00425
2342b0052508b003254548212121212d2c02b0032520b0042508b0022543
482121212d2c452320451820b00050205823652359236820b040505821b0
4059235865598a60442d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2cb00021
4b5458381b2121592d2cb002435458b0462b1b21212121592d2cb0024354
58b0472b1b212121592d2cb002435458b0482b1b21212121592d2cb00243
5458b0492b1b212121592d2c208a08234b538a4b515a5823381b2121592d
2c0020b200400325b0062649618b3812342d2c0146234660234661232010
20468a61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c
1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b123
018851b1400188535a58b910000020885458b202010243604259b1240188
5158b920000040885458b2020202436042b12401885458b2022002436042
004b014b5258b2020802436042591bb940000080885458b2020402436042
59b94000008063b80100885458b202080243604259b94000010063b80200
885458b202100243604259b94000020063b80400885458b2024002436042
59595959592d2c451868234b51582320452064b04050587c59688a605944
2d2cb00016b00225b0022501b001233e00b002233eb10102060cb00a2365
42b00b234201b001233f00b002233fb10102060cb006236542b0072342b0
0116012d2c20b82000628a6023622d2cb0072558001b0159b0042510b003
25b0022520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920
b005254ab0042547b004254760b0062547b0806361b00225b0005558b003
25b00725496359b0082558001b0159b00425b0062549b009255cb009255a
58b0092b59b0072546b0806361b0032520b0005558631b2159612320b000
5558b080631b21b08059b0592bb006255c586959b00425202010b0004823
3ab0062658001b0159b0052658b003252f598a12233221212d2cb00625b0
0a2587b00625b009254ab0005358b00625b00a251bb00925b0072559b002
25b00225070cb005256323b00625636020b94000040063535821b00426b0
0426b00a1bb94000040063655158b0042665b0042665b00a1bb00426b004
26b000b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525
b0052507595920b0005558b00525b0052587b00725b007250bb0092510b0
0b25b0092620b8ffff545821cd1bed59b00525b0052507b00825b00b2549
23b00625b0062587b00a2510b00b25c15920b00051b800522378b00161b0
0225b00725b0072507b00a25b00d254961b08062b00525b005250bb00a25
2338b00625b0062587b00825b008250bb00a2510b00b25c4b00625b00625
07b00925b00c2549b0032554b8ffa723792121212121212121212121212d
2c23b0005458b9400000001bb900004000598ab0005458b9400000001bb9
0000400059b05b2b2d2c08b0005458b9400000001bb900004000590db05b
2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb0
0426b00426080db00426b00426080db05b2b2d000001000000063333fe11
7bc25f0f3cf50019080000000000bbeb7ccc00000000d5968a60fa78fd8d
0aa3085000030009000200000000000000010000079efdda00000aa0fa78
f9cc0aa30800019a0000000000000000000000000006040e00000362003c
05400034040e000a040e000a03fc003a000000a801000193024102ef033d
00000001000000060120001600e1000800020010002f006000000d16012f
00040001000000010012000100000000000600190000565a53484d4a2b43
616c696272692d426f6c644974616c696300b10903b802a3b21b341fb802
9bb21a351fb8028eb21a351fb80272b219371fb80271b219371fb80270b2
19371fb8025cb218391fb8025bb218391fb8025ab218391fb80223b2173b
1fb80222b2173b1fb80221b2173b1fb80220b2173b1fb8021fb2173b1fb8
021eb2173b1fb8021db2173b1fb8021cb2173b1fb80219b2173b1fb8021b
b2173b1fb80218b2173b1fb80217b216461fb801e1b216461fb801e0b216
461fb801dfb216461fb801deb216461fb801ddb216461fb801dcb216461f
b801dbb216461fb801dab216461fb801d9b216461fb801d8b216461fb801
d7b216461fb801d6b216461fb801d3b216461fb801d5b216461fb801d4b2
16461fb801d2b216461fb801d1b216461fb801d0b216461fb801ceb21646
1fb801cdb216461fb801ccb216461fb801cbb216461fb801cab216461fb8
01c9b216461fb801c8b216461fb801c7b216461fb801c6b216461fb801c4
b216461fb801c3b216461fb801c2b216461fb801c1b216461fb801bab215
461fb801cfb215551fb801b9b215551fb801b8b215551fb801b7b215551f
b801b6b215641fb801b5b215641fb801b4b215641fb801b3b215641fb801
b2b215641fb801c5b215641fb80334b21f2d1fb80333b21f2d1fb80332b2
1f2d1fb80331b21f2d1fb80330b21f2d1fb8032fb21b341fb8032eb21f2d
1fb8030db21e2f1fb8030bb21e2f1fb802fbb21d301fb802fab21d301fb8
02f8b21d301fb802f7b21d301fb802f6b21d301fb802f5b21d301fb802f4
b21d301fb802f3b21d301fb802f2b21d301fb802dab21c331fb802d9b21c
331fb802d8b21c331fb802d7b21c331fb802d5b21c331fb802d4b21c331f
b802d3b21c331fb802b9b21b341fb8030cb21b341fb802b7b21b341fb802
d2b21b341fb802d1b21b341fb802b6b21b341fb802b4b21b341fb802b8b2
1a351fb802a2b21a351fb802a1b21a351fb802a0b21a351fb802b5b21a35
1fb8029eb21a351fb802d6b21a351fb8029cb21a351fb8029fb219371fb8
028cb219371fb8028db219371fb80289b2173b1fb80286b219371fb80285
b219371fb8026fb218391fb8028bb218391fb80287b218391fb8026db218
391fb8026cb218391fb8026bb218391fb8026ab2173b1fb80255b2173b1f
b80259b2173b1fb80258b2173b1fb80257b2173b1fb80256b2173b1fb802
8ab2173b1fb80253b2173b1fb80251b2173b1fb8029db2173b1fb8024eb2
173b1fb80288b2173b1fb80250b2173b1fb8024fb2173b1fb8024db2173b
1fb8024cb2173b1fb8030fb2173b1fb8024ab2173b1fb8024bb2173b1fb8
0216b216461fb80215b216461fb8026eb216461fb80252b216461fb80214
b216461fb80213b216461fb80212b216461fb80211b216461fb80210b216
461fb8020fb216461fb8020eb216461fb8020db216461fb8020cb216461f
b8020bb216461fb8020ab216461fb80254b216461fb80209b216461fb801
c0b215641fb801bfb215641fb8031eb21f2d1fb8031db21f2d1fb8031cb2
1f2d1fb8031bb21f2d1fb80319b21f2d1fb80318b21f2d1fb80304b21e2f
1fb80303b21e2f1fb802e7b21d301fb802e6b21d301fb802e5b21d301fb8
02e4b21d301fb802c7b21c331fb802c6b21c331fb802c5b21c331fb802c4
b21b341fb802c3b21b341fb802adb21b341fb802acb21b341fb802abb21b
341fb8031ab21a351fb80236b2173b1fb80235b2173b1fb80263b216461f
b80316b21f2d1fb80315b21f2d1fb80314b21f2d1fb80313b21f2d1fb803
12b21f2d1fb80311b21f2d1fb80310b21f2d1fb80301b21e2f1fb80300b2
1e2f1fb802ffb21e2f1fb802fdb21e2f1fb802fcb21e2f1fb802e2b21d30
1fb802e1b21d301fb802e0b21d301fb802dfb21d301fb802deb21d301fb8
02ddb21d301fb802dcb21d301fb802dbb21d301fb802c2b21c331fb802c1
b21c331fb802c0b21c331fb802bfb21c331fb802beb21c331fb802bdb21c
331fb802bcb21c331fb802bbb21c331fb802bab21c331fb802a9b21b341f
b802a8b21b341fb802a7b21b341fb802a6b21b341fb802a5b21b341fb802
a4b21b341fb802e3b21a351fb80295b21a351fb80294b21a351fb80291b2
1a351fb8028fb21a351fb80293b219371fb80292b219371fb8027ab21937
1fb80279b219371fb80278b219371fb80277b219371fb80290b219371fb8
0276b219371fb80275b219371fb80274b219371fb80273b219371fb80262
b218391fb8025fb218391fb8025eb218391fb8025db218391fb80261b218
391fb80234b2173b1fb80233b2173b1fb80232b2173b1fb80231b2173b1f
b80230b2173b1fb80260b2173b1fb8022fb2173b1fb8022eb2173b1fb802
2db2173b1fb8022bb2173b1fb8022ab2173b1fb80229b2173b1fb80226b2
173b1fb80225b2173b1fb80224b2173b1fb80228b2173b1fb80227b2173b
1fb80302b216461fb8022cb216461fb801f6b216461fb801f4b216461fb8
01f3b216461fb801f2b216461fb801f1b216461fb801f0b216461fb801ef
b216461fb801eeb216461fb801edb216461fb801ecb216461fb801ebb216
461fb801eab216461fb801e9b216461fb801e8b216461fb801e7b216461f
b801e6b216461fb801e5b216461fb801f5b216461fb801e4b216461fb801
e3b216461fb801e2b216461fb8032db21f2d1fb8032cb21f2d1fb8032bb2
1f2d1fb8032ab21f2d1fb80329b21f2d1fb80328b21f2d1fb80327b21f2d
1fb80325b21f2d1fb80323b21f2d1fb80322b21f2d1fb80321b21f2d1fb8
031fb21f2d1fb8030ab21e2f1fb80309b21e2f1fb80308b21e2f1fb80307
b21e2f1fb80306b21e2f1fb802f1b21d301fb802f0b21d301fb802efb21d
301fb802eeb21d301fb802edb21d301fb802ecb21d301fb802eab21d301f
b802e9b21d301fb802e8b21d301fb802cfb21c331fb802ceb21c331fb802
ebb21c331fb802d0b21c331fb802cdb21c331fb802ccb21b341fb802cab2
1b341fb802c9b21b341fb802c8b21b341fb80326b21b341fb802b2b21a35
1fb802b0b21a351fb802afb21a351fb802aeb21a351fb8029ab21a351fb8
0299b21a351fb80298b21a351fb802cbb21a351fb802aab21a351fb80305
b219371fb80296b219371fb80283b219371fb80280b219371fb80281b219
371fb8027fb219371fb8027eb219371fb80265b218391fb802b3b218391f
b80269b218391fb80268b2173b1fb80266b2173b1fb80264b2173b1fb802
b1b2173b1fb80245b2173b1fb80248b2173b1fb80242b2173b1fb80241b2
173b1fb80240b2173b1fb8023fb2173b1fb80284b2173b1fb80282b2173b
1fb80297b2173b1fb8023cb2173b1fb8023eb2173b1fb8023bb2173b1fb8
023ab2173b1fb80239b2173b1fb80249b2173b1fb80247b2173b1fb80246
b2173b1fb80238b2173b1fb80237b2173b1fb80208b216461fb80207b216
461fb8023db216461fb80206b216461fb80205b216461fb80204b216461f
b80203b216461fb80202b216461fb80201b216461fb80244b216461fb802
43b216461fb80200b216461fb8027bb216461fb801ffb216461fb801feb2
16461fb80267b216461fb801fdb216461fb801fcb216461fb801fbb21646
1fb801fab216461fb801f9b216461fb801f8b216461fb801beb215641fb8
01bdb215641fb801bcb215641fb801bbb215641fb801b1b2148b1fb801b0
b2148b1fb8027db219371fb8027cb219371fb8011e40c710421ff70e481f
f60e481ff50d4a1fe20d4a1fe10d4a1fe00c4e1fc50c4e1fc40c4e1fc30c
4e1fc20c4e1fc10c4e1fc00c4e1fbf0b561fbe0b561fb40b561fb30b561f
b20b561fb10b561fb00b561faf0b561fae0b561fad0b561fac0b561fab0b
561faa0b561fa90b561fa80b561fa70b561fa60b561fa50b561fa40b561f
a30b561fa10a681fa00a681f9f0a681f9e0a681f9d0a681f9c0a681f9b0a
681f9a0a681f990a681f980a681f970a681f960a681f9509771f9109771f
9009771f8f09771f8e09771fb903530350400a561f8d09771f8c09651f41
09035203500068001f035103500068001f01a2b213321fb801a1b213321f
b801a0b212371fb8019fb212371fb80191b212371fb80190b211401fb801
8fb211401fb8018eb211401fb8018db211401fb8018cb211401fb8018bb2
11401fb8018ab211401fb80189b211401fb80188b211401fb80187b21140
1fb8014eb211401fb8014db210421fb8014cb210421fb8014bb210421fb8
014ab210421fb80149b210421fb80148b210421fb80147b210421fb80146
b210421fb80145b210421fb80144b20f451fb80143b20f451fb80142b20f
451fb8011db20f451fb8011cb20f451fb8011bb20f451fb8011ab20f451f
b80119b20f451fb80118b20e481fb80117b20e481fb80116b20e481fb801
15b20e481fb80114b20e481fb80113b20e481fb80112b20d4a1fb8011140
570d4a1ff40d4a1ff30d4a1ff20d4a1ff10d4a1ff00d4a1fef0d4a1fee0c
4e1fdf0c4e1fde0c4e1fdd0c4e1fdc0c4e1fdb0c4e1fda0c4e1fd90b561f
d80b561fbd0b561fbc0b561fba0b561fb90b561fa20a681f9409771fb801
99b213321fb80198b213321fb80169b211401fb80168b211401fb80167b2
11401fb80166b211401fb80165b211401fb80164b211401fb80163b21140
1fb80162b211401fb80161b211401fb80160b211401fb80135b211401fb8
0134b210421fb80133b210421fb80132b210421fb80131b210421fb80130
b210421fb8012fb210421fb8012eb210421fb8012db20f451fb8012cb20f
451fb80107b20f451fb80106b20f451fb80105b20f451fb9034f034eb23b
1f34bf034e0044034e0054034e0003ffc0034eb2292c46b9ffc0034eb212
1646b801adb213141fb801acb2131b1fb801abb2131b1fb801aab213231f
b801a9b213231fb801a8b213231fb801a7b213321fb801a6b213321fb801
a5b213321fb801a4b213321fb801a3b213321fb80197b213321fb80196b2
13321fb80195b213321fb80194b212371fb80193b212371fb80192b21237
1fb8015fb212371fb8015eb211401fb8015db211401fb8015cb211401fb8
015bb211401fb8015ab211401fb80159b211401fb80158b211401fb80157
b211401fb80156b211401fb80155b211401fb80154b211401fb80153b211
401fb80152b211401fb80151b211401fb80150b211401fb8014fb211401f
b8012bb211401fb8012ab210421fb80129b210421fb80128b210421fb801
27b210421fb80126b210421fb80125b210421fb80124b210421fb80123b2
10421fb80122b210421fb80121b20f451fb80120b20f451fb8011fb20f45
1fb80104b20f451fb80103b20f451fb80102b20f451fb80101b20f451fb8
010040830e481fff0e481ffe0e481ffd0e481ffc0e481ffb0e481ffa0d4a
1ff90d4a1ff80d4a1fec0d4a1feb0d4a1fea0d4a1fe90d4a1fe80d4a1fe7
0d4a1fe60c4e1fe50c4e1fe40c4e1fe30c4e1fcf0c4e1fce0c4e1fcd0c4e
1fcc0c4e1fcb0c4e1fca0c4e1fc90c4e1fc80c4e1fc70c4e1fc60c4e1fb8
0c4e1fb70b561fb60b561fb50b561fb801afb213321fb801aeb213321fb8
019eb213321fb8019db213321fb8019cb212371fb8019bb212371fb8019a
b212371fb80186b212371fb80185b2112e1fb80184b211401fb80183b211
401fb80182b211401fb80181b211401fb80180b211401fb8017fb211401f
b8017eb211401fb8017db211401fb8017cb211401fb8017bb211401fb801
7ab211401fb80179b211401fb80178b211401fb80177b211401fb80176b2
11401fb80175b211401fb80174b211401fb80173b211401fb80172b21140
1fb80171b211401fb80170b211401fb8016fb211401fb8016eb211401fb8
016db211401fb8016cb211401fb80141b211401fb80140b210421fb8013f
b210421fb8013eb210421fb8013db210421fb8013cb210421fb8013bb210
421fb8013ab210421fb80139b210421fb80138b210421fb80137b20f451f
b80136b20f451fb80110b20f451fb8010fb20f451fb8010eb20f451fb801
0db20f451fb8010cb20f451fb8010bb20e481fb8010ab20e481fb80109b2
0e481fb80108402f0e481fed0c4e1fd70c4e1fd60c4e1fd50c4e1fd40c4e
1fd30c4e1fd20c4e1fd10c4e1fd00b561f9309771f9209771fb8016bb212
371fb8016a406e11401f8503251f84032e1f83012e1f8248805581ab8055
7f487d557eab7d550b7d3b7d4b7d030b7d1b7d4b7d7b7dab7ddb7d067c48
7a557bab7a55047a147a020a7948775578ab77550b77010c764875555475
e475f4750314755475647574759475d475e47507a475b475c47503b8ffc0
401275383b46807590750214757475020075010fb8ffc04020750b0e4674
48725573ab72550472247254720339f07201024072016072707202b8ffc0
b372242846b8ffc0401b72161a462072407250720371486f5570ab6f556e
486d55ef6d0110410a03550020035500d003550003000f0354008f035440
ff02006c706c02096a03251f692e675568ab6755662e645565ab6455632e
6255612e60555f2e5d555eab5d555c2e5a555bab5a55592e58555703251f
562e545555ab5455532e515552ab51554f2e4e554e03251f4d2e4b554cab
4b554a2e485549ab4855504801472e46554503361f001f01001e01001e70
1e801ef01e040b601d701d02701de01df01d03701cf01c027f1b010f1a7f
1a8f1a030f1a8f1a020f1a8f1a020f191f198f199f19af19050f198f199f
19030c7012801202701180110230114011d011e011040011a011020f8f0f
9f0faf0f034f0f5f0fef0fff0f04af0f01af0ebf0ecf0e034f0e5f0e6f0e
030f0eaf0ebf0e0310400e2e31460f0d404b1f0d2f0d033c2f0d3f0d4f0d
038f0d01400d2e3246400d2427463f0c4f0c5f0c039f0c01400c262946ef
0aff0a02400a2427464009262d464009171b460003012001010001100120
010308b8ffc0b401151f4603bd0100010000050001019000542b4bb807ff
524bb008505bb00188b02553b00188b040515ab00688b000555a5b58b101
018e59b101024354b0144b515a58b101018e59858d8d001d424bb01d5358
b203a0a01d42594bb0805358b20340401d42594bb0ff5358b20300001d42
592b5e7375732b2b2b732b73742b2b73745e732b5e7374757374755e7374
7573015e7374737475757473745e737473002b2b732b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e737473732b2b2b732b2b73755f755e
732b2b2b5e7373732b7374752b5e732b2b5e732b2b73742b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e0000>
[1659 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 512 2 <00010034fffa05530512003b0073ba0346034700582bb101024355584024
28100b2d2d3100403b10141f1e36521e14000b2d2c0f10281f313b0c1922
5119550654282b183f3f3f1217393f012fc63332d41acd33321133113330
311b401736521e14000b2d2c0f10281f313b0c19225119550654282b183f
3f3f1217393f303159250e032323222e02270326262723060607030e0323
222e02371336363333321e02171316161733363637133e0333321e020704
6704171f251470242e211a0ebf162511020a1a1084020f1e2f23232d1807
03e909402889212f21190bc1131f11020b1b0e7b020e1d2e23232e180802
5c1724180b0e243e3002424388434f994dfd6b0a100a06060a100a048c2f
2f0f213426fdb9386e3748994802620a0f090505090f0a00>SAAAAA+Calibri-BoldItalic AddT42Char 
1 1502 5 <0002003a011703eb036a001300270027b414001f0b244109010e001c0008
010e001000280346034700582b2b2feddeed012fc4ddc4303101140e0423
21222635343e023321321613140e042321222635343e0233213216039a03
060a10150efd060f1107101b1402fb100f5103060a10160dfd060f110710
1b1302fb110f01ac071c21231c1214190c31312516017f071c21231c1315
190c30322415>SAAAAA+Calibri-BoldItalic AddT42Char 
1 1154 4 <0002000afffa03eb0514002e003200c3ba0346034700582bb10102435558
b90034ffc040300f024d0034010f03311f30203214132f132b08092a0909
132a2f1f1a202f132f132f001a302f2a0314200e25522b1f32b8016e4009
4013090e140e5508282b182f3f2f1239391afd32c43f1239121739012fcd
39392f2f1239123911331133107d87c4c41087c4c4110133113330315f5e
5d2b1b40110034010f03302f2a0314200e25522b1f32b8016e4009401309
0e140e5508282b182f3f2f1239391afd32c43f12391217393031015f5e5d
5901140e042323070e0323222e02373721222635343e0437013e0333321e
0207033332160123012103d904070c0f130b732f020f1f322525301a0902
2efe131a1304080c0f120b0222071d2f452f33472911029c720d0dfeea02
fe3d015101b0091f24261f13ea0a0f0a05050a0f0aea151a09222b302f2a
0e02c9090d0904050b100bfcf5180262fdb6>SAAAAA+Calibri-BoldItalic AddT42Char 
1 0 0 <00050000fe7303e0050e00030007003b00550056004fb52d162d16083c41
0a023a0049000701b00002002002000008000101b1401204022537060351
1b0d117051015144070254003fdddedd5ddeddcd3fdddecd012fddedd6ed
10fdd6ed1239392f2f3031011121110111211101140e020707060623222e
02373736363333323e0235342e0223220e0223222635343e02373e033332
1e0201140e0207060623222e0235343e0237363633321e020103e0fc4f03
46fd240276204468481e032d25161f1207011905231a0b2f4228120d1d2f
23263a291a06080704060a07082737422245674422fecb04080e090e2b20
1c23130604090f0b0d29211a221307fe26050efaf2050efb570444fbbc03
1136654e3306790d0b02050908a7211b1e303b1e14251d110d0f0d0e0e07
1c1f1c0707120f0a233d51fd9e091c201d0a0d0e0910150c0b1d1f1e0a0e
0c080f16fd21>SAAAAA+Calibri-BoldItalic AddT42Char 
SAAAAA+Calibri-BoldItalic /CharStrings get begin
/g2 2 def
/g5 5 def
/g4 4 def
end
SAAAAA+Calibri-BoldItalic /Encoding get
dup 33 /g2 put
dup 34 /g5 put
dup 35 /g4 put
pop
end
%ADOEndSubsetFont
/OPXJEM+Calibri-BoldItalic /SAAAAA+Calibri-BoldItalic findfont ct_VMDictPut/OPXJEM+Calibri-BoldItalic*1 [33{/.notdef}rp /g2 /g5 /g4 220{/.notdef}rp]OPXJEM+Calibri-BoldItalic nfOPXJEM+Calibri-BoldItalic*1 [24 0 0 -24 0 0 ]msf451.776 389.793 mo(!"#)[15.7513 12.0072 0 ]xsh.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: MAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPXJEJ+Calibri gcheck setglobal} if
1 2514 8 <00020060ffed039c056d0026003900bcb0852b58401f3f3b010b1b39100d
014d390a0c014d391010014d39100f014d39180b014d39bb01f90000002f
ffe0b30d014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d
2fb8ffe8b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a
34b80104b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b
2b2b2b2b323931305d1b400a21460b39271b040e182ab80105b46c184a0e
34b80104b46c0e4d054c00183f3f2b3f2b1217393f30315925140e022322
2e023535060623222e0235343e023332161711343e0233321e0215032626
23220e0215141e0233323e0237039c07111c14151c120847995b638c5728
3262915f4f834007141f1819201209a6437d443f58371915345641213d40
462719080c070404070c08774d564d83b16274bb84474543020b070d0705
05070d07fd4553573c627c404482653d122a4331>OPXJEJ+Calibri AddT42Char 
1 4994 15 <00010099fffa013e057100150051b0852b58b73f174f176f170300b8fff0
b30d014d00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00
b801f8b40a1046054c003f3f012fe12b2b2b2b31305d1bb31046054c0018
3f3f30315925140e0223222e023511343e0233321e0215013e0812201918
201307071320181920120819080b080404080b080538080c080404080c08
>OPXJEJ+Calibri AddT42Char 
OPXJEJ+Calibri /CharStrings get begin
/g8 8 def
/g15 15 def
end
OPXJEJ+Calibri /Encoding get
dup 57 /g8 put
dup 58 /g15 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPXJEJ+Calibri*1 [33{/.notdef}rp /g28 /g1 /g24 /g21 /g22 /g12 /g9 /g19 /g5 /g20 /g16 /g18 /g10 /g2 /g23 /g30 /g3 /g14 /g7 /g32 /g27 /g17 /g6 /g13 /g8 /g15 197{/.notdef}rp]OPXJEJ+Calibri nfOPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf497.026 389.793 mo(\)69"%&'"6/+7'*",-"3&\)66':$)[11.5009 12.6238 12.6239 5.37592 7.99939 12.6238 12 5.37598 12.6238 12.6238 19.1255 12.6239 12 8.37598 5.37598 12.6238 7.37506 5.37592 10.1257 12.6238 11.5009 12.6239 12.6238 12 5.50092 0 ]xsh112.226 418.833 mo(8$")[5.50089 9.36495 0 ]xsh.708675 .287083 1 .131136 cmyk
%ADOBeginSubsetFont: SAAAAA+Calibri-BoldItalic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPXJEM+Calibri-BoldItalic gcheck setglobal} if
1 336 1 <0001003c000003140514001c0054ba0346034700582bb10102435558400d
18190e000d0d180e0308135219b80175b3400854282b183f1aed3f121739
012fcdcd333230311bb70d180e0308135219b80175b3400854282b183f1a
ed3f12173930315925140e042321222e0237133e0333321e020703213216
031403070b0f140dfdaf101b110604ec011021332726321c0902d001980e
0bb1071f282a231609151f1604980a100a05050a100afbee1600>OPXJEM+Calibri-BoldItalic AddT42Char 
1 806 3 <0001000a000003f10525004300a4ba0346034700582bb10102435558b900
45ffc040090f024d0045010f0340b802cdb71212270027000d1ab8032cb2
380d2ebb017e0024001f018540091a133f030833531240b80171b3400854
282b183f1afdc13f121739fdd4ed012fdded1239392f2f3910ed30315f5e
5d2b1bb50045010f032ebb017e0024001f018540091a133f030833531240
b80171b3400854282b183f1afdc13f121739fdd4ed3031015f5e5d592514
0e042321222e0235343e0237013e0535342e0223220e0223222635343e04
373e0333321e0215140e040707213216037b03080b0f130dfd18141a1006
0612251e01313c593e2716070c1e352935604e370c0d0b0205090a0f0a0c
4763793f698c52220f2542658f61b801ed120ea3071f24261f14060e140e
0f323d3f1b010b365e50463a3113132a23171f251f1815081c2225231d0a
0c262319355365302c595f6777874f9b1e00>OPXJEM+Calibri-BoldItalic AddT42Char 
OPXJEM+Calibri-BoldItalic /CharStrings get begin
/g1 1 def
/g3 3 def
end
OPXJEM+Calibri-BoldItalic /Encoding get
dup 36 /g1 put
dup 37 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPXJEM+Calibri-BoldItalic*1 [33{/.notdef}rp /g2 /g5 /g4 /g1 /g3 218{/.notdef}rp]OPXJEM+Calibri-BoldItalic nfOPXJEM+Calibri-BoldItalic*1 [24 0 0 -24 0 0 ]msf132.476 418.833 mo($"%)[10.1257 11.9976 0 ]xsh.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: QAAAAA+Calibri-Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPXJEL+Calibri-Italic gcheck setglobal} if
1 1030 4 <0001004afff7012a00e00017003db0852b58bc00000272000c00130155b2
074c28ba027f028000582b2b3fed012fed31301bb10713b80155b36c074c
28ba027f028000582b2b3f2b30315925140e0423222e0235343e0433321e
02012a050a0f182c221c241408050b0f1729261d231407990e262822180c
08131b1110272621170d0a131a00>OPXJEL+Calibri-Italic AddT42Char 

1 0 1 <> OPXJEL+Calibri-Italic AddT42Char 
OPXJEL+Calibri-Italic /CharStrings get begin
/g4 4 def
/g1 1 def
end
OPXJEL+Calibri-Italic /Encoding get
dup 34 /g4 put
dup 35 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPXJEL+Calibri-Italic*1 [33{/.notdef}rp /g5 /g4 /g1 220{/.notdef}rp]OPXJEL+Calibri-Italic nfOPXJEL+Calibri-Italic*1 [24 0 0 -24 0 0 ]msf166.726 418.833 mo("#)[5.99997 0 ]xsh%ADOBeginSubsetFont: MAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPXJEJ+Calibri gcheck setglobal} if
1 1164 4 <0001000ffffa03d7050e00220080b0852b58b718400d014d181100b8ffc0
b40d014d0006b8ffe8b310014d06b8fff0b30f014d06b8fff0b30d014d06
b8fff6b30c014d06b8ffe8b30b014d06ba02110011ffc0b50d014d110612
b80128b31d510c55003f3fed32012f2bf12b2b2b2b2bc52b10c42b31301b
b2061d12b80128b46c1d510c5500183f3f2b3230315901140e0223211114
0e0223222e02351121222e0235343e023321321e0203d704090d08fe9408
14211918221408fe94080d080505080d080384080d090404c4131c1108fb
9e080c070505070c08046208111c13131d120808121d>OPXJEJ+Calibri AddT42Char 
OPXJEJ+Calibri /CharStrings get begin
/g4 4 def
end
OPXJEJ+Calibri /Encoding get
dup 59 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPXJEJ+Calibri*1 [33{/.notdef}rp /g28 /g1 /g24 /g21 /g22 /g12 /g9 /g19 /g5 /g20 /g16 /g18 /g10 /g2 /g23 /g30 /g3 /g14 /g7 /g32 /g27 /g17 /g6 /g13 /g8 /g15 /g4 196{/.notdef}rp]OPXJEJ+Calibri nfOPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf178.101 418.833 mo(;&'"%*\)6$+8$$8,6")[11.7504 12.6143 11.9904 5.36635 8.00656 7.88638 11.5105 12.6142 9.37457 19.1183 5.51047 9.37454 9.37457 5.51047 12.6143 12.6143 0 ]xsh348.736 418.833 mo(%8+'$"\)*'")[7.99936 5.50327 19.1351 12.0072 9.36737 5.38315 11.5033 8.04718 12.0072 0 ]xsh.165377 1 1 .0823682 cmyk
%ADOBeginSubsetFont: QAAAAA+Calibri-Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPXJEL+Calibri-Italic gcheck setglobal} if
1 748 3 <0002003ffffa01ef052f00130029009bb0852b58ba027f028000582bb101
02435558b4291f141e00b80262400b0a1f1e1e141f290424190fb80147b6
05402449194c282b183f3f1ade4ded11121739012fd6d4ed113311333130
1bb71e141f290424190fb80147b605402449194c282b183f3f1ade4ded11
1217393130591b40091e141f29042419050fb80147b76c05402449194c28
ba027f028000582b2b3f3f1ace2b11121739303159010e0323222e02373e
0333321e02010e0323222e0237133e0333321e020701e905111c2a1e1d26
12020506121b2a1e1d251302fef7020a142118191f110502b3010a142119
181f11050104cc1c26170a0a17261c1c251909091925fb31080b08040408
0b080384070c080404080c07>OPXJEL+Calibri-Italic AddT42Char 
1 374 2 <00020051ffed0439056d002c003f00c2b0852b58ba027f028000582bb101
02435558400a212d3f222c003f092237b8021e401a15222c032746212d3f
090800060e30f91c4a3af8400e4d034c282b183f3f1a4ded3fed1217393f
123939012fedc4392f33327d870ec4c431301b4019222c032746212d3f09
0800060e30f91c4a3af8400e4d034c282b183f3f1a4ded3fed1217393f12
39393130591b401c222c032746212d3f090800060e1c30f96c1c4a0e3af8
6c0e4d034c28ba027f028000582b2b3f3f2b3f2b1217393f123939303159
25060623222e0237370e0323222e0435343e0433321e0217133e0333321e
020701262623220e0415141633323e0237032d03242a151a100502200d44
5d723b3b573b25150716304b6a8b582b4c3e341566010a142019181f1205
02fed62f6d443555443120104249376f604a1219110e04070b09a8214b3f
291f3445494a1f3a90918b6b4213212e1901fe070d070505070d07fd6245
4831526a716e2e61673c6a925700>OPXJEL+Calibri-Italic AddT42Char 
OPXJEL+Calibri-Italic /CharStrings get begin
/g3 3 def
/g2 2 def
end
OPXJEL+Calibri-Italic /Encoding get
dup 36 /g3 put
dup 37 /g2 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPXJEL+Calibri-Italic*1 [33{/.notdef}rp /g5 /g4 /g1 /g3 /g2 218{/.notdef}rp]OPXJEL+Calibri-Italic nfOPXJEL+Calibri-Italic*1 [24 0 0 -24 0 0 ]msf445.046 418.833 mo($"$"%)[5.50089 6.00476 5.50089 6.00479 0 ]xsh480.421 418.833 mo(")sh.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: MAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPXJEJ+Calibri gcheck setglobal} if
1 8404 25 <00010035fffa058403bc00450131b0852b58b90047ffc0403d0f014d3808
0c014d29380137080c014d252e01262101262001261f01261e01261d0127
1c012804012903013a3b013b3a013b2d013c2c01102015014d10b8ffe0b3
10014d10b8ffe0400a0d014d10200c014d100fb8ffe0b310014d0fb8ffe0
400c0d014d0f200c014d0f414910b8ffe040200f014d3f104f106f107f10
04104012164810334925493a902c012c200f014d2cb8ffc0401013164867
2c772c02452c012c174c094c003f3fd55d5d2b2b5dc43f3fcd2b5d2b3f01
2f2b2b2b2f2b2b2b2b3130005d5d5d5d015d5d5d5d5d5d5d5d5d2b5d2b2b
1b401d41490f101f103f104f10040c10401216481040334925493a502c01
032cb8ffc04012131648262c362c02022c010d042c174c094c00183f3fd5
5f5e5d5d2b5f5dc43f3f1acd2b5e5d3f30315901140607010e0323222e02
27032707030e0323222e022701262635343e0233321e0217131737133e03
33321e0217131737133e0333321e0205840405fef7030d17281e1f2a190c
03bd0202af030d1a291e1f27190c03fef90504081320171c22120803d902
02c70209121f19181f120802d70201d6020913211a181d1107039f07140f
fca90b0e080304080e0a028d0909fd730b0e080304080e0a03570f140709
0b070203070d09fd1a090902e6090d070303070c08fd18090902e6090d07
0302080a>OPXJEJ+Calibri AddT42Char 
1 3544 11 <00030035fe93038903c8003e004e005f0116b0852b584015122d47100f01
4d47080c014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d
3fb8ffe0b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707
b8ffe0b310014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040
340b014d0058100f014d58201012014c582a25400b12014c250f30070338
4ada0c53e81515603803e93c482a2042d9384a5bd9204f003fed3fed1239
3fed1112392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b11
12173910cd2b10cd2b2b2b10cd2b2b2b10cd31301b40270f300703380c4a
da6c0c151553e86c151560383c03e96c3c482a203842d96c384a205bd96c
204f00183f2b3f2b12393f2b1112392f2b10c62b12173930315901140623
23161615140e0223222627060615141617171e0315140e0223222e023534
3e0237262635343637262635343e023332161721321601342623220e0215
141633323e0213342627270e0315141633323e020389130f81231c325d80
4e37631b12174136eb4370522e346ba6716d99622c10213120312f32251f
24345c814c29471f01101111fefe655d30472f17655b31482f17535f51e9
2029180984764b653e1b0374231f24572f4e78532c1d16122e1e232e020a
02213d593b3e70553125405934213e383319194c2c3d6026255d424d7a54
2d090821fef15c672038492859661f3748fd5e3a3f0208192d2928154143
1d303e00>OPXJEJ+Calibri AddT42Char 
1 8918 26 <00010059000002d703b7002b0060b0852b58b90010fff040160c0d014c26
100c0d014c2f0001003409440902092511b80102b319480f27b80102b105
4b003fed323fed32012f5dcd5d31302b2b1bb2251911b80102b56c19480f
0527b80102b26c054b00183f2b323f2b3230315925140e02232122263535
343e02370121222635343e023321321e021515140e02070121321e0202d7
06080e08fdd6151b04080e0a018dfe7f101304090d0902040b110c070408
0e0afe7501a6080d090646131b11071c21220e16161910026a2125121b11
07060e1611200e18171a10fd9607101b>OPXJEJ+Calibri AddT42Char 
OPXJEJ+Calibri /CharStrings get begin
/g25 25 def
/g11 11 def
/g26 26 def
end
OPXJEJ+Calibri /Encoding get
dup 60 /g25 put
dup 61 /g11 put
dup 62 /g26 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPXJEJ+Calibri*1 [33{/.notdef}rp /g28 /g1 /g24 /g21 /g22 /g12 /g9 /g19 /g5 /g20 /g16 /g18 /g10 /g2 /g23 /g30 /g3 /g14 /g7 /g32 /g27 /g17 /g6 /g13 /g8 /g15 /g4 /g25 /g11 /g26 193{/.notdef}rp]OPXJEJ+Calibri nfOPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf491.796 418.833 mo(-,::,<86="\))[6.86862 12.6286 5.50089 5.50092 12.5326 17.1167 5.50092 12.6287 11.2606 5.38074 0 ]xsh603.571 418.833 mo(6,*+\):8>'9")[12.6238 12.6238 8.37598 19.1255 11.5009 5.50092 5.50092 8.95929 12 12.6239 0 ]xsh.708675 .287083 1 .131136 cmyk
OPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf717.781 418.833 mo(:,=)[5.50085 12.6287 0 ]xsh747.156 418.833 mo(0)sh112.226 447.873 mo(6,*+\):)[12.6238 12.6238 8.37598 19.1255 11.5009 0 ]xsh.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: MAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPXJEJ+Calibri gcheck setglobal} if
1 11746 36 <0002005e0138039d0349000d001b003eb0852b58b4000e07150bbc010a00
040011010a0018002fedd6ed012f33cd3231301bb1040bb8010ab46c0418
1811b8010ab16c1800182f2b10c62b303159011406232122263534363321
32161114062321222635343633213216039d170ffd0c0f16141102f41214
170ffd0c0f16141102f412140303281f1f28242222fe57281e1e28252222
>OPXJEJ+Calibri AddT42Char 
1 9426 29 <00010097fff7016e00e0000b0029b0852b58b10006b8ffc0b60c014d0609
034c003fcd012f2bc131301bb30940034c00183f1acd3031592514062322
26353436333216016e2f3e3c2e2f3e3c2e6d472f2e45472f2e00>OPXJEJ+Calibri AddT42Char 
1 11324 35 <00010065ffed0396050e003e00fcb0852b58400d27370127360126080126
030140b8ffc0b60f024d60400137b8ffe8b310014d37b8fff0b40b0d014c
37ba02110028ffc0402810014d28400f014d280e4f326f327f3203321d18
10014d1d100f014d1d100c0d014c1d200b014d1dba02330000ffe8b30f02
4d00b8ffc0b50f014d004013b8ffc0b70f10014c13131836b8012c400c2c
3af42022012222052c5118b8010bb10556003fed3f12392f5ded10ed1139
2f2b0110d62b2be12b2b2b2bc45dd4d42b2be12b2b31305d2b005d5d015d
5d1bb41313182c36b8012c40116c223af46c0022010b032222052c510518
b8010bb26c055600183f2b3f12392f5f5e5d2b2b11392f30315901140e02
23222e0635343e0233321e0233323e0235342e0223220623222635113436
3321321e02151406232111363633321e0203964680b16c3c6c54360f0605
0203080b070a2a4769484370512e27517c563d58261c181f1d023d080f0a
051412fe1d2349306fa66f3901a068a26f3a1119180e0c111a12111b1108
191d1a2044674a3e5f3f1f0c1a25020f212009121c132428fe9505023561
8a00>OPXJEJ+Calibri AddT42Char 
OPXJEJ+Calibri /CharStrings get begin
/g36 36 def
/g29 29 def
/g35 35 def
end
OPXJEJ+Calibri /Encoding get
dup 63 /g36 put
dup 64 /g29 put
dup 65 /g35 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPXJEJ+Calibri*1 [33{/.notdef}rp /g28 /g1 /g24 /g21 /g22 /g12 /g9 /g19 /g5 /g20 /g16 /g18 /g10 /g2 /g23 /g30 /g3 /g14 /g7 /g32 /g27 /g17 /g6 /g13 /g8 /g15 /g4 /g25 /g11 /g26 /g36 /g29 /g35 190{/.notdef}rp]OPXJEJ+Calibri nfOPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf187.351 447.873 mo(98$%*87/%8,6$"<8%&"\(\)*\)+'%'*")[12.6238 5.5009 9.10576 7.99936 8.37598 5.50089 12.6239 12.6239 7.99936 5.50089 12.6238 12.6238 9.37454 5.37598 17.1239 5.50089 7.99936 12.6239 5.37595 12.6238 11.5009 7.88397 11.5009 19.1255 11.8705 7.74014 12 8.37598 0 ]xsh%ADOBeginSubsetFont: OAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPXJEK+CambriaMath gcheck setglobal} if
1 280 2 <0002000ffe50041b03cc001100260000250323133e0233321e0115140206
23222613070e011514163332361235342e0123220e03011b68a4cb2486ce
8861944c85ed93447a1f2302056957679f581b4c4426454b443625fe2b03
89a0d87b4f966daafecfaf1801a2a10b29114045a701259141613f1b416e
9500>OPXJEK+CambriaMath AddT42Char 
OPXJEK+CambriaMath /CharStrings get begin
/g2 2 def
end
OPXJEK+CambriaMath /Encoding get
dup 34 /g2 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPXJEK+CambriaMath*1 [33{/.notdef}rp /g1 /g2 221{/.notdef}rp]OPXJEK+CambriaMath nfOPXJEK+CambriaMath*1 [24 0 0 -24 0 0 ]msf471.826 447.873 mo(")shOPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf485.326 447.873 mo(?4@A"\)69""""""""""""""?4@")[12 12.1201 5.99997 12.1201 5.37592 11.4961 12.6238 12.6239 5.37592 5.37598 5.37592 5.37598 5.37592 5.37598 5.37598 5.37592 5.37598 5.37598 5.37592 5.37598 5.37592 5.37598 12 12.1201 6 0 ]xsh680.451 447.873 mo(;&'",%&'*")[11.7504 12.6238 12 5.37598 12.6238 7.99933 12.6239 12 8.37598 0 ]xsh112.226 476.913 mo(,%&'*")[12.6238 7.99936 12.6239 12 8.37598 0 ]xsh.708675 .287083 1 .131136 cmyk
OPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf171.226 476.913 mo(\(\)*\)+'%'*$)[12.6238 11.4961 7.87198 11.4961 19.1279 11.88 7.72815 12 7.96796 0 ]xsh.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: MAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPXJEJ+Calibri gcheck setglobal} if
1 9600 31 <00020048ffed03c705210013002b010bb0852b584019281201291101260d
01260c012608012507012a03012902012db8ffc040250f024d602d011418
10014d14100f014d14160d014d140a0c014d14200b014d14180c014d14bb
022d00000020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8
fff6b30c014d20b8ffe8b60c014d24200120b8022d40090a200030004000
030ab8fff040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00
b8ffc0400a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003f
ed3fed11120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b
2b2b31305d2b5d5d5d5d5d5d5d5d1bb10f1bb8010ab46c0f530525b8010a
b26c055600183f2b3f2b30315901140e0223222e0235343e0233321e0207
342e0423220e0215141e0233323e0403c72f6db0817aa7662b306cb0807b
a7662bb00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b161
57a9f7a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e72
8500>OPXJEJ+Calibri AddT42Char 
1 10396 33 <000100720000039c0521003e00cab0852b58400d2936012b1e01291d0126
1e0140b8ffc040170f024d604001161810014d16100c0d014c16200b014d
16b8022db633253325330039b8ffe8b310014d39ba027f000bffc0b30c01
4d0bb8ffe0400b0f014d0b1138392020391bb8012eb63316062e531039b8
0128b10654003fed323f123939ed11392f123939012f2b2be12bcd39392f
2f10e12b2b2b31305d2b005d015d5d5d1bb71138392020392e1bb8012e40
096c3316062e53100639b80128b26c065400183f2b323f1239392b11392f
12393930315925140e022321222e0235343e0237133e0335342e0223220e
0223222e0235343e0633321e0215140e02070721321e02039c05090f09fd
350e150f07030a0f0cfb576939121c3550343d6149310c070b0704020508
183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c130907101e1614
1e17170d010a5c9278622b2b4d3a2222282208121e150f16100e15242318
355c7a453e7b8faf72d609121b00>OPXJEJ+Calibri AddT42Char 
1 10770 34 <00010067ffed0392052100580147b0852b58b9005affc0401c0f024d605a
01310810014d31100f014d31100c0d014c31200b014d31b80235400a4e53
264e4e1813014d40b8ffe840260f014d26200f014d40264e4e2640030e1b
0810014d1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8
022db500080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b3
0f014d0eb8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ff
c0b30f014d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf3
202005495316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b
5d2b2b012f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910
e12b2b2b2b31305d2b1b400c0f3b010b033b113b11164936b8010b400d6c
53202cf36c20200549530516b8010bb26c055600183f2b3f12392f2b392b
1139392f2f5f5e5d30315901140e0223222e0635343633321e0233323e02
35342e022323222e0235343e023333323e0235342e0223220e0223222e02
35343e0633321e0215140e0207151e0303923e74aa6b4171583a0f080603
0e0d0935536f44426444222b53794d7b080f0b07060b0e0971426949271a
3451353a614c320a070b0703020608133a556f405a885b2d203e5a3b436f
502d0172598f6637151d1f0e0e141d15241c202520223e55323758402207
101a1513190f07224059372849361f232823050f1b160f17110e13242318
2e5475473d6951390b020735506b>OPXJEJ+Calibri AddT42Char 
OPXJEJ+Calibri /CharStrings get begin
/g31 31 def
/g33 33 def
/g34 34 def
end
OPXJEJ+Calibri /Encoding get
dup 66 /g31 put
dup 67 /g33 put
dup 68 /g34 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPXJEJ+Calibri*1 [33{/.notdef}rp /g28 /g1 /g24 /g21 /g22 /g12 /g9 /g19 /g5 /g20 /g16 /g18 /g10 /g2 /g23 /g30 /g3 /g14 /g7 /g32 /g27 /g17 /g6 /g13 /g8 /g15 /g4 /g25 /g11 /g26 /g36 /g29 /g35 /g31 /g33 /g34 187{/.notdef}rp]OPXJEJ+Calibri nfOPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf288.186 476.913 mo(,-"%&'")[12.6238 7.36783 5.37595 7.99216 12.6239 12 0 ]xsh351.561 476.913 mo(.\)/$$)[15.1247 11.5009 12.6286 9.36496 0 ]xsh409.561 476.913 mo(0)sh416.936 476.913 mo(1\)*2,#"$,/*3'$"\)*'")[20.5007 11.5009 8.37598 10.0656 12.5206 10.8743 5.37595 9.37454 12.6238 12.6239 8.02557 10.1257 12.0001 9.37451 5.37598 11.5009 8.0592 12 0 ]xsh%ADOBeginSubsetFont: OAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPXJEK+CambriaMath gcheck setglobal} if
1 402 3 <0002005afff0049f03bc0013002100000121071e0115140e012322263534
3e033321050e0215141e013332361235340481feb902393280e691a5ad43
83a6e6b5013efe2886d475334c2c65945b033808448a5295ff8cb1a26fc7
a76834870493f8974e5f2484010e7f89>OPXJEK+CambriaMath AddT42Char 
OPXJEK+CambriaMath /CharStrings get begin
/g3 3 def
end
OPXJEK+CambriaMath /Encoding get
dup 35 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPXJEK+CambriaMath*1 [33{/.notdef}rp /g1 /g2 /g3 220{/.notdef}rp]OPXJEK+CambriaMath nfOPXJEK+CambriaMath*1 [24 0 0 -24 0 0 ]msf612.606 476.913 mo(#)sh%ADOBeginSubsetFont: QAAAAA+Calibri-Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPXJEL+Calibri-Italic gcheck setglobal} if
1 1496 6 <00010020000003ca0521004300e4b0852b58ba027d027e00582bb1010243
5558b90045ffc040090f024d0045010f0340b80230b71212270027000d1a
b80264b2380d2ebb01300024001f012c40091a133f030833531240b80126
b3400854282b183f1a4dfdc13f121739fdd4ed012fd4ed1239392f2f3910
ed31305f5e5d2b1bb50045010f032ebb01300024001f012c40091a133f03
0833531240b80126b3400854282b183f1a4dfdc13f121739fdd4ed313001
5f5e5d591bb1242eb80130b36c24331fb8012c400b6c1a133f0308335312
0840b80126b36c085428ba027d027e00582b2b3f2bc13f1217392bc42b30
315925140e042321222e0235343e0237013e0535342e0223220e02232226
35343e04373e0333321e0215140e04070721321603520306090d100afd35
0d120a05030c1815014d4e714d2e1a080f254434396854390b0a0c030307
090b070b415c703c607e491d0c233f658f63fa0228110e6906161718120c
060b0f0a0a20262712012444776757483b17183730202229231413081316
161413070b2422193652602b29565f6a7b8f54d61900>OPXJEL+Calibri-Italic AddT42Char 
1 1908 7 <00010023ffed03c30521005a012ab0852b58ba027d027e00582bb1010243
5558b9005cffc040090f024d005c010f0320b80257400d00552900412900
002941030f36b80254b2500f0cbb0136001600460126b63e163e163e1b39
b80104400a4b5531ec2525074b531bb80104b3400756282b183f1a4ded3f
12392fed3910ed1139392f2f10ed10ed012fd4ed1217392f2f2f11123910
ed31305f5e5d2b1bb5005c010f030cbb0136001600460126b63e163e163e
1b39b80104400a4b5531ec2525074b531bb80104b3400756282b183f1a4d
ed3f12392fed3910ed1139392f2f10ed10ed3130015f5e5d591bb1160cb8
0136b26c3e46b80126b76c163e163e1b4b39b80104400d6c552531ec6c25
25074b53071bb80104b36c075628ba027d027e00582b2b3f2b3f12392f2b
392b1139392f2f2b2b30315901140e0423222e0227262635343e0433321e
0233323e0235342e022323222635343e043333323e0235342623220e0223
222635343e02373e0333321e0215140e0207151e03038019365375965f32
594f411a0f0d020406090d08092f4c6743547b50271d3f65478b10110306
090d100b714a7c5932515e3968543b0c090a04090f0a0b405c733d4f774e
272d537244425d3a1a019d316660553f250c151d110919100615181b150d
1f251f345163312846331e111307161516120a2d4f683b4752232924110f
081e22200a0b2523192545633d467b60450f020731475700>OPXJEL+Calibri-Italic AddT42Char 
1 2442 8 <00020018fffa03c30514002e00320102b0852b58ba027d027e00582bb101
02435558b90034ffc040300f024d0034010f033214132f132b08092a0909
132a2f2f20311f1f1a202f132f132f001a2f302a0314200e25522b1f32b8
010440094009130e140e5508282b182f3f2f1239391a4dfd32c43f123912
1739012fcd39392f2f123912391133113311331133107d87c4c41087c4c4
3130015f5e5d2b1b40110034010f032f302a0314200e25522b1f32b80104
40094009130e140e5508282b182f3f2f1239391a4dfd32c43f1239121739
3130015f5e5d591b400d2f302a0314200e25522b1f1432b8010440096c09
130e140e550828ba027d027e00582b2b2f3f2f1239392b32c43f12391217
3930315901140e042323030e0323222e02371321222635343e0437013e03
33321e0207033332160323012103c30306090d10099236020a162118191f
11060335fdea140f0205080a0d0902700617212e1f212f1e0d01a6920f0c
c902fdd501a2019108141817120bfef0080b080404080b08011012120716
1a1d1c1a0b0313080c080305080d09fcc61502d2fd43>OPXJEL+Calibri-Italic AddT42Char 
OPXJEL+Calibri-Italic /CharStrings get begin
/g6 6 def
/g7 7 def
/g8 8 def
end
OPXJEL+Calibri-Italic /Encoding get
dup 38 /g6 put
dup 39 /g7 put
dup 40 /g8 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPXJEL+Calibri-Italic*1 [33{/.notdef}rp /g5 /g4 /g1 /g3 /g2 /g6 /g7 /g8 215{/.notdef}rp]OPXJEL+Calibri-Italic nfOPXJEL+Calibri-Italic*1 [16 0 0 -16 0 0 ]msf626.606 481.953 mo(!)shOPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf634.731 476.913 mo(?)shOPXJEK+CambriaMath*1 [24 0 0 -24 0 0 ]msf646.731 476.913 mo(#)shOPXJEL+Calibri-Italic*1 [16 0 0 -16 0 0 ]msf660.731 481.953 mo(&)shOPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf668.856 476.913 mo(?)shOPXJEK+CambriaMath*1 [24 0 0 -24 0 0 ]msf680.856 476.913 mo(#)shOPXJEL+Calibri-Italic*1 [16 0 0 -16 0 0 ]msf694.856 481.953 mo(')shOPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf702.981 476.913 mo(?)shOPXJEK+CambriaMath*1 [24 0 0 -24 0 0 ]msf720.356 476.913 mo(#)shOPXJEL+Calibri-Italic*1 [16 0 0 -16 0 0 ]msf734.356 481.953 mo(\()shOPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf742.481 476.913 mo(?4")[12 12.1201 0 ]xsh112.226 504.753 mo(\)69")[11.5009 12.6286 12.6287 0 ]xshOPXJEK+CambriaMath*1 [24 0 0 -24 0 0 ]msf154.351 504.753 mo(!)shOPXJEL+Calibri-Italic*1 [16 0 0 -16 0 0 ]msf167.851 509.793 mo(&)shOPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf175.976 504.753 mo(?B@C5")[12 12.1249 5.99997 12.1249 6 0 ]xshOPXJEK+CambriaMath*1 [24 0 0 -24 0 0 ]msf229.601 504.753 mo(!)shOPXJEL+Calibri-Italic*1 [16 0 0 -16 0 0 ]msf243.101 509.793 mo(')shOPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf251.226 504.753 mo(?B@D)[12 12.1201 6 0 ]xsh293.476 504.753 mo(5")[5.99997 0 ]xshOPXJEK+CambriaMath*1 [24 0 0 -24 0 0 ]msf304.851 504.753 mo(!)shOPXJEL+Calibri-Italic*1 [16 0 0 -16 0 0 ]msf318.351 509.793 mo(\()shOPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf326.476 504.753 mo(?B@4@)[12 12.1201 6 12.1201 0 ]xsh642.931 454.353 mo
576.69 454.353 li
576.69 448.089 li
642.931 448.089 li
642.931 454.353 li
642.931 431.601 mo
576.69 431.601 li
576.69 428.193 li
642.931 428.193 li
642.931 431.601 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 106.349 517.078 ]ct
[66.72 0 0 26.64 470.101 62.4847 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 278 
/H 111 
/M[278 0 0 -111 0 111 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 278 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 278 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 278 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 278 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JfoXfkocE+Je6<@Z2fIVJcLB&T`F'pJfommq@J5iJe7D_P5p17JcLB&^];7pJfq!7gCSrJO:_!`JcLB&
JcLB&hZ0GpJfr)V]F]Z+Y7Q9cJcLB&JcO0uZlfB2;tX&h/WV$u+93_[;ZTK6rZK>plOX%HoKiNuV\$3H
!#>,m!BLhl&E3]=!!")42?46%!1X#h"nX\R/ck\H])VgZoLT#rf)UI(!=)3h8HCsUrW';J!-e(M!/g4f
JfsA%!&=)[!&jg!Zk*4Lq5sRs!-sA3dguL&o;r!>rXcsInc/YqoW%t4TE)S(!#"n(!#X>gg&M,$o]?.A
\,`9(!#Y=i!$M7@o,tmm!-e(M!0GPMM]`!Sq7lgA!&jg!Zk*4LoW8+CkR`=WndkdEo;r!>rXcF:!+#5t
!I4Zs!87DQ'(`.((qBYB!!%H>joD-D!5\^9)"Zki+T;AJ+96WX^AsAP+G(a6+94.f^Ap1k+LD[[B(W2*
J+aG*&EFB&+nMf9-N4R`!!-B+orA(<Nr[B(!#"n(!#W`VlMpp5o]?.JVZ=((!#Y=i!$M7@iZQ\m!-e(M
!0Fr<S0.edo=k8`rZM%K]+=sSoW8+Cf+<TH!?nT;XT0^I&@;E;?1b/tH1(`b!:'Ub'(`.((pO&@IJN%'
joD-3!7LoJ)"Zki+T;AY+S$WTGQ#8V;>Efa4eNq0+93\^8cX>=^Ap1k+PRI]&-->@XT1W^3WLbA&>Kd:
'_jZgD>gR:-N4SJ!5\^9?2^f(2#/a(+OC+H!!!2u/HIG7rMoo8YlFcPrT4)Lq)n^-kQ$27nc/XopcJP4
rT4)&rW';J!-eCV!%.F_JfrD_!+u2E!&jg!]FalM!+u23!#CY-\.AX@rN-&HrXcF:!+#Q(!!h$SJcP?A
!)3?l!#Vs@!.Fh.!"&#mJcOL)!+u2l!$M7@"?JT"R&/*+!i2?+miVXT^](tJ-M&?!0QVu%JUMcaD.mEc
>?P09@:a1lFEi4bK8+qGl6$imE/'!oH?F1BAmntL?Y*tkG'nmrCa%XX_B8hjrP&=jrZD=n.X$Q1c]nTt
P)E`:&-->@XT0..&/ua$F`VM<B4>+I;GKhT8k`&\=^GTNCi=?9E&?hk()gP%Ec#N$?WpK-9M/&Z=^P`U
EHPItp(458!*9'#!%.[V"<8D"JWJuVk`Gq+Kid^C!+#Q(!!i)q)\H4jCh[Ee=]8'd6U3e!6:ORD<*EX>
BPVI!.-^d=$Wh1\ARSeD;+qBf69dk1:f^k3Bl6fLT)\jbrMoo8rW!-L-C1dL_o'j=!ku!`mf3?9rT4(d
o)K^GGa+>ML4=GeBjk1G;H6h*A8?42ItioCPDqHp!:p1+%s4"rLk9tpD.[-W<EisKF*r\%P\pN"!;QTp
B)Uil+T;B@M9*F36gu2uGQ#8V-M&>[L@r=Q^At(p+96ZQ^Ap@1+Q4FCB)TIE2Z=j!GfZue1@PhTB)Sh3
(B+m=&--k9XT4OL&--A0XT0j&&BPI`<rK-#-N4SVEQG0^-3+&:!!$='WrNCr!!$p"WrS.E!!$BmWrO1/
!3lM(9`;!l)#aO8R,-okjo@4,!!%HGjo>_Z!!&8HjoE-\!!%N=k5=?A-_CA=B)Uil+T;B@Q1_oA^Aq=(
+96Wa^AoVP+98(t^At"u+Sm2\O6jU]3hRSr+D1Se!&jg!s+JIq!(HAg!+u23!#G/;!06KLqQ0aZl4<rE
m&^7;\.Ij8!*9'#!%.[Vs*i%i!'9TL!+#Q(!!i5ur;ZhSkGnT@l2Ug.m&L++ciDDm!)3?l!#Y\8s/O0&
!)E:hq#CDCrT4(do)Jd$kN2cWl2UgXm,e9pkQ&*m!+u2l!$M7@s's-b!*eq8!-eCV!%.:[!Hl'>^B:ZL
+<^"n!Frb1^B2$+,-E'Z+96$P^Ap1k+TG?\XT1u_&-->@XT0..&-6=ArN5Ih!M*-R&-5\.n#ZYjHP4=0
g(46brN-&HrXf*#aK#;+n,NJpX8]."#P.or>c?nf!LcRE!!,Wgn#HMfFT^J#_>jR0rMoo8rW)t,bi\ld
!*8Rh!.Fh.!"&5s!IWkjjoNe:l2UiniU>n1iLL,F!3-#!B)Uil+T;?H+<W=+8PWNA])BADH20r1A,X.E
ZtrN.rC7&g>@h`&TY:-8!/gbG!1a&'!*o"9!-eCV!%.4Y"stfQ4BdQRp:gd@Jl+T[-0HBQ+u*&jr4i0E
"hC(J>Wj@'+96$P^Ap1k+9iAg+#Gu@9*'"1rN-'5q)/4NrN-0s><b(G2?u0*8lT,7O/r&X!."Q%!/piY
!))em!+u23!#G)9"r8+!/4k&cp8nLqEBkum(%r40&-EOg6]^uD"fI/j9.^jS&GZk;<rK-#-N4P^!!!QY
/29D(VZ!Oq@/28P8H#RjTMdTD.L%^o8l]M]W;*CnErINgL&S+Q5k"aR?2^f(#Oqcu#7D(a5&dJ!X88k#
UhMY+$jGeo!s9/qMta7UV1W2A+9]@Xi;`jOrMoo8qu?p:2*=3,NSj]s!.jr*!+Gig"4qEZ3W:uC3CQqY
F,IQgpuVREr\snaroO2^n,NH:rT4(drW)Qj"pkbT.9)Ymp>uP6N^bB-#Nl'h";jeDpZ;Y9Y_-","k<Up
!!$X0jo?P'!;R`<0!YDj!.O_d!-%qP!OsuY+9NrZCo@-E"-4rTOoE)s>Tb0[+96Wa^AoVH+9><PpqHj7
1#F)S,d[?^!jceqkTI,Q!+u2E!&jg!q%*QJTDkqmD#"VB?iI/.VBkmIrX]/I1g?:BXTO"k&:a\]!))em
!+u23!#Fl3!C*X[XT>%;h[ff&U&(knTjAZLR1K@!rN-&HrXel*!=t_"WrQ`,!!$(!Wr]"2oDest-rQ6)
WrmPS!."RE!'p#R!+#Q(!!hfi!ApbMWr\_'l2^MX!<f"jWrekm%%.(r!)3?l!#YD0!>Nr\joC24!!%*>
joO6XoDet!2/^A/jo_:g!2KPU!*AXi!.Fh.!"%rk!Cc#CjoEg0(uG;o"kEJ3!nD?'YlNtf!+u2l!$M7@
p`KQTrkAH,q&fZtrkAGcmiV[%Kt[E!!i%B1rkAG<n/q^TrP&=ZpE9)N!/L?a!2SEn!2ob0!kDtl`ur_O
!+u2E!&jg!p^dF3riH0]q%*OSriH0?mgoOYFK>>A!g+ORriH/np^m64!+u23!#Fi2!-\.>!0c4M!1!Ja
!iK*9h[m:/!*9'#!%.[Vp](:ori6$Wq#CD=ri6$6mf3D=D5dB5!f[_9ri6#an,NGorMoo'l2Ug&po=CT
pAj@V!0R2[!i8TrV#^&d!)3?l!#YA/!-A/%!5&%,!20>R!0?RK!]ZA&r8n'o'VkZi!*AXi!.Fh.!"&#m
rVuq`puVRkh#IGmr8n(;BF;EQg&M+brT4)&rW)^9!)!7*!3l8A!2oh2!*eh5!BchK^B(1)rkAG<n/qaU
^](tJ-L)]R7/+Fr5MmR`62\IuV``EN_B8hjrP&=jrZLtI!'1%\!1rut!1!Pc!(uVi!A'**XT4RcO8c6]
9CNJmB)Sh3(?uG22#"*P0Ad<@1&S-SQ7V>5WXo/2rN-&HrXei)!%n2N!1Wca!0R8]!'gD^nGiS2KD_bN
OGj+=!'p#R!+#Q(!!hch!%7NA!$^;#!$qKC!KnLg!!#^kWrO"2!!3-#4T=ICd.mYA_uAcu<UBbe.C&g5
!PuDIjoAKP!!%HGjo>_Q!!"kMjo@"'!:Kmf0`:&6`$q2Vq#CD,rT4)&rW)^9!(-\"!4M\G!4;a?!(?/r
![1p_q7co7n/q^TrP&=Zko^&*^VBW[!.3WH!@"'4^B'9AZQS3L!+u2E!&jg!p^dE[riH0rq%*P#riH/V
ljs41:9"&k!))em!+u23!#GPFljs/^poOO2i",o%MuBaYHPjp;aUeGQrN-&HrXei)!$qQE!2B8h!2'7k
!%.%4!Wb]dq5XQ^!!)Qi!+#Q(!!h`g!0R&W!+Ojd!<RuRWr[>LirH=a!)3?l!#YA/!&=K8!87/J!7q/3
!&O<KpAb6q>N#>>!*AXi!.Fh.!"%li!5nTo!/081!<]\,joM"]qZ*#a!+u2l!$M7@p`KPtrkAHBq&f[L
rkAFnl6$+!\,*i>>jrj9GQ#8V-KuWQC\YXFZQncYpE0HTrP&Ad,*O,M+D1Se!&jg!p^dESriH0sq%*P*
riH/Ll4<tUV>@:o9CNJmB)Sh3(?lA1>553#TbHAr!+5],!HSmS&EjZ*<rK-#-N4SO!!!u;WrSmi!!&qr
WrO+(!!+XFqPsT]n,NGorMoo'pAjdb!)`Nl!M0DP!!$+!WrZu;_Z8$`!)3?l!#YA/!%%X,!8@5K!9*q>
!$ph0!B]$3joAKX!;QTpIJr:.$0_EiD><5oe-4e2!-J2%!K[E<!4W"/B)Uil+T;B9+94>!^Atb=+99+S
^Ap(S+9=a9qnE,9n/q^TrP&=Zko^!]^A,GC;Y_I#+9>BSrkAJ`+eTtK+96$P^Ap1k+SZKJ-N:+IV>1Z&
X8]4$,3]X>0;SKI!))em!+u23!#Fr5r=AuQXSAmt6/iFV6*1'f!H&LZ&D@Zq<rK-#-N4SO!!!i7WrSmi
!!&tsWrNju!!+:;ql9]^n,NJpX8]."#O)3h'<:i.!&ig:!B-tWWrZi6ciCo_!)3?l!#YA/!$M:'!8@5K
!94"?!#t/&""r6gk5FEB=7?1iIJr:.$0_Ej)<CST!(c)L!D)>OjoL>?kQ%U_!+u2l!$M7@p`KPprkAHB
q&f[NrkAFer?1GL!*B'4!*o"9!-eCV!%-nP!0m8n!0-"]!C=9q^B8m-+<Zgi!+u2E!&jg!q@E]>&17CY
!2]K&!3?+$!$LJ:!(Zpg!))em!+u23!#Fc0!/('K!.=>KndkgVVuEe!C_<$Gq%*O,rN-&HrXei)!#PX8
!2B8h!3#mt!"nDp!'L.Z!'p#R!+#Q(!!h]f!I_$EWrR;&!!+@@ri6'1!O)R_!!#^kWrO"0!!"/@joF-2
!!)$Xjo?4]!!#jmjoAKP!!%HGjo>_e!:'UbW;,KTT&TeO0\u`j!JUWr!6G3@B)Uil+T;B9+94>!^Atb=
+99+S^AotN+97)m^B.X_+S$WTGQ#8V-KlQP=STW3]I`.e!Aq(\^B&p0h]T0H!+u2E!&jg!p^dEPriH0s
q%*P,riH/Cp(6d+!-A(?!))em!+u23!#Fc0!(Zgd!NI.$&-4&KriH3@&bcj)&-,c0XT0^I&GQ5*(]LH8
UA4chW;`gt&a',oC](455k"aR?2^f(#Nu-f4SYrXW"&(nq>^O2SGoPiB`X:q!<>glWrO"0!!"/@joF-2
!!)$Xjo?4\!!&,YjoAKP!!%HGjo>_O!!#mljoX](&`iun*RXlK!KI2Z!9aC_B)Uil+T;B9+94>!^Atb=
+99+S^AotN+9=+,rP&>;n/q^TrP&=ZpE9#L!@G8M^Aqd++9=!hrkAJt,/58I+96$P^Ap1k+SZKJ-N:+I
V>1Z&X8]4$+Qj::*i]+?!)*(uq%*O<rN-&8kR[b1V"h%l;W\Mk)O16'!J1s9&@`8O<rK-#-N4SO!!!i7
WrSmi!!&tsWrNap!!*V-rMoo`n,NGorMoo'kPtVfUA1bh8GW>R!!*Ihri6'I".]G_!!#^kWrO"0!!"/@
joF-2!!)$Xjo?4\!!*hmrT4)]n,NH:rT4(dm/[%a!=7BRjoAiP!!*VHroO6Z"LS6`!!$X0jo?P'!;IZ:
2ZCGk\+q-H^&GbH0]jJXK`/Xc>jrj:GJF-l!%-kO!.jp[!2&Es!@4$2^B(&WbTObF!+u2E!&jg!p^dEP
riH0sq%*P,riH/Cjq%N6rN-&mn.5S3rN-&8k7@W3poOOUk7@Y.LAn:UOVm-jWXo/2rN-&HrXei)!#PX8
!2B8h!3#mt!"o/0l2Ug"rMoo`n,NGorMoo'k5YKqpo=CNk5YMcJGuSMN!]C^OoPJUrMoo8pAb6p!$M:'
!8@5K!94"?!#Obt!0I0A!*AXi!.Fh.!"%fg!0$^8!4VP"o`,!rXT%>_]aU/+q#CD,rT4)&rW)^9!&jhk
!4VbH!58BH!&3sd!a^=_p`KQ)rP&>;n/q^TrP&=Zk9'anpV-\hkTBk[rkAK:0ruMV+96$P^Ap1k+SZKJ
-N:+IV>1Z&X8]4$+S$'F:2Nc$&-+QcXT2#`&-->@XT0.9&F'f,2#"*P.d.EDFT/BCS0>f^aUeGQrN-&H
rXei)!#PX8!2B8h!3#mt!"nc%!^gNep](:ArMoub!!)Qi!+#Q(!!hZe!%@TB!$(2&!,__9!LXVV!3lM(
9`;!l)"dk/+TCL'gA(^Kir8'?(\Rk-!!6>[>PJ0u2#ZP:=7?1iIJr:.$0M9g2>?55-KkF0PQ'\Fc5H6S
R/d5!rT4)&rW)^9!&jhk!4VbH!58BH!&4!e!)rm3!)<83!@5>W^AqO.+96Wa^AoVC+98D9^ArED+T3D_
ErNfS[loZm!?c"Q^Ap1k+SZKJ-N:+IV>1Z&X8]4$+S--E6N4(e4S]Nh'WV/7!))em!+u23!#F].!13Sb
riH02kn!i'riH3t/YisA&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt&b>u&2ZB`W0_k\L"fVF$!'p#R!+#Q(
!!i5un,NHPpo=C"kl:]cri6'o+M7^$!!#^kWrO"0!!"/@joF-2!!)$Xjo?4h!!#Uijo@^C!!*;_roO2^
p]1*i!.Fh.!"%cf!64fr!.=#2!-\A(!ST$Q!4W"/B)Uil+T;B9+94>!^Atb=+99+S^AotZ+96K^^Aqd=
+98)6^Aq7&+96Wa^AoVC+969R^B(M]r#kJO!+#T=!PM0p+S$WTB)TIE2Z=io&-+'VXT53n&-/d1XT0L8
&--2=XT28o&-.djXT1cY&-->@XT0.(&Gcq<>kkE%SIt0!!)3Bo!NS>f&D@Zq<rK-#-N4SO!!!i7WrSmi
!!&tsWrNb'!!$1$WrP]c!!%oUWrP-K!!-B+ri6#(jo>B[po=Fa!UB^c6N4"dW%c<n_>jR0rMoo8o`+t7
roO47q#CESroO1so)Jc8roO2hp](<*roO2Sn,NH:rT4(djo>C#puVV'!p]gd=T7F`i]uH&WW3$2rT4)&
rW)^9!&jhk!4VbH!58BH!&4?opE0HprkAGRp`KQcrkAG&n/q^TrP&=Zjra[\^A,GC9^El&9>1>>!+,FC
Orsa:rP&=jrZM%K!Y>niriH0sq%*P,riH/Co+1nKriH0/p^dFBriH/Yn.5S3rN-&8jq%P;XSAmt4S99\
&-4hmriH/qOV%="!*9'#!%.[Vp](:1ri6$nq#CDnri6#2o)Jc4ri6$$p](;*ri6#Jn,NGorMoo'jo>Dr
Wq`Up0^Jc?/u\cM!(3^ci;`jOrMoo8o`+t7roO47q#CESroO1so)Jc\roO3(p](;MroO2>n,NH:rT4(d
rW)0_!?:.qjo@[5!!,:CroO2a_#VRW!+u2l!$M7@p`KPprkAHBq&f[NrkAFeo,n%/rkAGTp`Kc5^;%!)
+<^4t!-eCV!%-eM!1!>o!/Kqa!Bdgi^Ar?-+L*$hB)TIE2Z=io&-+'VXT53n&-/d1XT0L;&H34@PQ%Za
A,$T<3ioHW)Xn:<B)Sh3(?H)-K_VYLG3ohA/>W9I!+PF/R1K@!rN-&HrXei)!#PX8!2B8h!3#mt!"nf&
!07&Z!*f3u">6^TSdY#f!+#Q(!!hTc!.O^D!,q9*!WX:9ri6$%M#[PV9`;!l)"dk/+TCL'gA(^Kir8'?
(\7V,^]*?qHM@IC4lthU&+BQ!IJr:.$0;-eWr2#XjoC\6!!+P%roO3*T`F9V!+u2l!$M7@p`KPprkAHB
q&f[NrkAFeoH4/X]DfPFFS?mZ1eK:e+96Wa^AoVT+R^EQ=no`4\LHti!ALYT^B'*5\KK6A!+u2E!&jg!
p^dEPriH0sq%*P,riH/CoFM$8WW'""A+pN9,WZk<&GZk;B)Sh3(?H)-8bfCgV]"q7!?dm2XT<SWd1Ef!
!*9'#!%.[Vp](:1ri6$nq#CDnri6#2oDemmVZ*Ur>PA+!'eTm_!!$='WrNCd!!#4XWr]%'r;cEh!>1^u
Wr[,>QN6RV!)3?l!#YA/!$M:'!8@5K!94"?!#P8-!<V3YjoB`%!!40(&+9JuIJr:.$1.`g!!#smjoO<J
mf3A)bl6`*Pl\&gg&M+brT4)&rW)^9!&jhk!4VbH!58BH!&4$f!&a_i!-I3C!I)<X^AoVB+9<gupqHf8
n/q`ZT`2\,QmBZo_B8hjrP&=jrZLtI!%.]I!2]K&!3?+$!$LnF!$qNF!+Yd8lOX&.rN-&8jU_G.V>..m
:%/\p(Q\Qt!J_BG&?69A<rK-#-N4SO!!!i7WrSmi!!&tsWrNb1!;HNo(B(96>N,V_?2^f(#NYpd#GV!o
!(-/T!=4S^Wr[bSp&L6U!)3?l!#YG1!WW3CroO47q#CESroO1soDek4rT4*+iW&t,rT4(djT#;fgA'e1
=nVjm!!*J=roO6a"ciZZ!!$X0jo?P'!;IZ:2ZCGk\+q-H^&GbH0_?IfAGs7CFQ+DCGQ#8V-KZEP+<Z:2
^As\l+9<[KrkAK2/#FHJ+96$P^Ap1k+SZKJ-N:+IV>1Z&X8]4$+S63F;uNfuA)\%"B)Sh3(B+m.&--_F
XT4.H&-3DoriH3c)SQd)&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt&bH&'8c>[i>O_^a!!$='WrNCc!!$a.
WrRbA!!*.Iri6']$e><_!!#^kWrO"0!!"/@joF-2!!)$Xjo?4k!!3-#@f>EhHK"o)IJr:.$02'dNqh`:
YOMSn"/PqY!Q#B8!1<feB)Uil+T;B9+94>!^Atb=+99+S^Aot[+98;;^ArB8+96Wa^AoVA+94n+^B)&+
nfRs_^B;6cYr.7Y!?c"Q^Ap1k+SZKJ-N:+IV>1Z&X8]4$+S63FPl7]aA)\%"B)Sh3(??#,2Z9cUXT>LL
ndke=riH3n,b>S2&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt&bH&'OSu3[>N,V_?2^f(#PS5d!!"JCWr]4:
nc/Z%ri6'i(:F4i!!#^kWrO"0!!"/@joF-2!!)$Xjo?4i!!'n7joB_m!;QTpIJr:.$02'd2u)M9jWF$n
!/^^;!R`%7!4W"/B)Uil+T;B9+94>!^Atb=+99+S^Aot\+95%3^ArB8+96Wa^AoVA+9<XcpqHfIrZLnW
!,DMJ!P(O\+S$WTB)TIE2Z=io&-+'VXT53n&-/d1XT0L:&-+`gXT2kj&-->@XT0.(&GQe;&X`?q!+,7.
!*T<'!N.ZQ&D@Zq<rK-#-N4SO!!!i7WrSmi!!&tsWrNb)!!"VKWrQA`!!-B+ri6#(j8]2]Pk_9Z<V$1j
:]@BqUa3hX_>jR0rMoo8o`+t7roO47q#CESroO1so`+tSr8n!*p]0U[!.Fh.!"%]d!<L79joBJo!!$d5
joO9mgAn5R!+u2l!$M7@p`KPprkAHBq&f[NrkAFer?1qZ!@+*3^ArB8+96Wa^AoV@+96?T^B(>XocOE=
^;%Fs;=Yim+96$P^Ap1k+SlWN&.g2fXT53n&-/d1XT0L;&-3H%r2fs/iXc*%rN-&8it)2spoORa&blq:
&-YM(Xf\ZjM\,[q!*9'#!%.[Vp](:1ri6$nq#CDnri6#2p&G*qL&@tO>N,V_?2^f(#Nc$c!!$!nWr\Fc
o`,.VWiN2#25:01!!#^kWrO"0!!"/@joF-2!!)$Xjo?4k!!*80r8n!*iW&t,rT4(drW)'\!-7ks!QP66
!!Q-Zk2t_p])]qQ!+u2l!$M7@p`KPprkAHBq&f[NrkAFep)j?aqnE,QnK@BF!-eCV!%-_K!AqOc^Apas
+9=pCrkAGEdNGe;!+u2E!&jg!p^dEPriH0sq%*P,riH/Cp(.4@qlKj.iXc*%rN-&8it)5:XSAmt2YI[_
1o^JV!*&4pR1K@!rN-&HrXei)!#PX8!2B8h!3#mt!"no)!+l&.!*eF_!+#Q(!!hNa!>VX0WrOUB!!+LF
ri6#kK)boP9`;!l)"dk/+TCL'gA(^Kir8'?(\Rh/M#6<7HK"o)IJr:.$0)!f*TcGGqW7c:p&G+Ni;Vj=
A"*J^!!$X0jo?P'!;IZ:2ZCGk\+q-H^&GbH0_Z[iAbs.AFQ+DCGQ#8V-MJYL+97c'^AriZ+9=F-rkAGY
Z67L:!+u2E!&jg!p^dEPriH0sq%*P,riH/CpCI=(qQ0a-l4Eb&!+u23!#FQ*!/C9N!-%ZD!@OT?XT3%W
&@`8O<rK-#-N4SO!!!i7WrSmi!!&tsWrNb+!!#XfWrQA`!!$='WrNCa!!%QEWrcu8!;QTq)4pi.!+:lg
nc/Y`rMoo8o`+t7roO47q#CESroO1spAb2'qW7d(iW&t,rT4(dm/Zh[!3GtX!0-^Q!?p"mjoBt2!87DQ
B)Uil+T;B9+94>!^Atb=+99+S^Aot`+9<pHq7coOiZJ8G^](tJ-K6-J>PPr6[O1em!A(5L^B'9:^`^K:
!+u2E!&jg!p^dEPriH0sq%*P,riH/Cq%*QEG586?A,$W$&-->@XT0-r&-,>tXT>45q%*QHQi=)fHP+mA
WXo/2rN-&HrXei)!#PX8!2B8h!3#mt!"o/0r;Zj)Du$F6>N,V_?2^f(#N>^`5kqA\U'CDn!=b7lWr[>D
n,SUO!)3?l!#YG1!WW3CroO47q#CESroO1sq#CF)Q20PBHK"o)IJr:.$/tpb<qteXfa.BR!><EOjoM"S
M#d>O!+u2l!$M7@p`KPprkAHBq&f[NrkAFeq]Gqf@B91<!-I3C!-eCV!%-hNr?)+g\G3f==8F$?-(FnK
!M(R1+Q4FCB)TIE2Z=io&-+'VXT53n&-/d1XT0L@&-<YFRJ<laA)\%"B)Sh3(B+m,&-3TEpoONdq@EZB
MZ0^YM\`f6aUeGQrN-&HrXei)!#PX8!2B8h!3#mt!"o).!XM8]po=C!nGr+[!+#Q(!!hK`!=5IqWrP9Y
!!*7Wri6'S#1*@T!!#^kWrO"0!!"/@joF-2!!)$Xjo?4p!!E[:al_a^joB_e!!%HGjo>_I!!*J^puVQQ
q>^O$Zi9(fZj>jqR/d5!rT4)&rW)^9!&jhk!4VbH!58BH!&4Bp"#F)2[emf?I<tn-!-I3C!-eCV!%-YI
!/1-^!0d:&!?mC#^B:Jf+<Z7Y!?c"Q^Ap1k+SZKJ-N:+IV>1Z&X8]4$+T;oS,=ugLqlKm8C&Y47A)\%"
B)Sh3(?#f*F058?!.k"Y!>0VVXT=e0Qk8Hm!*9'#!%.[Vp](:1ri6$nq#CDnri6#2rW!$85%pYeWrZa>
ri6$'iW&sarMoo'pAjLZ!,MA1!.4SC!<I9@Wr\FpYQ3#M!)3?l!#YA/!$M:'!8@5K!94"?!#PV7!ut6u
f_ae3L4]Ee!.*o1q#CDCrT4(di;`k>puVRRqZ$WtRf;FM`tQMo\,ZM@rT4)&rW)^9!&jhk!4VbH!58BH
".tpX\bWuB^2Y9@rkAGTiZJ5FrP&=Zi?/+kpqHjD0`3$nGQ,>XZoF$fnfRpErP&=jrZLtI!%.]I!2]K&
!3?+$"-&&#VtmFsXC)TPriH01iXc*%rN-&8m1Aq%!&s\T!N[FA&-->AXT>.EV%D>l!*9'#!%.[Vp](:1
ri6$nq#CDnri6-WJ<?Z'WroA'!+5`+!*eF_!F;c*WrNC`!!"PEWr]44qu?_&ri6'l)SH-f!!#^kWrO"0
!!"/@joF-2!!)$Xjo`)o_qk.N"6FY*JH"[2HM@L+!!%HGjo>_H!!#(TjoONZqu?_FroO74,Lldo!!$X0
jo?P'!;IZ:2ZCGk\+q-H^%oG?^BC2t+<Yt/^ArB8+96Wa^AoV>+9<XdpqHfDr?))LrkAKG7dM7\+96$P
^Ap1k+SlWN&.g2fXT53n&-/d&XTX\@&.iLRXT2kj&-->@XT0-q&-3B2poOO!r=B$-XfVZ,WA]GAq%*O,
rN-&HrXei)!#PX8!2B8h!3#Li"H"N+!+5`+!*eF_!+#Q(!!hWdqu?`uQM@K\:]17n8,fOiVCA&9i;`jO
rMoo8o`+t7roO47q#CESoB$1e1B7E*roO3,iW&t,rT4(drW)!Z!<L=;joB/p!!$F+joOC![/e;K!+u2l
!$M7@p`KPprkAHBq&f[No=kET.3KaYrkAGTnK@BF!-eCV!%-VH!-%_J!2]Z;"])hH^V3dn+L*$hB)TIE
2Z=io&-+'VXT53n&-/d&XT3)<)%[?lriH01iXc*%rN-&8i",lqpoOO[rX]5tX0&M*7cY,K&-,c0XT0^I
&GQ5*(]LH8UA4chW:R%m@L3#7?iI)+>N,V_?2^f(#N,R^=88frO8]+_1T@FUW]U+YJcGfO9`;!l)"dk/
+TCL'gA(^Kiq):8KFIn]JH"[2HK"o)IJr:.$/bd`FSOtu_#=<;7H<Omj\M-AkPtTprT4)&rW)^9!&jhk
!4VbH!57s<"0k`HH2bPYFQ+DCGQ#8V-MJYJ+9=@6pqHnr+@!C8^Ar&N+OD52B)TIE2Z=io&-+'VXT53n
&-/d%XTP1]&82!E!+Y:*q%*O<rN-&8i",o8XSAn"0G#n7riH0(`"9Ei!*9'#!%.[Vp](:1ri6$nq#CDn
nuDk_2?7+`WrQA`!!$='WrNC_!!*n9po=KA!$\6<WrPtR!:g*i9`;!l)"dk/+TCL'gA(^Kipu46d7=7f
roO3,iW&t,rT4(dm/ZbY!?^Fujo[7:/_p?f!,SA0g&M+brT4)&rW)^9!&jhk!4VbH!58BH"b(`LOJ'5^
^B2,]H2bPYFQ+DDGJF-l!%-SG!1<Pr!dc`,rkAG_\KJa3!+u2E!&jg!p^dEPriH0sq%*P,riH??B5rE]
WVW^uXB'!5XT2l+&F0l-B)Sh3(>fZ'L\RtQC*K8KXT37d&?69A<rK-#-N4SO!!!i7WrSmi!!&tsWs!!@
C3bX9VY[=pW_?e!WrQA`!!$='WrNC^!!%TFWrc`ERf9>fBB]DZ!!#^kWrO"2!!3-#+TCL'gA(^Kir8'D
LObG[\`!>H!p+$EroO3,iW&t,rT4(dhZ*YZpuVX2)peNG!/c@.q#CD,rT4)&rW)^9!&jhk!4VbH!58BH
!&4?o"!g-EVt[q+FQ+DCGQ#8V-KZHI+95[A^B)$HrkAJr,+9Y5+96$P^Ap1k+SZKJ-N:+IV>1Z&X8]4$
+T2iR'JNRRpT4F*iXc*%rN-&8rXe'#!)30i!NVOcXT<qbZ4P+h!*9'#!%.[Vp](:1ri6$nq#CDnri6#2
r;Zp&,>=9pWrQAo!:g*i?2^f(#N#L]627J]W07.\!I=jj!3lM(9`;!l)"dk/+TCL'gA(^Kir8'?(]==9
"YXN,roX(>!.*W)!.Fh.!"%N_!*AsX!TM)tjoM7\iW,AH!+u2l!$M7@p`KPprkAHBq&f[NrkAFeqB,h_
:7h9r!-I3C!-eCV!%-SG!@YMO^B(#Uq&l4N"?:t*P@<c"!?c"Q^Ap1k+SZKJ-N:+IV>1Z&X8]4$+SlWN
&Nu*KXT2kj&-->@XT0-o&-3WGorS7U(R5O5-uY.IJl1eE!*9'#!%.[Vp](:1ri6$nq#CDnri6#2q>^Qt
0o,S*!*eF_!+#Q(!!i5ukl:_jV"LbhM[6<_li7/,BSq1,l2UfXrMoo8o`+t7roO47q#CESroO1sq>^Qt
6FQ^P!.*o1q#CDCrT4(dhZ*Zch=]n2]*lIUe,TUrN4Pool2UfrrT4)&rW)^9!&jhk!4VbH!58BH!&40j
!@3-j^ArB8+96Wa^AoV;+97,k^](tKXY?"_!DL'&^AqpC+S$WTB)TIE2Z=io&-+'VXT53n&-/d1XT0L=
&-3J^qQ0a-iXc*%rN-&8m1Ah"!-Iq:!Lk4(&GH_:4K&.[!*8Cs!*9'#!%.[Vp](:1ri6$nq#CDnri6#2
p](<tAbrG->N,V`?*!t*!!h?\!,_G1!LOJ.!8dbW0W"`K!)2\Y!)3?l!#YA/!$M:'!8@5K!94"?!#PD1
!<n;UjoB`&!:'UbIJr:.$/PX^P4n#=bSSS*`rH-*hYlR:BBoNtB)Uil+T;B9+94>!^Atb=+99+S^Aotd
+Sm2\I/CYYFQ+DCGQ#8V-JfjF8b]t#[QN[pYTNrpZM_H;TBdU"B)TIE2Z=iq&-<CS-N:+IV>1Z&X8]4$
+SH?HC\t46A)\%"B)Sh3(>]T&3VTWVUb)KVQk098T_tnlNq3hX&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt
&bZ2)A,E;,>N,V_?2^f(#Nc$^!!"SEWr\q9QN.*f!"#4oWrS"B!!#^kWrO"0!!"/@joF-2!!)$Xjo?4k
!!%`MjoB_e!!%HGjo>_e!9!nX4SRt=fdX*)k5YMke,8>.\Ea+pB)Uil+T;B9+94>!^Atb=+99+S^Aot]
+9<XTr4`5RnK@BF!-eCV!%-PF!?n]C^B)#@`ZWSM!)<@*!1iEu!+u2E!&jg!p^dEPriH0sq%*P,riH/C
p(.6:MYsRVA)\%"B)Sh3(>]T'&YAg#!NS9<&@W2N4Su5\MsCoS<rK-#-N4SO!!!i7WrSmi!!&tsWrNb*
!!*+Sr2Tg%iW&sarMoo'h>dQWS,')cW@mlET)\jFql9^Oli7%d9`;!l)"dk/+TCL'gA(^Kir8'?(\Rh0
!jhge!.*W)!.Fh.!"%N_!WW;Kq;q_<5*Q$I62fpIk2s&:!!$X0jo?P'!;IZ:2ZCGk\+q-H^&GbH0_HOg
7/Xe"FQ+DCGQ#8V-MJYG+97W$^ArAQ+RU?P>l289K^0`\B)TIE2Z=io&-+'VXT53n&-/d1XT0L:&-+Qb
XT2kr&GZk;B)Sh3(>TN%K))MKA%iN*&-,E$XT3G.&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt&bQ,(-iC"F
>N,V_?2^f(#Mf@[I/9lEX'1\e!($L_!,VK3nc/Y`rMoo8o`+t7roO47q#CESroO1so`+tKr8n!*iW&t,
rT4(dm/ZYV!2oYT!-t(7p](:qqrRm@lMposrT4)&rW)^9!&jhk!4VbH!58BH!&4$f!/pfj!-I3C!I)<X
^AoV:+98G<^B(tsZln9L!'C+n!OjrP+96$P^Ap1k+SZKJ-N:+IV>1Z&X8]4$+S63FHMsrGA,$W$&-->@
XT0-m&-/*oXT>F?bRhi,!%RoK!Mq+.&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt&cD_)!!%*=WrQA`!!$='
WrNC\!!&8[Wr].,j8cCa!$2!<!MUCr!!#^kWrO"2!!3-#+TCL'gA(^Kir8'?(\@\-S,MILHK"o)IJr:.
$/GR]a84p!i=>bcQiI+6r8n%6+7fL.!!$X0jo?P'!;IZ:2ZCGk\+q-H^&GbH0_?If7fC(%FQ+DCGQ#8V
-KZHH+94.l^AsXc+T<JeBt;!nV*O;g!+u2E!&jg!p^dEPriH0sq%*P,riH/CoFM!\rN-'0iXc*%rN-&8
rXe$"!$V0?!/IWejq%\uVld(b0Bs)K<rK-#-N4SO!!!i7WrSmi!!&tsWrNb(!!"JHWrQAo!:g*i?2^f(
#MoF\')AR.J]%Q6!!Q,oX/h:*l2UfXrMoo8o`+t7roO47q#CESroO1sp&G-o!&sl=!.*W)!.Fh.!"%K^
!#YOo!3Y)W[K$JGhWEt90'WE:B)Uil+T;B9+94>!^Atb=+99+S^Aot[+9<[prkAGTiZJ5FrP&=ZhB2f"
q7coJoH9\I![U5lko^!LB)TIE2Z=io&-+'VXT53n&-/d1XT0L9&-3E>riH01iXc*%rN-&8h[ff"7es.d
?B>^"'f76#&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt&bH&("/>dq!*eF_!+#Q(!!i5ukPtTEq5XKqV#]i^
!X0qfkPtTVrMoo8o`+t7roO47q#CESroO1soDempg&C+6HKkM+!!%HGjo>_E!!#gjjoBJ9!7UuM#;dOd
!!$X0jo?P'!;IZ:2ZCGk\+q-H^&GbH0_6CeOT)upFQ+DCGQ#8V-JfjFIeg_Y8:r&U+96$P^Ap1k+SZKJ
-N:+IV>1Z&X8]4$+S--EIf?GLA)\%"B)Sh3(@;\(&--SCXT1;L&D@Zq<rK-#-N4SO!!!i7WrSmi!!&ts
WrNb'!!%9CWrQA`!!-B+ri6#(h>dOeq5XKGZN.iB!)3?l!#YA/!$M:'!8@5K!94"?!#P5,!29DS!.+D?
lMpp5rT4(dh>dP3q;qZ<b5eOB!+u2l!$M7@p`KPprkAHBq&f[NrkAFer?1hW!.+XZ!,pj>!-eCV!%-PF
!2]P,!P9Z<+HdiIB)TIE2Z=iq&-<CS-N:+IV>1Z&X8]4$+S--EC&Y47?K)LrB)Sh3(>]T&PkqK_W>5:A
Je7_h!*9'#!%.[Vp](:1ri6$nq#CDnri6#2o)Jc!ri6$!iW&sarMoo'joG2W!0I&X!N$$b!9!nX9`;!l
)"dk/+TCL'gA(^Kir8'?(\7V,K)Xm4F5d0"IJr:.$2sq`!!'k3joOBFX8p?B!+u2l!$M7@p`KPprkAHB
q&f[NrkAFeo,n$DrkAGAnfRoU!$UqV!-eCV!%-SG!%n#]!1:YHYoj$YrP&=jrZLtI!%.]I!2]K&!3?+$
!$LtHrX]'.riH/sndtg5o+1n6rN-&8h[fc.q5jXPgCTba!*9'#!%.[Vp](:1ri6$nq#CDnri6#2o)Jb^
ri6#gnc8[jo)JbrrMoo'hZ*Wdq5XLHo)O@B!<>glWrO"0!!"/@joF-2!!)$Xjo?4h!!$L-joA`Y!!*-%
o)Jc=rT4(dhZ*Wiq;q[[Mu`&A!+u2l!$M7@p`KPprkAHBq&f[NrkAFeo,n0$^;%BLo,n-X\[5T5+96Wa
^AoVT+R(!K<;F9/E24W'+96$P^Ap1k+SZKJ-N:+IV>1Z&X8]4$+S--I0W_CX1@l%ZA>c.or"/Z8!+u23
!#FH'!(?Xb!+3AM\.AX@rN-&HrXei)!#PX8!2B8h!3#mt!"nf&"='qIW[@<;"'h[p5kG$V?2^f(#N#L]
3;KTT=+UGC!!#^kWrO"0!!"/@joF-2!!)$Xjo?4h!!Ft9k2eDj!!@W*elMDC!.Fh.!"&#mo)Jbaq;q[!
RK2%A!+u2l!$M7@p`KPprkAHBq&f[NrkAFenfRus>!MU$!'1%n!3Yr:!I)<X^AoV<+96fb^Apj2+Mo6$
B)TIE2Z=io&-+'VXT53n&-/d1XT0L7&-=FT0)#qU&-+0YXT4m`&-->@XT0-o&--MAXT1B(&?69A<rK-#
-N4SO!!!i7WrSmi!!&tsWrNb1!;6Bo+?gt?!!!u;WrSOZ!!$='WrNC^!!$O)WrO^1!0R<^9`;!l)#""3
!!"/@joF-2!!)$Xjo?4g!!4WL/FriA,lZp+c1Cu9IJr:.$/Y^_L&'j24Sf&0!;QTpB)Uil+T;B9+94>!
^Atb=+99+S^AotH+96$Q^At\6+96Wa^AoVC+Sm2\U\__+]-`^ai?/,4rP&=jrZLtI!%.]I!2]K&!3?+$
!$L53!*0$#!2K/t!+u23!#GPFiXc*PqQ0dt(98"g&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt&`E]k9<5)o
X.](b!+#Q(!!hB]!0-iU!N-.>!3lM(9`;!l)"dk/+TCL'gA(^Kir8'?(\Rjq!!$U0joF'+!!%HGjo>_F
!!'_/joOEHgAmWA!+u2l!$M7@p`KPprkAHBq&f[NrkAFei?/,crkAH+oH4-XrP&=Zi#i%O^A>SERdqSQ
+9<TsrP&=jrZLtI!%.]I!2]K&!3?+$!$L53!/1?R!06[_!+u23!#FK(!#u!?qQ0aRM\,(`!*9'#!%.[V
p](:1ri6$nq#CDnri6#2i;`k,ri6$UoDeksrMoo'pAjIY!=c(*WrRdI!71]G9`;!l)"dk/+TCL'gA(^K
ir8'?(Z>>oWrD,\\blI'!!%HGjo>_G!!*\nqW7d^])]>@!+u2l!$M7@p`KPprkAHBq&f[NrkAFeiZJ4c
rP&>eoH4-XrP&=Zi#i"uq7crN+Q":E/P9):1%QLk/k8u?7P<%1">*2H75"0SnfRpErP&=jrZLtI!%.]I
!2]K&!3?+$!$L84!&"5P!-RoF!+u23!#Fr5oFM!hq5jX*h@Kf13CZ%Qo+2'H2Fg%k*n:i"&-O"57Pu7J
&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt&`Ncj+oSGADY*o0?*!t*!!hE^!&s_S!*J(X":d"F/edgV"V3(F
2(9('!9=+_%P0[i&**]j9`;!l)"dk/+TCL'gA(^Kir8'?(ZbYr!!"SKjoCY<!!%HGjo>_G!!#XejoBS]
!!Ert:H]Te!!*fo"&MKH(!lp`'0AuJ($#>pB)Uil+T;B9+94>!^Atb=+99+S^Aotd+QadHN;^KkD=eqN
GQ#8V-K$!HHhkDV9&Ulo+>o2W^B1*4+o3;`-"*:PqnE3/F">fa![1O>r4`9"9'.5rB)TIE2Z=iq&-<CS
-N:+IV>1Z&X8]4$+Q<q4Hi:&H>kAR-B)Sh3(>o`(CAFt33r'?N&-4&)r2g$]8J1e1!u4UiV#.7qP[YQ^
&-<G3PPhN`LH=i7q%*O,rN-&HrXei)!#PX8!2B8h!3#mt!"n2j!-S7@!)rLi!+#Q(!!hWdqZ$V*q5XKJ
huEcnGPnKCM`q1<!!<BnL8"LF!g$Omec5gR301,@ri6'N0'3-69`;!l)"dk/+TCL'gA(^Kir8'?(ZGDp
Sc.[NE:a,1IJr:.$2sqb!!%]Jjo@R&!!+.6r8n'm;uugq!s`,=f_ae4_0?LT!:Bgg!DL<,joMVJjo>Bn
rT4)&rW)^9!&jhk!4VbH!58BH!&3FU!Csm'^B))JoH4-XrP&=Zi#i#pqS*'D-K-'J0X(;e!L"l/+9Em*
Z1bp4[K'1W+9<pVq7csE>N[+/B)TIE2Z=io&-+'VXT53n&-/d1XT0L;&FL)12QZkZ!(-;h!+u23!#FK(
!0R,[!NHpo&-3lEr2ot#!J2*c&-<VNTD#AfUd3QD!?$OcXT>Lqk7@VorN-&HrXei)!#PX8!2B8h!3#mt
!"n5k!@k,JWrP*N!!$='WrNC_!!&#TWr].(nc8.Z!>1drWr[SQr;Zm(;4R?\!MM@&!!*CSq5XOr5Ni(J
!)3?l!#YA/!$M:'!8@5K!94"?!#OYq!BB3>joA$G!!%HGjo>_G!!'_/joOEIi;`lpchZ](V[<;%!XW_k
p>uD.7b@\A%B90c!p*D^kPtTprT4)&rW)^9!&jhk!4VbH!58BH!&3IV!A:SR^Ap:d+96Wa^AoVT+R:-N
/ACtq!1Vpi#:#\P^T2<\Yl2<:P5ZR)2PU2c#.g"C>ZlHWrP&BG:uibn+9='grkAQ#Ao"dQ^B)#CkTBk;
rP&=jrZLtI!%.]I!2]K&!3?+$!$L>6!?Rg0XT0gJ&GZk;B)Sh3(?#f**3B"=!/]YG#8;rrXdNNkT)Gbk
Jc62]-B\;0#,m,d9LrrhrN-+#5Pu)M&-3f5riH9U<Ec-rXT>IdkR[_prN-&HrXei)!#PX8!2B8h!3#mt
!"n8l!=tXsWrO+2!!$='WrNC`!!*P/qPs[N!!)$Z#6TUZX-QdSS,KAfHi=!G(QA?o#,ZcT5s8_GrMost
1thp1%ZC=e"+Em?TDkklW&")Inc/Y`rMoo8o`+t7roO47q#CESroO1sj8]2qchuo*,kM':IJr:.$1.`c
!!*_oqW7d`i;a)dZ0(2jF'I#ijoD7W!!+4UroOFBVghcGL!KYZ!T?K$!!*bGroO<_ASp#tjoOI/kPtTp
rT4)&rW)^9!&jhk!4VbH!58BH!&3LW!@soB^B(qjoH40Y^](tJ-K-'I<;F9/F5\5HFMGSn0H_K=r4`M9
+AK5X^V,1Qr#c"tYl2<;XX*K\l6$6SQG:2HA,[SNFT&rST'.9sB)TIE2Z=io&-+'VXT53n&-/d1XT0L*
&-3`4r2g"!'(c_8B)Sh3(?#f)6i!ha@c7k'A$)l'+:o)Qr2g5k&3Q_iXfHCarX]/C&1!kGXT=n*g^jW%
KrqJV;Z74-A,WM0N9CfQ<rK-#-N4SO!!!i7WrSmi!!&tsWrNb1!9jIa%#k+b!N-%l!!$='WrNC`!!#"S
WrQ;]!!$4-X/hX#!!#(XWsCT`0VGJIWG*%D!!*k)rMosd"P`t\!e78OVb$de!*]?%!/Kb<!)3?l!#YG1
!WW3CroO47q#CESroO1sjT#;m^&7!ni<8cQ!.Fh.!"%Ta!)*.M!-n8=l2V'8k2sr*!!#dljp4NY6.b8]
j,FrS!!+.frT4.)"l'(]"0:SHiF2]c!."P*!4M@sq#CD,rT4)&rW)^9!&jhk!4VbH!58BH!&3OX!A^AG
^At)$+96Wa^AoVC+T*>^I/1MW9]@/t0"Ja36N/)-2#P)mO@[!u^SO!e+95RB^AqTq+9ZYu^V3A?+9<Tr
rP&BH.HqrTB)TIE2Z=io&-+'VXT53n&-/d1XT0L+&-3u9qlKj]o+1n6rN-&8rXe-%!,MD4!'B0O"<OJC
XYTke!$qKE#(JS2Xf[g;q%*Ntr2frnlk&[u"CJ:5X?-:k!*&p!!NR+&&-,c0XT0^I&GQ5*(]LH8UA4ch
W;`gt&`s&o'8uag!0-RM!+#Q(!!hH_!+Yi*!&*=3":q</X!R`F!#>F4#'h_sX/h=%q#CCYri6+$X$YSA
"BMS(W\45M!)!3j!N?Ci!!#^kWrO"0!!"/@joF-2!!)$Xjo?4k!:^$i)S>n/!5A%)!.Fh.!"%Ta!/:72
!'fHC";K\Sjtco9!$2""#,40;k2sK,q#CCnr8mu^g].Iuk2tbhr;Zh.rT4.@%I!imB)Uil+T;B9+94>!
^Atb=+99+S^Ap%P+9=p9qS*#eo,n$WrP&=Zi?/,sqS*'E-h/>M+9Q]"^Qn^>!58<F"Lc([S1OFX!%e&_
!/0/N">77"^NTMt!-e@U!))T"!?c"Q^Ap1k+SZKJ-N:+IV>1Z&X8]4$,3KL<24s`I!-e#G!+u23!#FN)
!L'Y_XT>I=iXc3$Xf[9S&-/d/XTYH%Xc"1o&-*^JXT3Fu&-O&PXfZ14&-->?XT1EH&-,c0XT0^I&GQ5*
(]LH8UA4chW;`gt'B]>r.%L.7!-.T1!+#Q(!!i5ulMppGqPsXq#N>^c=f\TPqu?_rr2TspX/gp`p](:'
r2Tg6jT,)V":q</X'PW'!+,T(!&!L9!)3?l!#YA/!$M:'!8@5K!94"?!#k##!B/@%joCeG!;QTpIJr:.
$/kja_#!0oiX4ZF"*itjWr)hsj8A$Bg#hG'&bl>+')^klOo5:=!!F%mk2q'h!!%KGjo@U0!!$X0jo?P'
!;IZ:3<$Ym\+q-H\c0>D39_Oe-?m0!^Ar3D+96Wa^AoV?+94(j^Asi(+QX^K+g8Yq:]2C9/,?p\RO7_N
!5&3E!1M^d"F@htTd9OY!2BD+!(cl-nfRpErP&=jrZLtI!%7cJ!2]K&!2ogu!%7"B!Z#CKq5jX'o+1n6
rN-&8m1At&!$D$=!0#nK";.3,XZl[p!#ta9!JhNb&-/^.XT415&-6LI!j.Ltr"&jir2frXkn!hqrN-&H
rXei)!#bd:!2B8h!2][q!#b#$!X;r0q5XKpo)JesX8]."#N>^`&G`@,LZ/::!Lg'i1Aq1Q%/Hq)K*V)M
!2f^q!/'kClMq&rX/h-]qu?_Tr2TfJkl:]WrMoo8o`+t9roO47q#CEOroO2)kl:ekIH0JdjoBGn!!%HG
jo>_I!!!f1joDgK!!EALk2o)1!!!T+joM[mq>gHo!9!h<!3k8Z"G5du]*8*4!5/6l!'9?E!+u2l!$M7@
p`KQ$rkAHAq&f[CrkAG!r?1MN!E#io^AtV=^Aq4(+96Wa^AoV?+95I<^ArK;+9G0M^B(_dr?))2qS*'6
0(pCf.K$p\Y219(0tY38;u@a<3r?Yl/*S/VB)TIE2Z=iq&-<CS0E/'RV"kQ%T`2%n1$T;N5aVDN!29@n
!(-8g!+u23!#FQ*!(Qdd!+ts:ljs:\Xf\?2r=ArfqQ0dg*qg-F)>pT:SDFe[+fVTG6MqAp.f6=J)Y"C7
&-,c0XT0^I&GQ5*,6"VCUA4chSc5Yi,jG@11m@j<!1s.i!&sKL!+#Q(!!hWdr;ZgYq5XL$iW'*6X/hlq
r;ZgJqPsXb&,#u'$2gh(R,.fG';hh22uEXU*;cc:$g@Wk9`;!l)"dk//cOl4g%bUJe,JJ00^8W=7`PAg
!7h&1!(uh_!.Fh.!"&W)jT#9Uq;q[*iW'*Ek2t;!r;ZgYqW7h((%qV-%K,>gc0PH%!!F1tk2o;6!!"AC
jo>qV!!$X0jo?P'!;IZ:7fL.&Z2#LBVuFF2=6q%19V)'q!MVpZ^Ap7b+96Wa^AoV?+96ug^Aq-j+9Qu*
^PVk2!,MJH!PLkn+94S(^B20bWnnj$FMGSo,5`P`Fo8uSVs#6'B)TIE2Z=io&-+WfXT5!h&-/$qXT1ia
&GH_:4,j'=!K])8XT0d@&-->@XT0-r&--YEXT1WG&-H[LX`s[S!*]9%!NS!K&-+<[XT4dG&-QLFXdp+&
&--8=XT4[N&-,c0XT0^I&GQ5*.K6@JSG<-bP5_K^46uqJ08KG*!K/9&WrO(0!!$='WrNCa!!$^.WrP!G
!:p0m@]QPLqu?^oql9ar-M7?=+T/8?Q/2KD>H=fn"8i-!>l:W&P3DrI!)3?l!#YA/!&so>!7LZC!6"m!
!)Mq]!C+!hjoN+MrT4))o)Jc=rT4(diW'%=k2uR'!(PrJ",,h!R/?paD>WGri\U6-!%Rp/!6F!s"FB4m
cNO.G!.=_,!6"($!+u2l!$M7@p`KQIrkAH0q&f[!rkAG[miVZY<g``u!f&*nrkAKG,4coWGQ#8V-MJYM
+9<goq7cn]iZJ?$^V<tM+97T%^Ar9G+95@<^AsP\+Sm2_Vn]udr#c"bZ2D?:DWi2CB)TIE2Z=io&-,Z.
XT4R\&-.4ZXT3,)&-<V9L\e+SFr!%9XT>C6q[iQ7!+u23!#FT+!>_='XT0C$&-J3"X\&F%!.k$L!+>F1
!(-Uc!/1:^iXc3XXfZ"/&-3H:r2fs)kR[_prN-&HrXei)!(m0j!0?pU!."RE!+PBs!X:]:qPs[9#:oeS
!N#qi!!$='WrNCb!!*:oq5XK*rW)$["-KXb55YB\Hi'iD=7cIm2Z0TUIbk&,P,kWbqu?a"SG]Df<;-C`
!!#^kWrO"0!!$L-joE3m!!&bmjoC)'!!3F$Y578^PmKMNjoOBBo)Jc=rT4(dm/Zk\!=7-Ljo?(S!!C.$
k#D6Y!2]ST!-Ro6!(m+N!34lU!lX6`!-S2>!<ppLjoBDb!!$X0jo?P'!;R`<,GY7Q!/1.j!-J4T!O=6I
+9No^K=:Wk"KG3>+CY8a!2B$,!I)<X^AoV@+96oe^At_%+9Wn&^V2?!+9<[pr4`9/,P3)YE;[HNJFaoN
+9Wn&^V)E#+95F>^B)&(kTBk;rP&=jrZM"J!>CUpXT3G<&--5>XT>(5o+2!=3H:kkXT=eQ!Y>o>riH0^
ndke5rN-&8it)3.q5jXmiXc5*XKAQFr=AuBV#7=qPS<d&rX]':r2fs;h[fo'XKANIr"&irr2g"$,3TR<
<rK-#-N4SP!!*1]ri6$7q#CCuri6'j$iU/"!!<BVC81R*"I(YA!(Qsg!/pCJ!+#Q(!!hNa!,),.!2AHQ
!s5L'WW3S.!!*.qr2Tj["7uQn<rAuuBAW[l!ii<#'Dqh13W,oYWY=Rr!)3?l!#YG1!WWD;roO3Bq#CD?
roO71&+]c'#<\(#qW7q$6N@*mroO3nnc/Z<rT4(dirB(:q;q\1p&OI["9[cJjV@^o!<_$QjoN:%oDel4
r8n!;hZ*c]jlYSAqu?^kr8n%@)Xmb&!!$X0jo?P'!<+)E+tbZ:@&j1?!,D<^!*9'5!i8gRr%84.4%2qQ
J"XLM^B&g?r[n2"rkAGfnfRpVrP&=Zjra^J1j/Q-!F-o1+9Hh^D>YLV5l8:r;=bn1S,C#$C>L'7H(f3S
+97Z(^AsDZ+96$P^Ap1k+T;oU&fr8N:RV0`!*T+=!(Qph!g>qtr#Q(c.Ps@cDNCjnXT<;arZ2&UriH0C
ndke5rN-&8rXe9)!@24MXT;'/it)9)O'MSo!&+5O!($2f!/^WU!*SY"o+1t9O'hbq!/(3O!.a5D!*9'#
!%.[VrW!*(%i$9WQ2R``:\bM$3rQ)\O#IpR%gN[e-o48(MQ$<N!G3)G%fg2?WrR&.!!$='WrNCd!!*g>
pT"<["QKI`?].k\!!"5?WrP$K!!%]OWrf?&:Yl'Q?].t^!!%HFWrRJ/!!#^kWrO"6!!NK?*%kO<rT4)p
q%Ng(rT43t8g"lI'ET'u2$??QMRqgBjoL;YrY,?froO3Fnc/Z<rT4(djT#<%I.ub(<s@Ua!e@n%qu?aM
k5=?A8+Q]\ZM`hbC>JplJ@fn"!!&tqjoD4?!!$X0jo?P'!!?.uZ+ftId_>csnfRpVrP&=Zm2uX5LQ.F\
R\[@`^B_KUU6^n"L1'd!lQ?1@r4`98+nQlX.D>Yo!(,6Z!B%Uh^Aq6s+9<TsrP&=jrZD;06D(@#XT2Mp
&-->@XT0.(&-kUHI"-d*PGA#WqQ1"(S</GRHZ`-D&-,f0XT=q(oFM$@X8K("1=d!;,cppG!CIF^&-,c0
XT0^I&-FgKS>sZ2!)W4d!+#Q(!!i5upAbFXDfp>RK8uVsWs>YmMgotnDFNOb!)<Bl!LNo[!!*G+r2TfD
jT+iO!>_^5WrP-B!!#^kWrO"9!!>eadH/I3!,ME2q#CDCrT4(dm/RAbQ(FbLZ+nr`jp0tm]W7`rP[38K
!,2;m!R1]<!!*Sir8mu7r;bOO!?UA#joA';!!$X0jo?P'!<82$^Aq%"+96Wa^AoVK+9<e%lG*;4!PTo@
+97N$^ArTO+95@<^B(\cefXs5r4`9<,PE8N+96$P^Ap1k+THu3XT1NT&-->@XT0.)&-*FFX6-MbX;9h-
!.OjJ!,;$9!(-Uc!M^:^&H!(>@Jm5.TG-K"!*9'#!%.[Vs*D\c!&=$E!F;c*WrNCm!!*8&k,SN_#NGda
Gl4TB@IjI!2Z0TVTE=]bj8]0^r2Tjh"6TXa9`;!l)#aO8Us.uujo@a=!!%HGjo>_U!!*>bk2l^*$0)!c
U&=$QK(T*F!!#UgjoO'9ec5\nr8n%/"m5jcB)Uil+T;B@N9%b7^B)##nfRpVrP&=ZmN;KdjhCi,+m:'I
+9<Xor4`5,o,n$`r4`5iefXu;Y5H$7GNL"JB)TIE2Z=j!Hi1"iXT>IDndke5rN-&8mLT@DjfJT^&J4%8
!>2.*XT1NU&--YHXT3Xt&-3E6r2fs2mL]1*!*9'#!%.[Vs)c;^!N?V#!!$='WrNCm!!!c1X6ckfV#fWW
!<JnlWrOmG!!$[0WrR4l!!34hX8T(!?02+e9`;!l)#aO8SB'amitV%a!.Fh.!"&W)nGiP0jlQU#!os=^
!ndG5!(-8W!/pd;!1N3Rli7%gc2?](IHCM0B)Uil+T;?D7n9A^^<F=o\>sNjnfRpVrP&=ZmN<MnQ+t&F
\?rH>VP0QJQ'.8nQ^aYDWNNP8]=ktdEoS8B55`.r]I3=o!@"lK^B))UefXrgqnE+kjraY9rP&=jrZD>%
2Nso;i2uCK!iDAlnIP\4rN-&8mLUBNKWV>TVP9ZMP`L`XK7SN(L5M"TQ^j_EWN3.q@H.n#0!28TXT>F<
oFM$9U&;"m:=]sV55VG^.HV0A<rK-#-N4PZ.OpIOWq`XFWrf&^<:Kqg?2^f(#OVR4!Ih)LVkfrRQ&poY
JUMljI"6p-Ng#j$U8FojT3:phli7#.r2Tjs#P7us".oFk!(5<;!&FGP!#t)$!<>glWrO"9!!G8@^XqPj
joX;ZEq',0IJr:.$17d'!NP;CiS<#1aMPQrY,S6-USk3"\\H//e(N[>k14b:!!"PIjoOEJoDempebnP0
>1NZR7/Q*J,QIi.!!$X0jo?P'!43jKGQ#8V-MJXq+95pL^As_o+95.6^B)#!j<4%:!0-ok!1W'm!+u2E
!&jg!]FalM!+u23!#DjO!)i`s!/^:Y!'L1]!NR4<&DI`rI/L)HM<,9K<rK-#-N4R`!!$='WrNCT!8[\U
8GoLgKC]'C0`7sPW"%;X!-S4?!/0tEnc/Y`rMoo8YlFcPrT4(dm/Y-+!+Gff!3u+q!($PF!TFaG!;ult
T)@^NZK2&dB)Uil+T;AJ+9?]$rkAF[Z60.)r4`5Po,n$cr4`5qnK?s:!AD.a^AqR$+96$P^Ap1k+Nb8]
&-->@XT0-B&-."RXT2f%&-3>_r2fsMedqj(X8K("9]Zfc<rK-#-N4S9!7LoJ?2^f(#IXX2!!%';WrQ8n
!!$g4WrRLt!!*Y0r2TfajT#9SrMoo8pAhf*!.Fh.!"$pNjT#:Kr8n!&o)JcOr8n!Vec5^dir%p==R?+a
!!$X0jo?P'!43jKGQ#8V-KZGq+98\E^Apjt+9<dsr4`5:efXs-rkAQM^U>KN+96$P^Ap1k+LD[[B)Sh3
(B+lQ&-/@#XT1BR&-3NAr2frml4E=o!*T6%!MgLm&-,c0XT0^I&AnM=!!$='WrNC1!!&PeWrO^C!!*7s
r2Tf`ec5\Hr2Tjm#NYpc9`;!l(t\iB!!%HGjo>^n!!:U2k5OKC4S/US#MAt:!*@_O!,MMp!SIe@!!$X0
jo?P'!:q>M+96Wa^AoV$+RL9O3rH_n]-d.m!*9$4!P0`X+9F?2=5P,$+fP=R!.F_e!`EbjmN;NQB)TIE
2Z=i+&-->@XT0-o&Ch<l.f?CLW>>+;!(Qmg!N6n6&-=%V7c+aX&XN?s!,VTF":u,1=X<AG!*9'#!%.[V
ZiC)3rMoo'pAhl,!$(p;!N-.o!!#(XWr]()qu?d49KVP?o`,!nP5M?\AGZ?.2GY+U!!#^kWrO!I!;QTp
IJr:.$*sU3-N*!,i<]&U!)EIS!T+Cb!!!r=Al%:a!<L1;joC/5!!5]+*piq-B)Uil+T;AJ+96Wa^AoV2
+Q":A@f3t@Re%X%P5N&pM>JCtR(p?mi#i"iqnE+or#c)1^V>U&+S$WTB)TIE2Z=i+&-->@XT0.(&B>=^
;>dNrM=V8YJc)VMGP_pRLTRX(iXc/&&3'Kg!%n*["#[3_GO5qA<rK-#-N4R`!!-B+ri6#(ZN'tqr2TgM
o)Jc;r2Tg;qZ$_LX/[!4!9X=^.f67H+T)3A.''Cfm/R,[rMoo8`rPE*!.Fh.!"#t3!+>`e!3u+q!2]VU
!1<W`"0UeJ+5d,!3W%q=.f98K2Wj.gm/R,urT4)&rW(q#di\X7rP&=Z[NPPl!/g]h!-IiU!AV=d^Apt*
+94J%^AoqF+97/o^Asi%+9RD6^Okhq!+u2E!&jg!q@L7M!+u23!#Eikjq%N<r2fs/oFM$HXSf1#48]Wi
.fQOM+5d\1Fo8?AMu+%fG-.ldoapp1!*9'#!%.[VZiC)3rMoo'joE[,!-8"<!*]!p!>DL2WrOgN!!"#<
WrN^h!!$p8Wr]8UqZ$_:X/ft%!!#^kWrO!A!!%HGjo>_e!4Dk-RJc1IH1V(;)<C_X!'gA]!%.^-!#G/+
mJm6Or8n!dqZ$_`k2q]k!!$X0jo?P'!5frM+96Wa^AoUe+98\E^Aq"#+969V^B(AYr#c)e^V?H7+9aH/
IrIh#nfRr\\bs2B?2PfJ/%`R2<:(e.B)TIE2Z=iR&D@ZqB)Sh3(:+PPTDkqoXfX_X&-,u5XT=h%r"&sC
Xf[ZW&-X.RDI545ndkg<Vu3Xs9`,G))l]sA7-tNc<rK-#-N4SJ!5\^9?2^f(#KHi3!!&PeWrOjG!!#sq
Wr\Lequ?h+X/h-N!!Ns*AlgA^nc/[qV>R@o6Mpfd%&U)+3:6bI!)3?l!#Vs@!.Fh.!"%N_eGoTtr8muF
oDel1r8n%%!rN$#JEH"*o`,.3@>T(`"7cEm$Jt^C!*K.!";'MRk"P.B!+u2l!$M7@Zlf?mrP&=ZpE70m
!':%m!PKoR+98/6^Ar0L+9Wsr^V=7O+9>-BrP&Ao,Q8hZ+95::^B(kmr#c,R^V?rum2uC@rP&=jrZJib
q%*O<rN-&8Zk*3er2g"#)"\@>Oo2<]?2P68'VVW0X\nd'!BR"SXT<kao+1mer2g!t(]4gI<3<9o($uP4
<rK-#-N4R`!!$='WrNCT!8mhW*;li<W<r1s!0$iV!*&jr"9b<sX%2j`!A:&DWr[DHo)JbIr2Tjo#lFZ*
8uo"]"oJAk!!#^kWrO!A!!%HGjo>_T!6>-?-N*!,isbP[!58<m!-.o:"9m<;k$[l_!C#-6joM.ZoDeml
7f;BLh$a,\"D$ZWcNih;!+u2l!$M7@ZlfBn^](tJ-F=lq@f3t@TCa6,,/!ig!&j`t"CJpYXsEfc"!A^9
Z2;99KC^2cC](pIM#8@u-)eSnAaCN>B)TIE2Z=iA&F0l-B)Sh3(:4VQ;>dNrNV!b_&utl3!%.UT"AZ)$
S.t]/!?.U-XT3A4&-,o3XT3PB&-N`6XfYRh&-,c0XT0^I&E3]=!!$='WrNC5!!3-#8,TCfM"CZJ!iZ$t
!#PP5"@T;kQj!-`!=PFpWrQo+!!#jnWrR)9!!EIgX/ekZ!!#^kWrO"2!4r42IJr:.$-iP6!!$F)joDm_
!!*2\r8mu%qu?k(k2snlpAb4(dJN&+O7N>OD#EDqQM^^c#K>ifAFolt!!$X0jo?P'!43jKGQ#8V-KZGs
+97;s^ArKM+93qi^AtA5+9XL/^V=4N+95@:^B)#%oH4-Yr4`5<r#c,f^V?rullZ:?rP&=jrZJQZ!+u23
!#GPF[h&Obr2fs2oFM!Ar2fsfr"&uTUogarp(.3jrN6($!NR@8&--A@XT2)n&-Q[KXe$9o&-,c0XT0^I
&AnM=!!$='WrNC3!!%';WrQGt!!!H*WreRe!<)s$'V_Y/7eQf^2u9QUW=eb&!+5Z)!(-S`"CS:2RK`$X
!)3?l!#X>gg&M,$rT4(dZiC)orT4.CIImL>&H(Yjb5;5B)qjB9?hOI"9)@ZNitq=f!.Xq/!*T4""G,^t
cNie:!+u2l!$M7@o,tmm!-eCV!%,`/miVWSZi%Q<:@oY0+hR]f!1!L*"X02H^T8^S+966R^Ar'A+95XD
^Apk(+9Y9M^V=:F+9<TsrP&=jrZJQZ!+u23!#FH'f+7rpU&;"m54fBe&ZP`2!/1:^"VHHjXdTst&-,r1
XT2Ps&-,?#XT1?Z&-4em!j/S&lOX%srN-&HrXcF:!+#Q(!!i5u^An98T)>Vh1@tPI!N,gr!.OkH"Ta+R
X-Nn^!!#pmWrc,u!;6Bm5l@Y_/H#PO/?5bO8F$6U9`;!l(qBYB!!%HGjo>^q!!*,Mr8muHoDemmi;Md<
Wr2o#!NYAFaoDV=!!$p4joB8j!!$'tjo@LA!!GFGk2p+<!!$X0jo?P'!43jKGQ#8V-Ij6t+94V'^B)"r
o,n%&rP&?$rZD@lMnd$?7J.c'=8BT2On9ar1]4uf:];I?:UImOPTflGnfRpErP&=jrZJQZ!+u23!#Fr5
aUeG)r2g"#)"S:=MZ'XWM#Iqh(O<-bX#9P]!(Zje!.XYQ!>$IQXT1Qa&-Y7mXf[3flOX%srN-&HrXcF:
!F;c*WrNC4!!"/>Wr].*o)JcErMopNrW!*-F/u@?./*]C!!#.WWrRG;!!!`2WrOpS!!P-NX/gXLlMpoY
rMoo8`rPE*!.Fh.!"$%5!%\!0!TFOZ!!'A(joDXb!!Nb!k2tY]o`+tgq;q[PoDek1r8muIrW!*ifB24o
!p]gdB)Uil+T;B#+O_G5GQ#8V-FP#t+Ck>a!1WO%!*0!4"Lg09:o40+!+kdF!&")^!2B'-!1Nl$#`(#n
FhYW*W\*KY!+u2E!&jg!q@L7M!+u23!#EikkR[_lr2fsUndkdhrN-4!+rNV0riH0"oFM!Dq5jXYo+1nY
rN-?L*%GL#Xf\!3ndtU.!*9'#!%.[VZiC)3rMoo'joEa.!(d$g!/0nC!'1"Y"JQS:1m%^;!(uk`!"\n+
!/pFK!/(6N#]L4n>cOj*Pn*'Z!)3?l!#Vs@!.Fh.!"&W)\,ZM;r8n!bnc/YarT47:)\#6ProO2koDek+
rT=(@!5.n'!3uLb#aZ,NI-'MQa:mh=!+u2l!$M7@_]\Lm!-eCV!%,)r!,2;F!,:sG!,;DH!PZ>J^B)&W
nfRpNqS*$9o,n&bVYIn,U+kgS!+u2E!&jg!gCW'M!+u23!#DsR!*B*#!*Jb&!*K3%!3H.$!N],g&--&5
XT5$c&-3c8poORZ+6a=:<rK-#-N4SJ!5\^9?2^f(#KHi5!!#akWrPob!!#dmWrT0uWr]4inc/YhqPsUe
o)Je#OSGjWN"P=T!<>glWrO!A!!%HGjo>_F!7q2NB`-umC@M9(CAm8pjo+<BjBhBW!-7qu!7UN>!>33D
joE'p([1o"B)Uil+T;AJ+96Wa^AoVT+MT$"4h^j0!M1b0+9?)`qnE0&8+7W-?C8:4Pcqj4+<^;!!Ag#<
^B1rg.HhlSB)TIE2Z=i3&GZk;B)Sh3(:=\S/Z\lQ!K7oc&-5e-qlKmX2uXB[&-ksbVko$;Xf(_$!@!3o
XTGD2)<_V3<rK-#-N4R`!!$='WrNCT!9!nY+K5:?!J_!N!!,`eql9aQ.e!EC6\2).I@@44nc/\)If$/I
V-F?$!:g*i9`;!l(pO&@IJr:.$1.`7!!+S/roO6i%Ia>uA_R%D!OXrW!!c]0hV+pSk2#\1rVus<Wr(o[
hL#dr!!$X0jo?P'!43jLGJF-l!%,&q"@mrt>USq^"t<l(N.l"=nf[]M!gCC%n/qp$CP%Ok>qkC`!+u2E
!&jg!aq3kM!+u23!#DpQ"?(.A9Gd10#S7Ob:2"ur=ZP^X!eIJDn.5dY>&eq&9H`I/!*9'#!%.[ViW.F-
!+#Q(!!fq4"onWQB5g-BmJmFt6XY"Q:bCo3!dgu8n,NY<:hb&Z64r>[!)3?l!#YG1])VhZrT4(dc2d#-
"?;:*<t"Er"q=aeS<@YMkl:d^k0<Aq"u'kRSq'oZmK!%_!+u2l!$M7@Zlf?mrP&=Zjrg$6!i3T(mNCI2
!+u2E!&jg!Zk*4LrN-&8rXaYm":u-.XcC[<!*9'#!%.[V_Z96-!+#Q(!!ehjk5YRDX,5+%!)3?l!#X>g
g&M,$rT4(dY5llK!l*m.c2[iVrT4)&rW)O4_B8i&rP&=Z`uql7""V+#OO#$M+D1Se!&jg!Zk*4LrN-&8
h[lFl!un>DIch:+&-,c0XT0^I&@;E;?2^f(#PS4S!!Ne2X*=UEci=&>rMoo8\H)F*!.Fh.!""_emf3G$
jlW8^!!$X0jo?P'!43jKGQ#8V-Ij6=+9PHT^MDXJnfRpErP&=jrZJQZ!+u23!#Fr5Oq7^[XfYe"&D@Zq
<rK-#-N4R`!!-B+ri6#(L&h#L"#R'Z:sK%@9`;!l(rlXB!!%HGjo>^Z!9!n[7HW`Kc2[iVrT4)&rW(q#
di\X7rP&=Z[NN[7"+J#"6I$\RB)TIE2Z=iq&A&JRB)Sh3(=!Jr&-HaNXYSH=q%*O,rN-&HrXcF:!+#Q(
!!hWdR/d>#X/dQ7!9!nX9`;!l(pO&@IJr:.$2spV!!E:Wk2nGE!!$X0jo?P'!5frM+96Wa^As;iMuZYH
+R(!O0Y5$#,1n"</,5&'U]%q-2Z=iR&D@ZqB)Sh3IJJ3i5I_9P&-O)RXd]sU&-*[EHN93,XT0^I&G#n=
!!$='WrRA>F9",D!4`(4&Z2Uq!n[JQ%/FuGFH-7"!#Vs@!.Fh.!20.X!(H)OT`>33hr`)ak5b&Q!"epq
!58?n!$M7@Zlf?moY1Eg+Gh3CHG@4(rZKo;!&=)[!&jg!]FalM!+tl*!.UCJn.5\9XfYIP&-*mFXT0^I
&@;E;?1b/tH/8P%!!?Z1X%1qFqu?^0o;_j.YlFcPo]?.Jp&L9V",#au@.XH[!!!l-jo?P'!43jLGJEgc
!0E6aq]H"t]"bEof,t&Jo=k8`rZK>plOX&.oW8+CV\%l""<seHSJ9Ze!$Us9!%.[ViW.F-!+#5t!-u<Z
b5_YZVQ6-hf)Pd`o;_j.pAhf*!.FM%!2A'FZN(+Ihr`5hf)Pggk4Id9+T;AJ+96WX^AsAa+IjPW-_S5h
AaCQ*+94.f^Ap1k+LD[[B)/S,XT3j.&-3T.!j/S(edqg)o;r!>rXcsInc/YqoW%t;TE+9X":'gbX%LqC
!#"n(!#X>gg&M,$o]?.J\,atX":Da&k%*$C!#Y=i!$M7@o,tmm!+>H'!/AiC]H@A$Nk`?3-Is:?-Ct";
qlg&WrZJQZ!)N6Y!-IE9U_!\AIBBWA(?H+u&-3Q)oUZ%.rXcF:!(HOL!Gqgq!!NCIX/hWmr;bOO!=+AO
RfF26!;QTp?1cJDPF2FB!!NFsk2sqpec5^W[.M]F*W?%j+KcgiH,%,.8(o*M+IWk-&-Q[KXfOJP&CD&p
!.k4L!!H]1X/[Y-!.k44!!Il8k2\P>!9,,Q+O2)0:B&!.B#,Vd&:tJ%&-+lmXT2DM&F^6p!1j/j1&e3R
9^2V0!/:IR6N6*IB#+Jb+G(a'+9Q;l^2(M,gCSrJeIVgaXfP^A&G#mR!5/@7:91BlaoI"nV#UU3k2gI>
!8ddP+H7KF-=B@>+NGV;&:tJc&-<VC2STfT!3ZA(#=U,o!.k3;!!3I43:?jp!4!`!+LrW;&:tIe&E3\A
!.k3&!.k4?!0\OW+P7g;&:tJ/&AnL"!.k3&!0@22~>

%%EndBinary
grestore
np
gsave
642.931 448.089 mo
576.69 448.089 li
576.69 431.601 li
642.931 431.601 li
642.931 448.089 li
clp
576.69 431.601 mo
642.931 431.601 li
642.931 448.089 li
576.69 448.089 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 106.349 517.078 ]ct
[66.72 0 0 17.04 470.101 68.7247 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 278 
/H 71 
/M[278 0 0 -71 0 71 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 278 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 278 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 278 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 278 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
s's-b!*eq8!-eCV!%.:[!Hl'>^B:ZL+<^"n!Frb1^B2$+,-E'Z+96$P^Ap1k+TG?\XT1u_&-->@XT0..
&-6=ArN5Ih!M*-R&-5\.n#ZYjHP4=0g(46brN-&HrXf*#aK#;+n,NJpX8]."#P.or>c?nf!LcRE!!,Wg
n#HMfFT^J#_>jR0rMoo8rW)t,bi\ld!*8Rh!.Fh.!"&5s!IWkjjoNe:l2UiniU>n1iLL,F!3-#!B)Uil
+T;?H+<W=+8PWNA])BADH20r1A,X.EZtrN.rC7&g>@h`&TY:-8!/gbG!1a&'!*o"9!-eCV!%.4Y"stfQ
4BdQRp:gd@Jl+T[-0HBQ+u*&jr4i0E"hC(J>Wj@'+96$P^Ap1k+9iAg+#Gu@9*'"1rN-'5q)/4NrN-0s
><b(G2?u0*8lT,7O/r&X!."Q%!/piY!))em!+u23!#G)9"r8+!/4k&cp8nLqEBkum(%r40&-EOg6]^uD
"fI/j9.^jS&GZk;<rK-#-N4P^!!!QY/29D(VZ!Oq@/28P8H#RjTMdTD.L%^o8l]M]W;*CnErINgL&S+Q
5k"aR?2^f(#Oqcu#7D(a5&dJ!X88k#UhMY+$jGeo!s9/qMta7UV1W2A+9]@Xi;`jOrMoo8qu?p:2*=3,
NSj]s!.jr*!+Gig"4qEZ3W:uC3CQqYF,IQgpuVREr\snaroO2^n,NH:rT4(drW)Qj"pkbT.9)Ymp>uP6
N^bB-#Nl'h";jeDpZ;Y9Y_-","k<Up!!$X0jo?P'!;R`<0!YDj!.O_d!-%qP!OsuY+9NrZCo@-E"-4rT
OoE)s>Tb0[+96Wa^AoVH+9><PpqHj71#F)S,d[?^!jceqkTI,Q!+u2E!&jg!q%*QJTDkqmD#"VB?iI/.
VBkmIrX]/I1g?:BXTO"k&:a\]!))em!+u23!#Fl3!C*X[XT>%;h[ff&U&(knTjAZLR1K@!rN-&HrXel*
!=t_"WrQ`,!!$(!Wr]"2oDest-rQ6)WrmPS!."RE!'p#R!+#Q(!!hfi!ApbMWr\_'l2^MX!<f"jWrekm
%%.(r!)3?l!#YD0!>Nr\joC24!!%*>joO6XoDet!2/^A/jo_:g!2KPU!*AXi!.Fh.!"%rk!Cc#CjoEg0
(uG;o"kEJ3!nD?'YlNtf!+u2l!$M7@p`KQTrkAH,q&fZtrkAGcmiV[%Kt[E!!i%B1rkAG<n/q^TrP&=Z
pE9)N!/L?a!2SEn!2ob0!kDtl`ur_O!+u2E!&jg!p^dF3riH0]q%*OSriH0?mgoOYFK>>A!g+ORriH/n
p^m64!+u23!#Fi2!-\.>!0c4M!1!Ja!iK*9h[m:/!*9'#!%.[Vp](:ori6$Wq#CD=ri6$6mf3D=D5dB5
!f[_9ri6#an,NGorMoo'l2Ug&po=CTpAj@V!0R2[!i8TrV#^&d!)3?l!#YA/!-A/%!5&%,!20>R!0?RK
!]ZA&r8n'o'VkZi!*AXi!.Fh.!"&#mrVuq`puVRkh#IGmr8n(;BF;EQg&M+brT4)&rW)^9!)!7*!3l8A
!2oh2!*eh5!BchK^B(1)rkAG<n/qaU^](tJ-L)]R7/+Fr5MmR`62\IuV``EN_B8hjrP&=jrZLtI!'1%\
!1rut!1!Pc!(uVi!A'**XT4RcO8c6]9CNJmB)Sh3(?uG22#"*P0Ad<@1&S-SQ7V>5WXo/2rN-&HrXei)
!%n2N!1Wca!0R8]!'gD^nGiS2KD_bNOGj+=!'p#R!+#Q(!!hch!%7NA!$^;#!$qKC!KnLg!!#^kWrO"2
!!3-#4T=ICd.mYA_uAcu<UBbe.C&g5!PuDIjoAKP!!%HGjo>_Q!!"kMjo@"'!:Kmf0`:&6`$q2Vq#CD,
rT4)&rW)^9!(-\"!4M\G!4;a?!(?/r![1p_q7co7n/q^TrP&=Zko^&*^VBW[!.3WH!@"'4^B'9AZQS3L
!+u2E!&jg!p^dE[riH0rq%*P#riH/Vljs41:9"&k!))em!+u23!#GPFljs/^poOO2i",o%MuBaYHPjp;
aUeGQrN-&HrXei)!$qQE!2B8h!2'7k!%.%4!Wb]dq5XQ^!!)Qi!+#Q(!!h`g!0R&W!+Ojd!<RuRWr[>L
irH=a!)3?l!#YA/!&=K8!87/J!7q/3!&O<KpAb6q>N#>>!*AXi!.Fh.!"%li!5nTo!/081!<]\,joM"]
qZ*#a!+u2l!$M7@p`KPtrkAHBq&f[LrkAFnl6$+!\,*i>>jrj9GQ#8V-KuWQC\YXFZQncYpE0HTrP&Ad
,*O,M+D1Se!&jg!p^dESriH0sq%*P*riH/Ll4<tUV>@:o9CNJmB)Sh3(?lA1>553#TbHAr!+5],!HSmS
&EjZ*<rK-#-N4SO!!!u;WrSmi!!&qrWrO+(!!+XFqPsT]n,NGorMoo'pAjdb!)`Nl!M0DP!!$+!WrZu;
_Z8$`!)3?l!#YA/!%%X,!8@5K!9*q>!$ph0!B]$3joAKX!;QTpIJr:.$0_EiD><5oe-4e2!-J2%!K[E<
!4W"/B)Uil+T;B9+94>!^Atb=+99+S^Ap(S+9=a9qnE,9n/q^TrP&=Zko^!]^A,GC;Y_I#+9>BSrkAJ`
+eTtK+96$P^Ap1k+SZKJ-N:+IV>1Z&X8]4$,3]X>0;SKI!))em!+u23!#Fr5r=AuQXSAmt6/iFV6*1'f
!H&LZ&D@Zq<rK-#-N4SO!!!i7WrSmi!!&tsWrNju!!+:;ql9]^n,NJpX8]."#O)3h'<:i.!&ig:!B-tW
WrZi6ciCo_!)3?l!#YA/!$M:'!8@5K!94"?!#t/&""r6gk5FEB=7?1iIJr:.$0_Ej)<CST!(c)L!D)>O
joL>?kQ%U_!+u2l!$M7@p`KPprkAHBq&f[NrkAFer?1GL!*B'4!*o"9!-eCV!%-nP!0m8n!0-"]!C=9q
^B8m-+<Zgi!+u2E!&jg!q@E]>&17CY!2]K&!3?+$!$LJ:!(Zpg!))em!+u23!#Fc0!/('K!.=>KndkgV
VuEe!C_<$Gq%*O,rN-&HrXei)!#PX8!2B8h!3#mt!"nDp!'L.Z!'p#R!+#Q(!!h]f!I_$EWrR;&!!+@@
ri6'1!O)R_!!#^kWrO"0!!"/@joF-2!!)$Xjo?4]!!#jmjoAKP!!%HGjo>_e!:'UbW;,KTT&TeO0\u`j
!JUWr!6G3@B)Uil+T;B9+94>!^Atb=+99+S^AotN+97)m^B.X_+S$WTGQ#8V-KlQP=STW3]I`.e!Aq(\
^B&p0h]T0H!+u2E!&jg!p^dEPriH0sq%*P,riH/Cp(6d+!-A(?!))em!+u23!#Fc0!(Zgd!NI.$&-4&K
riH3@&bcj)&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt&a',oC](455k"aR?2^f(#Nu-f4SYrXW"&(nq>^O2
SGoPiB`X:q!<>glWrO"0!!"/@joF-2!!)$Xjo?4\!!&,YjoAKP!!%HGjo>_O!!#mljoX](&`iun*RXlK
!KI2Z!9aC_B)Uil+T;B9+94>!^Atb=+99+S^AotN+9=+,rP&>;n/q^TrP&=ZpE9#L!@G8M^Aqd++9=!h
rkAJt,/58I+96$P^Ap1k+SZKJ-N:+IV>1Z&X8]4$+Qj::*i]+?!)*(uq%*O<rN-&8kR[b1V"h%l;W\Mk
)O16'!J1s9&@`8O<rK-#-N4SO!!!i7WrSmi!!&tsWrNap!!*V-rMoo`n,NGorMoo'kPtVfUA1bh8GW>R
!!*Ihri6'I".]G_!!#^kWrO"0!!"/@joF-2!!)$Xjo?4\!!*hmrT4)]n,NH:rT4(dm/[%a!=7BRjoAiP
!!*VHroO6Z"LS6`!!$X0jo?P'!;IZ:2ZCGk\+q-H^&GbH0]jJXK`/Xc>jrj:GJF-l!%-kO!.jp[!2&Es
!@4$2^B(&WbTObF!+u2E!&jg!p^dEPriH0sq%*P,riH/Cjq%N6rN-&mn.5S3rN-&8k7@W3poOOUk7@Y.
LAn:UOVm-jWXo/2rN-&HrXei)!#PX8!2B8h!3#mt!"o/0l2Ug"rMoo`n,NGorMoo'k5YKqpo=CNk5YMc
JGuSMN!]C^OoPJUrMoo8pAb6p!$M:'!8@5K!94"?!#Obt!0I0A!*AXi!.Fh.!"%fg!0$^8!4VP"o`,!r
XT%>_]aU/+q#CD,rT4)&rW)^9!&jhk!4VbH!58BH!&3sd!a^=_p`KQ)rP&>;n/q^TrP&=Zk9'anpV-\h
kTBk[rkAK:0ruMV+96$P^Ap1k+SZKJ-N:+IV>1Z&X8]4$+S$'F:2Nc$&-+QcXT2#`&-->@XT0.9&F'f,
2#"*P.d.EDFT/BCS0>f^aUeGQrN-&HrXei)!#PX8!2B8h!3#mt!"nc%!^gNep](:ArMoub!!)Qi!+#Q(
!!hZe!%@TB!$(2&!,__9!LXVV!3lM(9`;!l)"dk/+TCL'gA(^Kir8'?(\Rk-!!6>[>PJ0u2#ZP:=7?1i
IJr:.$0M9g2>?55-KkF0PQ'\Fc5H6SR/d5!rT4)&rW)^9!&jhk!4VbH!58BH!&4!e!)rm3!)<83!@5>W
^AqO.+96Wa^AoVC+98D9^ArED+T3D_ErNfS[loZm!?c"Q^Ap1k+SZKJ-N:+IV>1Z&X8]4$+S--E6N4(e
4S]Nh'WV/7!))em!+u23!#F].!13SbriH02kn!i'riH3t/YisA&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt
&b>u&2ZB`W0_k\L"fVF$!'p#R!+#Q(!!i5un,NHPpo=C"kl:]cri6'o+M7^$!!#^kWrO"0!!"/@joF-2
!!)$Xjo?4h!!#Uijo@^C!!*;_roO2^p]1*i!.Fh.!"%cf!64fr!.=#2!-\A(!ST$Q!4W"/B)Uil+T;B9
+94>!^Atb=+99+S^AotZ+96K^^Aqd=+98)6^Aq7&+96Wa^AoVC+969R^B(M]r#kJO!+#T=!PM0p+S$WT
B)TIE2Z=io&-+'VXT53n&-/d1XT0L8&--2=XT28o&-.djXT1cY&-->@XT0.(&Gcq<>kkE%SIt0!!)3Bo
!NS>f&D@Zq<rK-#-N4SO!!!i7WrSmi!!&tsWrNb'!!$1$WrP]c!!%oUWrP-K!!-B+ri6#(jo>B[po=Fa
!UB^c6N4"dW%c<n_>jR0rMoo8o`+t7roO47q#CESroO1so)Jc8roO2hp](<*roO2Sn,NH:rT4(djo>C#
puVV'!p]gd=T7F`i]uH&WW3$2rT4)&rW)^9!&jhk!4VbH!58BH!&4?opE0HprkAGRp`KQcrkAG&n/q^T
rP&=Zjra[\^A,GC9^El&9>1>>!+,FCOrsa:rP&=jrZM%K!Y>niriH0sq%*P,riH/Co+1nKriH0/p^dFB
riH/Yn.5S3rN-&8jq%P;XSAmt4S99\&-4hmriH/qOV%="!*9'#!%.[Vp](:1ri6$nq#CDnri6#2o)Jc4
ri6$$p](;*ri6#Jn,NGorMoo'jo>DrWq`Up0^Jc?/u\cM!(3^ci;`jOrMoo8o`+t7roO47q#CESroO1s
o)Jc\roO3(p](;MroO2>n,NH:rT4(drW)0_!?:.qjo@[5!!,:CroO2a_#VRW!+u2l!$M7@p`KPprkAHB
q&f[NrkAFeo,n%/rkAGTp`Kc5^;%!)+<^4t!-eCV!%-eM!1!>o!/Kqa!Bdgi^Ar?-+L*$hB)TIE2Z=io
&-+'VXT53n&-/d1XT0L;&H34@PQ%ZaA,$T<3ioHW)Xn:<B)Sh3(?H)-K_VYLG3ohA/>W9I!+PF/R1K@!
rN-&HrXei)!#PX8!2B8h!3#mt!"nf&!07&Z!*f3u">6^TSdY#f!+#Q(!!hTc!.O^D!,q9*!WX:9ri6$%
M#[PV9`;!l)"dk/+TCL'gA(^Kir8'?(\7V,^]*?qHM@IC4lthU&+BQ!IJr:.$0;-eWr2#XjoC\6!!+P%
roO3*T`F9V!+u2l!$M7@p`KPprkAHBq&f[NrkAFeoH4/X]DfPFFS?mZ1eK:e+96Wa^AoVT+R^EQ=no`4
\LHti!ALYT^B'*5\KK6A!+u2E!&jg!p^dEPriH0sq%*P,riH/CoFM$8WW'""A+pN9,WZk<&GZk;B)Sh3
(?H)-8bfCgV]"q7!?dm2XT<SWd1Ef!!*9'#!%.[Vp](:1ri6$nq#CDnri6#2oDemmVZ*Ur>PA+!'eTm_
!!$='WrNCd!!#4XWr]%'r;cEh!>1^uWr[,>QN6RV!)3?l!#YA/!$M:'!8@5K!94"?!#P8-!<V3YjoB`%
!!40(&+9JuIJr:.$1.`g!!#smjoO<Jmf3A)bl6`*Pl\&gg&M+brT4)&rW)^9!&jhk!4VbH!58BH!&4$f
!&a_i!-I3C!I)<X^AoVB+9<gupqHf8n/q`ZT`2\,QmBZo_B8hjrP&=jrZLtI!%.]I!2]K&!3?+$!$LnF
!$qNF!+Yd8lOX&.rN-&8jU_G.V>..m:%/\p(Q\Qt!J_BG&?69A<rK-#-N4SO!!!i7WrSmi!!&tsWrNb1
!;HNo(B(96>N,V_?2^f(#NYpd#GV!o!(-/T!=4S^Wr[bSp&L6U!)3?l!#YG1!WW3CroO47q#CESroO1s
oDek4rT4*+iW&t,rT4(djT#;fgA'e1=nVjm!!*J=roO6a"ciZZ!!$X0jo?P'!;IZ:2ZCGk\+q-H^&GbH
0_?IfAGs7CFQ+DCGQ#8V-KZEP+<Z:2^As\l+9<[KrkAK2/#FHJ+96$P^Ap1k+SZKJ-N:+IV>1Z&X8]4$
+S63F;uNfuA)\%"B)Sh3(B+m.&--_FXT4.H&-3DoriH3c)SQd)&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt
&bH&'8c>[i>O_^a!!$='WrNCc!!$a.WrRbA!!*.Iri6']$e><_!!#^kWrO"0!!"/@joF-2!!)$Xjo?4k
!!3-#@f>EhHK"o)IJr:.$02'dNqh`:YOMSn"/PqY!Q#B8!1<feB)Uil+T;B9+94>!^Atb=+99+S^Aot[
+98;;^ArB8+96Wa^AoVA+94n+^B)&+nfRs_^B;6cYr.7Y!?c"Q^Ap1k+SZKJ-N:+IV>1Z&X8]4$+S63F
Pl7]aA)\%"B)Sh3(??#,2Z9cUXT>LLndke=riH3n,b>S2&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt&bH&'
OSu3[>N,V_?2^f(#PS5d!!"JCWr]4:nc/Z%ri6'i(:F4i!!#^kWrO"0!!"/@joF-2!!)$Xjo?4i!!'n7
joB_m!;QTpIJr:.$02'd2u)M9jWF$n!/^^;!R`%7!4W"/B)Uil+T;B9+94>!^Atb=+99+S^Aot\+95%3
^ArB8+96Wa^AoVA+9<XcpqHfIrZLnW!,DMJ!P(O\+S$WTB)TIE2Z=io&-+'VXT53n&-/d1XT0L:&-+`g
XT2kj&-->@XT0.(&GQe;&X`?q!+,7.!*T<'!N.ZQ&D@Zq<rK-#-N4SO!!!i7WrSmi!!&tsWrNb)!!"VK
WrQA`!!-B+ri6#(j8]2]Pk_9Z<V$1j:]@BqUa3hX_>jR0rMoo8o`+t7roO47q#CESroO1so`+tSr8n!*
p]0U[!.Fh.!"%]d!<L79joBJo!!$d5joO9mgAn5R!+u2l!$M7@p`KPprkAHBq&f[NrkAFer?1qZ!@+*3
^ArB8+96Wa^AoV@+96?T^B(>XocOE=^;%Fs;=Yim+96$P^Ap1k+SlWN&.g2fXT53n&-/d1XT0L;&-3H%
r2fs/iXc*%rN-&8it)2spoORa&blq:&-YM(Xf\ZjM\,[q!*9'#!%.[Vp](:1ri6$nq#CDnri6#2p&G*q
L&@tO>N,V_?2^f(#Nc$c!!$!nWr\Fco`,.VWiN2#25:01!!#^kWrO"0!!"/@joF-2!!)$Xjo?4k!!*80
r8n!*iW&t,rT4(drW)'\!-7ks!QP66!!Q-Zk2t_p])]qQ!+u2l!$M7@p`KPprkAHBq&f[NrkAFep)j?a
qnE,QnK@BF!-eCV!%-_K!AqOc^Apas+9=pCrkAGEdNGe;!+u2E!&jg!p^dEPriH0sq%*P,riH/Cp(.4@
qlKj.iXc*%rN-&8it)5:XSAmt2YI[_1o^JV!*&4pR1K@!rN-&HrXei)!#PX8!2B8h!3#mt!"no)!+l&.
!*eF_!+#Q(!!hNa!>VX0WrOUB!!+LFri6#kK)boP9`;!l)"dk/+TCL'gA(^Kir8'?(\Rh/M#6<7HK"o)
IJr:.$0)!f*TcGGqW7c:p&G+Ni;Vj=A"*J^!!$X0jo?P'!;IZ:2ZCGk\+q-H^&GbH0_Z[iAbs.AFQ+DC
GQ#8V-MJYL+97c'^AriZ+9=F-rkAGYZ67L:!+u2E!&jg!p^dEPriH0sq%*P,riH/CpCI=(qQ0a-l4Eb&
!+u23!#FQ*!/C9N!-%ZD!@OT?XT3%W&@`8O<rK-#-N4SO!!!i7WrSmi!!&tsWrNb+!!#XfWrQA`!!$='
WrNCa!!%QEWrcu8!;QTq)4pi.!+:lgnc/Y`rMoo8o`+t7roO47q#CESroO1spAb2'qW7d(iW&t,rT4(d
m/Zh[!3GtX!0-^Q!?p"mjoBt2!87DQB)Uil+T;B9+94>!^Atb=+99+S^Aot`+9<pHq7coOiZJ8G^](tJ
-K6-J>PPr6[O1em!A(5L^B'9:^`^K:!+u2E!&jg!p^dEPriH0sq%*P,riH/Cq%*QEG586?A,$W$&-->@
XT0-r&-,>tXT>45q%*QHQi=)fHP+mAWXo/2rN-&HrXei)!#PX8!2B8h!3#mt!"o/0r;Zj)Du$F6>N,V_
?2^f(#N>^`5kqA\U'CDn!=b7lWr[>Dn,SUO!)3?l!#YG1!WW3CroO47q#CESroO1sq#CF)Q20PBHK"o)
IJr:.$/tpb<qteXfa.BR!><EOjoM"SM#d>O!+u2l!$M7@p`KPprkAHBq&f[NrkAFeq]Gqf@B91<!-I3C
!-eCV!%-hNr?)+g\G3f==8F$?-(FnK!M(R1+Q4FCB)TIE2Z=io&-+'VXT53n&-/d1XT0L@&-<YFRJ<la
A)\%"B)Sh3(B+m,&-3TEpoONdq@EZBMZ0^YM\`f6aUeGQrN-&HrXei)!#PX8!2B8h!3#mt!"o).!XM8]
po=C!nGr+[!+#Q(!!hK`!=5IqWrP9Y!!*7Wri6'S#1*@T!!#^kWrO"0!!"/@joF-2!!)$Xjo?4p!!E[:
al_a^joB_e!!%HGjo>_I!!*J^puVQQq>^O$Zi9(fZj>jqR/d5!rT4)&rW)^9!&jhk!4VbH!58BH!&4Bp
"#F)2[emf?I<tn-!-I3C!-eCV!%-YI!/1-^!0d:&!?mC#^B:Jf+<Z7Y!?c"Q^Ap1k+SZKJ-N:+IV>1Z&
X8]4$+T;oS,=ugLqlKm8C&Y47A)\%"B)Sh3(?#f*F058?!.k"Y!>0VVXT=e0Qk8Hm!*9'#!%.[Vp](:1
ri6$nq#CDnri6#2rW!$85%pYeWrZa>ri6$'iW&sarMoo'pAjLZ!,MA1!.4SC!<I9@Wr\FpYQ3#M!)3?l
!#YA/!$M:'!8@5K!94"?!#PV7!ut6uf_ae3L4]Ee!.*o1q#CDCrT4(di;`k>puVRRqZ$WtRf;FM`tQMo
\,ZM@rT4)&rW)^9!&jhk!4VbH!58BH".tpX\bWuB^2Y9@rkAGTiZJ5FrP&=Zi?/+kpqHjD0`3$nGQ,>X
ZoF$fnfRpErP&=jrZLtI!%.]I!2]K&!3?+$"-&&#VtmFsXC)TPriH01iXc*%rN-&8m1Aq%!&s\T!N[FA
&-->AXT>.EV%D>l!*9'#!%.[Vp](:1ri6$nq#CDnri6-WJ<?Z'WroA'!+5`+!*eF_!F;c*WrNC`!!"PE
Wr]44qu?_&ri6'l)SH-f!!#^kWrO"0!!"/@joF-2!!)$Xjo`)o_qk.N"6FY*JH"[2HM@L+!!%HGjo>_H
!!#(TjoONZqu?_FroO74,Lldo!!$X0jo?P'!;IZ:2ZCGk\+q-H^%oG?^BC2t+<Yt/^ArB8+96Wa^AoV>
+9<XdpqHfDr?))LrkAKG7dM7\+96$P^Ap1k+SlWN&.g2fXT53n&-/d&XTX\@&.iLRXT2kj&-->@XT0-q
&-3B2poOO!r=B$-XfVZ,WA]GAq%*O,rN-&HrXei)!#PX8!2B8h!3#Li"H"N+!+5`+!*eF_!+#Q(!!hWd
qu?`uQM@K\:]17n8,fOiVCA&9i;`jOrMoo8o`+t7roO47q#CESoB$1e1B7E*roO3,iW&t,rT4(drW)!Z
!<L=;joB/p!!$F+joOC![/e;K!+u2l!$M7@p`KPprkAHBq&f[No=kET.3KaYrkAGTnK@BF!-eCV!%-VH
!-%_J!2]Z;"])hH^V3dn+L*$hB)TIE2Z=io&-+'VXT53n&-/d&XT3)<)%[?lriH01iXc*%rN-&8i",lq
poOO[rX]5tX0&M*7cY,K&-,c0XT0^I&GQ5*(]LH8UA4chW:R%m@L3#7?iI)+>N,V_?2^f(#N,R^=88fr
O8]+_1T@FUW]U+YJcGfO9`;!l)"dk/+TCL'gA(^Kiq):8KFIn]JH"[2HK"o)IJr:.$/bd`FSOtu_#=<;
7H<Omj\M-AkPtTprT4)&rW)^9!&jhk!4VbH!57s<"0k`HH2bPYFQ+DCGQ#8V-MJYJ+9=@6pqHnr+@!C8
^Ar&N+OD52B)TIE2Z=io&-+'VXT53n&-/d%XTP1]&82!E!+Y:*q%*O<rN-&8i",o8XSAn"0G#n7riH0(
`"9Ei!*9'#!%.[Vp](:1ri6$nq#CDnnuDk_2?7+`WrQA`!!$='WrNC_!!*n9po=KA!$\6<WrPtR!:g*i
9`;!l)"dk/+TCL'gA(^Kipu46d7=7froO3,iW&t,rT4(dm/ZbY!?^Fujo[7:/_p?f!,SA0g&M+brT4)&
rW)^9!&jhk!4VbH!58BH"b(`LOJ'5^^B2,]H2bPYFQ+DDGJF-l!%-SG!1<Pr!dc`,rkAG_\KJa3!+u2E
!&jg!p^dEPriH0sq%*P,riH??B5rE]WVW^uXB'!5XT2l+&F0l-B)Sh3(>fZ'L\RtQC*K8KXT37d&?69A
<rK-#-N4SO!!!i7WrSmi!!&tsWs!!@C3bX9VY[=pW_?e!WrQA`!!$='WrNC^!!%TFWrc`ERf9>fBB]DZ
!!#^kWrO"2!!3-#+TCL'gA(^Kir8'DLObG[\`!>H!p+$EroO3,iW&t,rT4(dhZ*YZpuVX2)peNG!/c@.
q#CD,rT4)&rW)^9!&jhk!4VbH!58BH!&4?o"!g-EVt[q+FQ+DCGQ#8V-KZHI+95[A^B)$HrkAJr,+9Y5
+96$P^Ap1k+SZKJ-N:+IV>1Z&X8]4$+T2iR'JNRRpT4F*iXc*%rN-&8rXe'#!)30i!NVOcXT<qbZ4P+h
!*9'#!%.[Vp](:1ri6$nq#CDnri6#2r;Zp&,>=9pWrQAo!:g*i?2^f(#N#L]627J]W07.\!I=jj!3lM(
9`;!l)"dk/+TCL'gA(^Kir8'?(]==9"YXN,roX(>!.*W)!.Fh.!"%N_!*AsX!TM)tjoM7\iW,AH!+u2l
!$M7@p`KPprkAHBq&f[NrkAFeqB,h_:7h9r!-I3C!-eCV!%-SG!@YMO^B(#Uq&l4N"?:t*P@<c"!?c"Q
^Ap1k+SZKJ-N:+IV>1Z&X8]4$+SlWN&Nu*KXT2kj&-->@XT0-o&-3WGorS7U(R5O5-uY.IJl1eE!*9'#
!%.[Vp](:1ri6$nq#CDnri6#2q>^Qt0o,S*!*eF_!+#Q(!!i5ukl:_jV"LbhM[6<_li7/,BSq1,l2UfX
rMoo8o`+t7roO47q#CESroO1sq>^Qt6FQ^P!.*o1q#CDCrT4(dhZ*Zch=]n2]*lIUe,TUrN4Pool2Ufr
rT4)&rW)^9!&jhk!4VbH!58BH!&40j!@3-j^ArB8+96Wa^AoV;+97,k^](tKXY?"_!DL'&^AqpC+S$WT
B)TIE2Z=io&-+'VXT53n&-/d1XT0L=&-3J^qQ0a-iXc*%rN-&8m1Ah"!-Iq:!Lk4(&GH_:4K&.[!*8Cs
!*9'#!%.[Vp](:1ri6$nq#CDnri6#2p](<tAbrG->N,V`?*!t*!!h?\!,_G1!LOJ.!8dbW0W"`K!)2\Y
!)3?l!#YA/!$M:'!8@5K!94"?!#PD1!<n;UjoB`&!:'UbIJr:.$/PX^P4n#=bSSS*`rH-*hYlR:BBoNt
B)Uil+T;B9+94>!^Atb=+99+S^Aotd+Sm2\I/CYYFQ+DCGQ#8V-JfjF8b]t#[QN[pYTNrpZM_H;TBdU"
B)TIE2Z=iq&-<CS-N:+IV>1Z&X8]4$+SH?HC\t46A)\%"B)Sh3(>]T&3VTWVUb)KVQk098T_tnlNq3hX
&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt&bZ2)A,E;,>N,V_?2^f(#Nc$^!!"SEWr\q9QN.*f!"#4oWrS"B
!!#^kWrO"0!!"/@joF-2!!)$Xjo?4k!!%`MjoB_e!!%HGjo>_e!9!nX4SRt=fdX*)k5YMke,8>.\Ea+p
B)Uil+T;B9+94>!^Atb=+99+S^Aot]+9<XTr4`5RnK@BF!-eCV!%-PF!?n]C^B)#@`ZWSM!)<@*!1iEu
!+u2E!&jg!p^dEPriH0sq%*P,riH/Cp(.6:MYsRVA)\%"B)Sh3(>]T'&YAg#!NS9<&@W2N4Su5\MsCoS
<rK-#-N4SO!!!i7WrSmi!!&tsWrNb*!!*+Sr2Tg%iW&sarMoo'h>dQWS,')cW@mlET)\jFql9^Oli7%d
9`;!l)"dk/+TCL'gA(^Kir8'?(\Rh0!jhge!.*W)!.Fh.!"%N_!WW;Kq;q_<5*Q$I62fpIk2s&:!!$X0
jo?P'!;IZ:2ZCGk\+q-H^&GbH0_HOg7/Xe"FQ+DCGQ#8V-MJYG+97W$^ArAQ+RU?P>l289K^0`\B)TIE
2Z=io&-+'VXT53n&-/d1XT0L:&-+QbXT2kr&GZk;B)Sh3(>TN%K))MKA%iN*&-,E$XT3G.&-,c0XT0^I
&GQ5*(]LH8UA4chW;`gt&bQ,(-iC"F>N,V_?2^f(#Mf@[I/9lEX'1\e!($L_!,VK3nc/Y`rMoo8o`+t7
roO47q#CESroO1so`+tKr8n!*iW&t,rT4(dm/ZYV!2oYT!-t(7p](:qqrRm@lMposrT4)&rW)^9!&jhk
!4VbH!58BH!&4$f!/pfj!-I3C!I)<X^AoV:+98G<^B(tsZln9L!'C+n!OjrP+96$P^Ap1k+SZKJ-N:+I
V>1Z&X8]4$+S63FHMsrGA,$W$&-->@XT0-m&-/*oXT>F?bRhi,!%RoK!Mq+.&-,c0XT0^I&GQ5*(]LH8
UA4chW;`gt&cD_)!!%*=WrQA`!!$='WrNC\!!&8[Wr].,j8cCa!$2!<!MUCr!!#^kWrO"2!!3-#+TCL'
gA(^Kir8'?(\@\-S,MILHK"o)IJr:.$/GR]a84p!i=>bcQiI+6r8n%6+7fL.!!$X0jo?P'!;IZ:2ZCGk
\+q-H^&GbH0_?If7fC(%FQ+DCGQ#8V-KZHH+94.l^AsXc+T<JeBt;!nV*O;g!+u2E!&jg!p^dEPriH0s
q%*P,riH/CoFM!\rN-'0iXc*%rN-&8rXe$"!$V0?!/IWejq%\uVld(b0Bs)K<rK-#-N4SO!!!i7WrSmi
!!&tsWrNb(!!"JHWrQAo!:g*i?2^f(#MoF\')AR.J]%Q6!!Q,oX/h:*l2UfXrMoo8o`+t7roO47q#CES
roO1sp&G-o!&sl=!.*W)!.Fh.!"%K^!#YOo!3Y)W[K$JGhWEt90'WE:B)Uil+T;B9+94>!^Atb=+99+S
^Aot[+9<[prkAGTiZJ5FrP&=ZhB2f"q7coJoH9\I![U5lko^!LB)TIE2Z=io&-+'VXT53n&-/d1XT0L9
&-3E>riH01iXc*%rN-&8h[ff"7es.d?B>^"'f76#&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt&bH&("/>dq
!*eF_!+#Q(!!i5ukPtTEq5XKqV#]i^!X0qfkPtTVrMoo8o`+t7roO47q#CESroO1soDempg&C+6HKkM+
!!%HGjo>_E!!#gjjoBJ9!7UuM#;dOd!!$X0jo?P'!;IZ:2ZCGk\+q-H^&GbH0_6CeOT)upFQ+DCGQ#8V
-JfjFIeg_Y8:r&U+96$P^Ap1k+SZKJ-N:+IV>1Z&X8]4$+S--EIf?GLA)\%"B)Sh3(@;\(&--SCXT1;L
&D@Zq<rK-#-N4SO!!!i7WrSmi!!&tsWrNb'!!%9CWrQA`!!-B+ri6#(h>dOeq5XKGZN.iB!)3?l!#YA/
!$M:'!8@5K!94"?!#P5,!29DS!.+D?lMpp5rT4(dh>dP3q;qZ<b5eOB!+u2l!$M7@p`KPprkAHBq&f[N
rkAFer?1hW!.+XZ!,pj>!-eCV!%-PF!2]P,!P9Z<+HdiIB)TIE2Z=iq&-<CS-N:+IV>1Z&X8]4$+S--E
C&Y47?K)LrB)Sh3(>]T&PkqK_W>5:AJe7_h!*9'#!%.[Vp](:1ri6$nq#CDnri6#2o)Jc!ri6$!iW&sa
rMoo'joG2W!0I&X!N$$b!9!nX9`;!l)"dk/+TCL'gA(^Kir8'?(\7V,K)Xm4F5d0"IJr:.$2sq`!!'k3
joOBFX8p?B!+u2l!$M7@p`KPprkAHBq&f[NrkAFeo,n$DrkAGAnfRoU!$UqV!-eCV!%-SG!%n#]!1:YH
Yoj$YrP&=jrZLtI!%.]I!2]K&!3?+$!$LtHrX]'.riH/sndtg5o+1n6rN-&8h[fc.q5jXPgCTba!*9'#
!%.[Vp](:1ri6$nq#CDnri6#2o)Jb^ri6#gnc8[jo)JbrrMoo'hZ*Wdq5XLHo)O@B!<>glWrO"0!!"/@
joF-2!!)$Xjo?4h!!$L-joA`Y!!*-%o)Jc=rT4(dhZ*Wiq;q[[Mu`&A!+u2l!$M7@p`KPprkAHBq&f[N
rkAFeo,n0$^;%BLo,n-X\[5T5+96Wa^AoVT+R(!K<;F9/E24W'+96$P^Ap1k+SZKJ-N:+IV>1Z&X8]4$
+S--I0W_CX1@l%ZA>c.or"/Z8!+u23!#FH'!(?Xb!+3AM\.AX@rN-&HrXei)!#PX8!2B8h!3#mt!"nf&
"='qIW[@<;"'h[p5kG$V?2^f(#N#L]3;KTT=+UGC!!#^kWrO"0!!"/@joF-2!!)$Xjo?4h!!Ft9k2eDj
!!@W*elMDC!.Fh.!"&#mo)Jbaq;q[!RK2%A!+u2l!$M7@p`KPprkAHBq&f[NrkAFenfRus>!MU$!'1%n
!3Yr:!I)<X^AoV<+96fb^Apj2+Mo6$B)TIE2Z=io&-+'VXT53n&-/d1XT0L7&-=FT0)#qU&-+0YXT4m`
&-->@XT0-o&--MAXT1B(&?69A<rK-#-N4SO!!!i7WrSmi!!&tsWrNb1!;6Bo+?gt?!!!u;WrSOZ!!$='
WrNC^!!$O)WrO^1!0R<^9`;!l)#""3!!"/@joF-2!!)$Xjo?4g!!4WL/FriA,lZp+c1Cu9IJr:.$/Y^_
L&'j24Sf&0!;QTpB)Uil+T;B9+94>!^Atb=+99+S^AotH+96$Q^At\6+96Wa^AoVC+Sm2\U\__+]-`^a
i?/,4rP&=jrZLtI!%.]I!2]K&!3?+$!$L53!*0$#!2K/t!+u23!#GPFiXc*PqQ0dt(98"g&-,c0XT0^I
&GQ5*(]LH8UA4chW;`gt&`E]k9<5)oX.](b!+#Q(!!hB]!0-iU!N-.>!3lM(9`;!l)"dk/+TCL'gA(^K
ir8'?(\Rjq!!$U0joF'+!!%HGjo>_F!!'_/joOEHgAmWA!+u2l!$M7@p`KPprkAHBq&f[NrkAFei?/,c
rkAH+oH4-XrP&=Zi#i%O^A>SERdqSQ+9<TsrP&=jrZLtI!%.]I!2]K&!3?+$!$L53!/1?R!06[_!+u23
!#FK(!#u!?qQ0aRM\,(`!*9'#!%.[Vp](:1ri6$nq#CDnri6#2i;`k,ri6$UoDeksrMoo'pAjIY!=c(*
WrRdI!71]G9`;!l)"dk/+TCL'gA(^Kir8'?(Z>>oWrD,\\blI'!!%HGjo>_G!!*\nqW7d^])]>@!+u2l
!$M7@p`KPprkAHBq&f[NrkAFeiZJ4crP&>eoH4-XrP&=Zi#i"uq7crN+Q":E/P9):1%QLk/k8u?7P<%1
">*2H75"0SnfRpErP&=jrZLtI!%.]I!2]K&!3?+$!$L84!&"5P!-RoF!+u23!#Fr5oFM!hq5jX*h@Kf1
3CZ%Qo+2'H2Fg%k*n:i"&-O"57Pu7J&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt&`Ncj+oSGADY*o0?*!t*
!!hE^!&s_S!*J(X":d"F/edgV"V3(F2(9('!9=+_%P0[i&**]j9`;!l)"dk/+TCL'gA(^Kir8'?(ZbYr
!!"SKjoCY<!!%HGjo>_G!!#XejoBS]!!Ert:H]Te!!*fo"&MKH(!lp`'0AuJ($#>pB)Uil+T;B9+94>!
^Atb=+99+S^Aotd+QadHN;^KkD=eqNGQ#8V-K$!HHhkDV9&Ulo+>o2W^B1*4+o3;`-"*:PqnE3/F">fa
![1O>r4`9"9'.5rB)TIE2Z=iq&-<CS-N:+IV>1Z&X8]4$+Q<q4Hi:&H>kAR-B)Sh3(>o`(CAFt33r'?N
&-4&)r2g$]8J1e1!u4UiV#.7qP[YQ^&-<G3PPhN`LH=i7q%*O,rN-&HrXei)!#PX8!2B8h!3#mt!"n2j
!-S7@!)rLi!+#Q(!!hWdqZ$V*q5XKJhuEcnGPnKCM`q1<!!<BnL8"LF!g$Omec5gR301,@ri6'N0'3-6
9`;!l)"dk/+TCL'gA(^Kir8'?(ZGDpSc.[NE:a,1IJr:.$2sqb!!%]Jjo@R&!!+.6r8n'm;uugq!s`,=
f_ae4_0?LT!:Bgg!DL<,joMVJjo>BnrT4)&rW)^9!&jhk!4VbH!58BH!&3FU!Csm'^B))JoH4-XrP&=Z
i#i#pqS*'D-K-'J0X(;e!L"l/+9Em*Z1bp4[K'1W+9<pVq7csE>N[+/B)TIE2Z=io&-+'VXT53n&-/d1
XT0L;&FL)12QZkZ!(-;h!+u23!#FK(!0R,[!NHpo&-3lEr2ot#!J2*c&-<VNTD#AfUd3QD!?$OcXT>Lq
k7@VorN-&HrXei)!#PX8!2B8h!3#mt!"n5k!@k,JWrP*N!!$='WrNC_!!&#TWr].(nc8.Z!>1drWr[SQ
r;Zm(;4R?\!MM@&!!*CSq5XOr5Ni(J!)3?l!#YA/!$M:'!8@5K!94"?!#OYq!BB3>joA$G!!%HGjo>_G
!!'_/joOEIi;`lpchZ](V[<;%!XW_kp>uD.7b@\A%B90c!p*D^kPtTprT4)&rW)^9!&jhk!4VbH!58BH
!&3IV!A:SR^Ap:d+96Wa^AoVT+R:-N/ACtq!1Vpi#:#\P^T2<\Yl2<:P5ZR)2PU2c#.g"C>ZlHWrP&BG
:uibn+9='grkAQ#Ao"dQ^B)#CkTBk;rP&=jrZLtI!%.]I!2]K&!3?+$!$L>6!?Rg0XT0gJ&GZk;B)Sh3
(?#f**3B"=!/]YG#8;rrXdNNkT)GbkJc62]-B\;0#,m,d9LrrhrN-+#5Pu)M&-3f5riH9U<Ec-rXT>Id
kR[_prN-&HrXei)!#PX8!2B8h!3#mt!"n8l!=tXsWrO+2!!$='WrNC`!!*P/qPs[N!!)$Z#6TUZX-QdS
S,KAfHi=!G(QA?o#,ZcT5s8_GrMost1thp1%ZC=e"+Em?TDkklW&")Inc/Y`rMoo8o`+t7roO47q#CES
roO1sj8]2qchuo*,kM':IJr:.$1.`c!!*_oqW7d`i;a)dZ0(2jF'I#ijoD7W!!+4UroOFBVghcGL!KYZ
!T?K$!!*bGroO<_ASp#tjoOI/kPtTprT4)&rW)^9!&jhk!4VbH!58BH!&3LW!@soB^B(qjoH40Y^](tJ
-K-'I<;F9/F5\5HFMGSn0H_K=r4`M9+AK5X^V,1Qr#c"tYl2<;XX*K\l6$6SQG:2HA,[SNFT&rST'.9s
B)TIE2Z=io&-+'VXT53n&-/d1XT0L*&-3`4r2g"!'(c_8B)Sh3(?#f)6i!ha@c7k'A$)l'+:o)Qr2g5k
&3Q_iXfHCarX]/C&1!kGXT=n*g^jW%KrqJV;Z74-A,WM0N9CfQ<rK-#-N4SO!!!i7WrSmi!!&tsWrNb1
!9jIa%#k+b!N-%l!!$='WrNC`!!#"SWrQ;]!!$4-X/hX#!!#(XWsCT`0VGJIWG*%D!!*k)rMosd"P`t\
!e78OVb$de!*]?%!/Kb<!)3?l!#YG1!WW3CroO47q#CESroO1sjT#;m^&7!ni<8cQ!.Fh.!"%Ta!)*.M
!-n8=l2V'8k2sr*!!#dljp4NY6.b8]j,FrS!!+.frT4.)"l'(]"0:SHiF2]c!."P*!4M@sq#CD,rT4)&
rW)^9!&jhk!4VbH!58BH!&3OX!A^AG^At)$+96Wa^AoVC+T*>^I/1MW9]@/t0"Ja36N/)-2#P)mO@[!u
^SO!e+95RB^AqTq+9ZYu^V3A?+9<TrrP&BH.HqrTB)TIE2Z=io&-+'VXT53n&-/d1XT0L+&-3u9qlKj]
o+1n6rN-&8rXe-%!,MD4!'B0O"<OJCXYTke!$qKE#(JS2Xf[g;q%*Ntr2frnlk&[u"CJ:5X?-:k!*&p!
!NR+&&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt&`s&o'8uag!0-RM!+#Q(!!hH_!+Yi*!&*=3":q</X!R`F
!#>F4#'h_sX/h=%q#CCYri6+$X$YSA"BMS(W\45M!)!3j!N?Ci!!#^kWrO"0!!"/@joF-2!!)$Xjo?4k
!:^$i)S>n/!5A%)!.Fh.!"%Ta!/:72!'fHC";K\Sjtco9!$2""#,40;k2sK,q#CCnr8mu^g].Iuk2tbh
r;Zh.rT4.@%I!imB)Uil+T;B9+94>!^Atb=+99+S^Ap%P+9=p9qS*#eo,n$WrP&=Zi?/,sqS*'E-h/>M
+9Q]"^Qn^>!58<F"Lc([S1OFX!%e&_!/0/N">77"^NTMt!-e@U!))T"!?c"Q^Ap1k+SZKJ-N:+IV>1Z&
X8]4$,3KL<24s`I!-e#G!+u23!#FN)!L'Y_XT>I=iXc3$Xf[9S&-/d/XTYH%Xc"1o&-*^JXT3Fu&-O&P
XfZ14&-->?XT1EH&-,c0XT0^I&GQ5*(]LH8UA4chW;`gt'B]>r.%L.7!-.T1!+#Q(!!i5ulMppGqPsXq
#N>^c=f\TPqu?_rr2TspX/gp`p](:'r2Tg6jT,)V":q</X'PW'!+,T(!&!L9!)3?l!#YA/!$M:'!8@5K
!94"?!#k##!B/@%joCeG!;QTpIJr:.$/kja_#!0oiX4ZF"*itjWr)hsj8A$Bg#hG'&bl>+')^klOo5:=
!!F%mk2q'h!!%KGjo@U0!!$X0jo?P'!;IZ:3<$Ym\+q-H\c0>D39_Oe-?m0!^Ar3D+96Wa^AoV?+94(j
^Asi(+QX^K+g8Yq:]2C9/,?p\RO7_N!5&3E!1M^d"F@htTd9OY!2BD+!(cl-nfRpErP&=jrZLtI!%7cJ
!2]K&!2ogu!%7"B!Z#CKq5jX'o+1n6rN-&8m1At&!$D$=!0#nK";.3,XZl[p!#ta9!JhNb&-/^.XT415
&-6LI!j.Ltr"&jir2frXkn!hqrN-&HrXei)!#bd:!2B8h!2][q!#b#$!X;r0q5XKpo)JesX8]."#N>^`
&G`@,LZ/::!Lg'i1Aq1Q%/Hq)K*V)M!2f^q!/'kClMq&rX/h-]qu?_Tr2TfJkl:]WrMoo8o`+t9roO47
q#CEOroO2)kl:ekIH0JdjoBGn!!%HGjo>_I!!!f1joDgK!!EALk2o)1!!!T+joM[mq>gHo!9!h<!3k8Z
"G5du]*8*4!5/6l!'9?E!+u2l!$M7@p`KQ$rkAHAq&f[CrkAG!r?1MN!E#io^AtV=^Aq4(+96Wa^AoV?
+95I<^ArK;+9G0M^B(_dr?))2qS*'60(pCf.K$p\Y219(0tY38;u@a<3r?Yl/*S/VB)TIE2Z=iq&-<CS
0E/'RV"kQ%T`2%n1$T;N5aVDN!29@n!(-8g!+u23!#FQ*!(Qdd!+ts:ljs:\Xf\?2r=ArfqQ0dg*qg-F
)>pT:SDFe[+fVTG6MqAp.f6=J)Y"C7&-,c0XT0^I&GQ5*,6"VCUA4chSc5Yi,jG@11m@j<!1s.i!&sKL
!+#Q(!!hWdr;ZgYq5XL$iW'*6X/hlqr;ZgJqPsXb&,#u'$2gh(R,.fG';hh22uEXU*;cc:$g@Wk9`;!l
)"dk//cOl4g%bUJe,JJ00^8W=7`PAg!7h&1!(uh_!.Fh.!"&W)jT#9Uq;q[*iW'*Ek2t;!r;ZgYqW7h(
(%qV-%K,>gc0PH%!!F1tk2o;6!!"ACjo>qV!!$X0jo?P'!;IZ:7fL.&Z2#LBVuFF2=6q%19V)'q!MVpZ
^Ap7b+96Wa^AoV?+96ug^Aq-j+9Qu*^PVk2!,MJH!PLkn+94S(^B20bWnnj$FMGSo,5`P`Fo8uSVs#6'
B)TIE2Z=io&-+WfXT5!h&-/$qXT1ia&GH_:4,j'=!K])8XT0d@&-->@XT0-r&--YEXT1WG&-H[LX`s[S
!*]9%!NS!K&-+<[XT4dG&-QLFXdp+&&--8=XT4[N&-,c0XT0^I&GQ5*.K6@JSG<-bP5_K^46uqJ08KG*
!K/9&WrO(0!!$='WrNCa!!$^.WrP!G!:p0m@]QPLqu?^oql9ar-M7?=+T/8?Q/2KD>H=fn"8i-!>l:W&
P3DrI!)3?l!#YA/!&so>!7LZC!6"m!!)Mq]!C+!hjoN+MrT4))o)Jc=rT4(diW'%=k2uR'!(PrJ",,h!
R/?paD>WGri\U6-!%Rp/!6F!s"FB4mcNO.G!.=_,!6"($!+u2l!$M7@p`KQIrkAH0q&f[!rkAG[miVZY
<g``u!f&*nrkAKG,4coWGQ#8V-MJYM+9<goq7cn]iZJ?$^V<tM+97T%^Ar9G+95@<^AsP\+Sm2_Vn]ud
r#c"bZ2D?:DWi2CB)TIE2Z=io&-,Z.XT4R\&-.4ZXT3,)&-<V9L\e+SFr!%9XT>C6q[iQ7!+u23!#FT+
!>_='XT0C$&-J3"X\&F%!.k$L!+>F1!(-Uc!/1:^iXc3XXfZ"/&-3H:r2fs)kR[_prN-&HrXei)!(m0j
!0?pU!."RE!+PBs!X:]:qPs[9#:oeS!N#qi!!$='WrNCb!!*:oq5XK*rW)$["-KXb55YB\Hi'iD=7cIm
2Z0TUIbk&,P,kWbqu?a"SG]Df<;-C`!!#^kWrO"0!!$L-joE3m!!&bmjoC)'!!3F$Y578^PmKMNjoOBB
o)Jc=rT4(dm/Zk\!=7-Ljo?(S!!C.$k#D6Y!2]ST!-Ro6!(m+N!34lU!lX6`!-S2>!<ppLjoBDb!!$X0
jo?P'!;R`<,GY7Q!/1.j!-J4T!O=6I+9No^K=:Wk"KG3>+CY8a!2B$,!I)<X^AoV@+96oe^At_%+9Wn&
^V2?!+9<[pr4`9/,P3)YE;[HNJFaoN+9Wn&^V)E#+95F>^B)&(kTBk;rP&=jrZM"J!>CUpXT3G<&--5>
XT>(5o+2!=3H:kkXT=eQ!Y>o>riH0^ndke5rN-&8it)3.q5jXmiXc5*XKAQFr=AuBV#7=qPS<d&rX]':
r2fs;h[fo'XKANIr"&irr2g"$,3TR<<rK-#-N4SP!!*1]ri6$7q#CCuri6'j$iU/"!!<BVC81R*"I(YA
!(Qsg!/pCJ!+#Q(!!hNa!,),.!2AHQ!s5L'WW3S.!!*.qr2Tj["7uQn<rAuuBAW[l!ii<#'Dqh13W,oY
WY=Rr!)3?l!#YG1!WWD;roO3Bq#CD?roO71&+]c'#<\(#qW7q$6N@*mroO3nnc/Z<rT4(dirB(:q;q\1
p&OI["9[cJjV@^o!<_$QjoN:%oDel4r8n!;hZ*c]jlYSAqu?^kr8n%@)Xmb&!!$X0jo?P'!<+)E+tbZ:
@&j1?!,D<^!*9'5!i8gRr%84.4%2qQJ"XLM^B&g?r[n2"rkAGfnfRpVrP&=Zjra^J1j/Q-!F-o1+9Hh^
D>YLV5l8:r;=bn1S,C#$C>L'7H(f3S+97Z(^AsDZ+96$P^Ap1k+T;oU&fr8N:RV0`!*T+=!(Qph!g>qt
r#Q(c.Ps@cDNCjnXT<;arZ2&UriH0Cndke5rN-&8rXe9)!@24MXT;'/it)9)O'MSo!&+5O!($2f!/^WU
!*SY"o+1t9O'hbq!/(3O!.a5D!*9'#!%.[VrW!*(%i$9WQ2R``:\bM$3rQ)\O#IpR%gN[e-o48(MQ$<N
!G3)G%fg2?WrR&.!!$='WrNCd!!*g>pT"<["QKI`?].k\!!"5?WrP$K!!%]OWrf?&:Yl'Q?].t^!!%HF
WrRJ/!!#^kWrO"6!!NK?*%kO<rT4)pq%Ng(rT43t8g"lI'ET'u2$??QMRqgBjoL;YrY,?froO3Fnc/Z<
rT4(djT#<%I.ub(<s@Ua!e@n%qu?aMk5=?A8+Q]\ZM`hbC>JplJ@fn"!!&tqjoD4?!!$X0jo?P'!!?.u
Z+ftId_>csnfRpVrP&=Zm2uX5LQ.F\R\[@`^B_KUU6^n"L1'd!lQ?1@r4`98+nQlX.D>Yo!(,6Z!B%Uh
^Aq6s+9<TsrP&=jrZD;06D(@#XT2Mp&-->@XT0.(&-kUHI"-d*PGA#WqQ1"(S</GRHZ`-D&-,f0XT=q(
oFM$@X8K("1=d!;,cppG!CIF^&-,c0XT0^I&-FgKS>sZ2!)W4d!+#Q(!!i5upAbFXDfp>RK8uVsWs>Ym
MgotnDFNOb!)<Bl!LNo[!!*G+r2TfDjT+iO!>_^5WrP-B!!#^kWrO"9!!>eadH/I3!,ME2q#CDCrT4(d
m/RAbQ(FbLZ+nr`jp0tm]W7`rP[38K!,2;m!R1]<!!*Sir8mu7r;bOO!?UA#joA';!!$X0jo?P'!<82$
^Aq%"+96Wa^AoVK+9<e%lG*;4!PTo@+97N$^ArTO+95@<^B(\cefXs5r4`9<,PE8N+96$P^Ap1k+THu3
XT1NT&-->@XT0.)&-*FFX6-MbX;9h-!.OjJ!,;$9!(-Uc!M^:^&H!(>@Jm5.TG-K"!*9'#!%.[Vs*D\c
!&=$E!F;c*WrNCm!!*8&k,SN_#NGdaGl4TB@IjI!2Z0TVTE=]bj8]0^r2Tjh"6TXa9`;!l)#aO8Us.uu
jo@a=!!%HGjo>_U!!*>bk2l^*$0)!cU&=$QK(T*F!!#UgjoO'9ec5\nr8n%/"m5jcB)Uil+T;B@N9%b7
^B)##nfRpVrP&=ZmN;KdjhCi,+m:'I+9<Xor4`5,o,n$`r4`5iefXu;Y5H$7GNL"JB)TIE2Z=j!Hi1"i
XT>IDndke5rN-&8mLT@DjfJT^&J4%8!>2.*XT1NU&--YHXT3Xt&-3E6r2fs2mL]1*!*9'#!%.[Vs)c;^
!N?V#!!$='WrNCm!!!c1X6ckfV#fWW!<JnlWrOmG!!$[0WrR4l!!34hX8T(!?02+e9`;!l)#aO8SB'am
itV%a!.Fh.!"&W)nGiP0jlQU#!os=^!ndG5!(-8W!/pd;!1N3Rli7%gc2?](IHCM0B)Uil+T;?D7n9A^
^<F=o\>sNjnfRpVrP&=ZmN<MnQ+t&F\?rH>VP0QJQ'.8nQ^aYDWNNP8]=ktdEoS8B55`.r]I3=o!@"lK
^B))UefXrgqnE+kjraY9rP&=jrZD>%2Nso;i2uCK!iDAlnIP\4rN-&8mLUBNKWV>TVP9ZMP`L`XK7SN(
L5M"TQ^j_EWN3.q@H.n#0!28TXT>F<oFM$9U&;"m:=]sV55VG^.HV0A<rK-#-N4PZ.OpIOWq`XFWrf&^
<:Kqg?2^f(#OVR4!Ih)LVkfrRQ&poYJUMljI"6p-Ng#j$U8FojT3:phli7#.r2Tjs#P7us".oFk!(5<;
!&FGP!#t)$!<>glWrO"9!!G8@^XqPjjoX;ZEq',0IJr:.$17d'!NP;CiS<#1aMPQrY,S6-USk3"\\H//
e(N[>k14b:!!"PIjoOEJoDempebnP0>1NZR7/Q*J,QIi.!!$X0jo?P'!43jKGQ#8V-MJXq+95pL^As_o
+95.6^B)#!j<4%:!0-ok!1W'm!+u2E!&jg!]FalM!+u23!#DjO!)i`s!/^:Y!'L1]!NR4<&DI`rI/L)H
M<,9K<rK-#-N4R`!!$='WrNCT!8[\U8GoLgKC]'C0`7sPW"%;X!-S4?!/0tEnc/Y`rMoo8YlFcPrT4(d
m/Y-+!+Gff!3u+q!($PF!TFaG!;ultT)@^NZK2&dB)Uil+T;AJ+9?]$rkAF[Z60.)r4`5Po,n$cr4`5q
nK?s:!AD.a^AqR$+96$P^Ap1k+Nb8]&-->@XT0-B&-."RXT2f%&-3>_r2fsMedqj(X8K("9]Zfc<rK-#
-N4S9!7LoJ?2^f(#IXX2!!%';WrQ8n!!$g4WrRLt!!*Y0r2TfajT#9SrMoo8pAhf*!.Fh.!"$pNjT#:K
r8n!&o)JcOr8n!Vec5^dir%p==R?+a!!$X0jo?P'!43jKGQ#8V-KZGq+98\E^Apjt+9<dsr4`5:efXs-
rkAQM^U>KN+96$P^Ap1k+LD[[B)Sh3(B+lQ&-/@#XT1BR&-3NAr2frml4E=o!*T6%!MgLm&-,c0XT0^I
&AnM=!!$='WrNC1!!&PeWrO^C!!*7sr2Tf`ec5\Hr2Tjm#NYpc9`;!l(t\iB!!%HGjo>^n!!:U2k5OKC
4S/US#MAt:!*@_O!,MMp!SIe@!!$X0jo?P'!:q>M+96Wa^AoV$+RL9O3rH_n]-d.m!*9$4!P0`X+9F?2
=5P,$+fP=R!.F_e!`EbjmN;NQB)TIE2Z=i+&-->@XT0-o&Ch<l.f?CLW>>+;!(Qmg!N6n6&-=%V7c+aX
&XN?s!,VTF":u,1=X<AG!*9'#!%.[VZiC)3rMoo'pAhl,!$(p;!N-.o!!#(XWr]()qu?d49KVP?o`,!n
P5M?\AGZ?.2GY+U!!#^kWrO!I!;QTpIJr:.$*sU3-N*!,i<]&U!)EIS!T+Cb!!!r=Al%:a!<L1;joC/5
!!5]+*piq-B)Uil+T;AJ+96Wa^AoV2+Q":A@f3t@Re%X%P5N&pM>JCtR(p?mi#i"iqnE+or#c)1^V>U&
+S$WTB)TIE2Z=i+&-->@XT0.(&B>=^;>dNrM=V8YJc)VMGP_pRLTRX(iXc/&&3'Kg!%n*["#[3_GO5qA
<rK-#-N4R`!!-B+ri6#(ZN'tqr2TgMo)Jc;r2Tg;qZ$_LX/[!4!9X=^.f67H+T)3A.''Cfm/R,[rMoo8
`rPE*!.Fh.!"#t3!+>`e!3u+q!2]VU!1<W`"0UeJ+5d,!3W%q=.f98K2Wj.gm/R,urT4)&rW%H~>

%%EndBinary
grestore
np
1 dict begin
.74902 .678431 .670588 .901961 cmyk
OPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf580.437 447.873 mo(")shfalse sop
.74902 .678431 .670588 .901961 cmyk
OPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf585.813 447.873 mo(")shfalse sop
.74902 .678431 .670588 .901961 cmyk
OPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf591.189 447.873 mo(")shfalse sop
.74902 .678431 .670588 .901961 cmyk
OPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf596.565 447.873 mo(")shfalse sop
.74902 .678431 .670588 .901961 cmyk
OPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf601.941 447.873 mo(")shfalse sop
.74902 .678431 .670588 .901961 cmyk
OPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf607.317 447.873 mo(")shfalse sop
.74902 .678431 .670588 .901961 cmyk
OPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf612.693 447.873 mo(")shfalse sop
.74902 .678431 .670588 .901961 cmyk
OPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf618.069 447.873 mo(")shfalse sop
.74902 .678431 .670588 .901961 cmyk
OPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf623.445 447.873 mo(")shfalse sop
.74902 .678431 .670588 .901961 cmyk
OPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf628.821 447.873 mo(")shfalse sop
.74902 .678431 .670588 .901961 cmyk
OPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf634.197 447.873 mo(")shfalse sop
.74902 .678431 .670588 .901961 cmyk
OPXJEJ+Calibri*1 [24 0 0 -24 0 0 ]msf639.573 447.873 mo(")shfalse sop
end
grestore
grestore
gsave
125.998 -21.0864 mo
634.52 -21.0864 li
634.52 335.261 li
125.998 335.261 li
125.998 -21.0864 li
clp
gsave
-106.349 518.913 mo
853.651 518.913 li
853.651 -21.0864 li
-106.349 -21.0864 li
-106.349 518.913 li
clp
125.998 335.261 mo
634.52 335.261 li
634.52 -21.0865 li
125.998 -21.0865 li
cp
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
f
125.998 335.261 mo
634.52 335.261 li
634.52 -21.0865 li
125.998 -21.0865 li
cp
f
192.288 280.961 mo
586.392 280.961 li
586.392 5.63953 li
192.288 5.63953 li
cp
f
192.288 280.961 mo
586.392 280.961 li
1 /0 /CSD get_res sepcs
.851074 sep
20 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
192.288 5.63947 mo
586.392 5.63947 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
192.288 280.961 mo
192.288 277.279 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
290.814 280.961 mo
290.814 277.279 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
389.34 280.961 mo
389.34 277.279 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
487.866 280.961 mo
487.866 277.279 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
586.392 280.961 mo
586.392 277.279 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
192.288 5.63947 mo
192.288 9.32172 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
290.814 5.63947 mo
290.814 9.32172 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
389.34 5.63947 mo
389.34 9.32172 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
487.866 5.63947 mo
487.866 9.32172 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
586.392 5.63947 mo
586.392 9.32172 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
%ADOBeginSubsetFont: VAAAAA+Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /VAAAAA+Helvetica def/FontInfo 6 dict dup begin/Notice ((URW)++,Copyright 2014 by (URW)++ Design & Development) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 45 /hyphen putdup 46 /period putdup 48 /zero putdup 50 /two putdup 52 /four putdef/FontBBox {0 -218 929 741} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-23 -0 524 539 729 741 709 723] def/StdHW [81] def/StdVW [93] def/StemSnapH [78 81] def/StemSnapV [83 93] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings6 dict dup begin/hyphen <1C60D8A8C9B81F2C3A3F8849A20715A30A1C8E20BA40A715C66C59DFAA60C2> |-/period <1C60D8A8C9B854D088EEB7F5292ECB0543F68EFE6422AA9D95EF> |-/zero <1C60D8A8C9B7EF32A8358722B87A801A562DAEAF310D8B2D525C776A58483558CD1C1C4B5370E4697C2C295B707E2B585735216999E4336E8EC3C2D75AB3E370F5BA61767E189AFD95C19E3EDCF64020A783308F18BC27A88D779DD0AB60AD4F1F686FDF6BF0> |-/two <1C60D8A8C9B7EF32500AC75069766F9D86E52C146766477C57F62E0701EF066D54A4A0DE6B3F111A80B6DED0D7BE403AE55C976C32DE56545F2C86916488F1EF47A33B784E2CBC1C254CB9106391983F5D06307E8C46757539D824C57DEA3EBF5AC4A0DC454707E7599777D036A3470E041A437C> |-/four <1C60D8A8C9B7EF32570F0641D9F8C40B3B25A973C8BB2CC236581C6175005DBD9BD1E852EF7650C6FA91486B65BC138F8CA996CAEE1B52192E6E43CDFE7ABE19B5> |-/.notdef <1C60D8A8C9B854D00D> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/OPXJEN+Helvetica /VAAAAA+Helvetica findfont ct_VMDictPut/OPXJEN+Helvetica*1 [45{/.notdef}rp /hyphen /period /.notdef /zero /.notdef /two /.notdef /four 203{/.notdef}rp]OPXJEN+Helvetica nfOPXJEN+Helvetica*1 [18.1615 0 0 -16.9689 0 0 ]msf175.943 303.02 mo(-0.4)sh274.468 303.02 mo(-0.2)sh383.891 303.02 mo(00.20.4)[91.2614 10.0978 5.04889 83.3794 10.0978 5.04889 0 ]xsh383.182 324.417 mo
382.634 324.417 382.194 324.229 381.863 323.854 cv
381.531 323.478 381.303 323.025 381.175 322.495 cv
381.047 321.965 380.983 321.443 380.983 320.93 cv
380.983 320.904 li
380.983 320.347 381.042 319.764 381.16 319.154 cv
381.279 318.544 381.447 317.936 381.664 317.331 cv
381.881 316.726 382.117 316.184 382.373 315.707 cv
382.553 315.38 382.783 315.011 383.062 314.6 cv
383.34 314.189 383.653 313.807 383.998 313.454 cv
384.344 313.1 384.715 312.813 385.112 312.591 cv
385.509 312.371 385.916 312.261 386.332 312.261 cv
386.346 312.261 li
386.781 312.261 387.145 312.375 387.439 312.605 cv
387.732 312.835 387.959 313.126 388.12 313.48 cv
388.28 313.833 388.394 314.211 388.46 314.614 cv
388.526 315.016 388.56 315.398 388.56 315.761 cv
388.56 316.618 388.436 317.492 388.19 318.385 cv
387.944 319.277 387.599 320.139 387.155 320.97 cv
386.994 321.288 386.767 321.66 386.474 322.084 cv
386.181 322.508 385.87 322.888 385.544 323.224 cv
385.218 323.559 384.85 323.842 384.438 324.072 cv
384.027 324.302 383.617 324.417 383.211 324.417 cv
383.182 324.417 li
cp
383.225 323.98 mo
383.623 323.98 384.005 323.778 384.374 323.376 cv
384.743 322.974 385.068 322.488 385.346 321.918 cv
385.625 321.348 385.871 320.763 386.084 320.162 cv
386.297 319.561 386.451 319.048 386.545 318.624 cv
382.842 318.624 li
382.652 319.34 382.503 319.956 382.395 320.473 cv
382.286 320.99 382.232 321.496 382.232 321.991 cv
382.232 323.316 382.563 323.98 383.225 323.98 cv
cp
382.984 318.027 mo
386.701 318.027 li
386.834 317.532 386.938 317.119 387.014 316.788 cv
387.089 316.457 387.155 316.105 387.211 315.733 cv
387.269 315.362 387.297 315.018 387.297 314.7 cv
387.297 313.374 386.975 312.711 386.332 312.711 cv
385.556 312.711 384.89 313.288 384.331 314.441 cv
383.774 315.594 383.324 316.79 382.984 318.027 cv
f
%ADOBeginSubsetFont: VAAAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.systemdict beginOPXJEN+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7EF32570F06410D4703CEEE720A1EC05549B5F38939B6B45D927DD356E4137552D71D9F5A76> |-systemdict /gcheck known {setglobal} if end {end} ifendOPXJEN+Helvetica /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/OPXJEN+Helvetica*1 [45{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four 203{/.notdef}rp]OPXJEN+Helvetica nfOPXJEN+Helvetica*1 [14.5292 0 0 -13.5752 0 0 ]msf389.34 332.716 mo(1)sh192.288 280.961 mo
192.288 5.63947 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
586.392 280.961 mo
586.392 5.63947 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
192.288 274.976 mo
196.229 274.976 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
192.288 215.123 mo
196.229 215.123 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
192.288 155.271 mo
196.229 155.271 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
192.288 95.4179 mo
196.229 95.4179 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
192.288 35.5659 mo
196.229 35.5659 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
586.392 274.976 mo
582.451 274.976 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
586.392 215.123 mo
582.451 215.123 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
586.392 155.271 mo
582.451 155.271 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
586.392 95.4179 mo
582.451 95.4179 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
586.392 35.5659 mo
582.451 35.5659 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
OPXJEN+Helvetica*1 [18.1615 0 0 -16.9689 0 0 ]msf175.943 281.339 mo(0)shOPXJEN+Helvetica*1 [18.1615 0 0 -16.9689 0 0 ]msf155.965 221.486 mo(100)shOPXJEN+Helvetica*1 [18.1615 0 0 -16.9689 0 0 ]msf155.965 161.634 mo(200)sh%ADOBeginSubsetFont: VAAAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.systemdict beginOPXJEN+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7EF32A838F0ACE91E110B9C641696528D764802E0DC68BF9F15900A58887D5DA0728C58A5D2630177ED2EE6B4392F98EF44C2C436690D003A9559F1D42A17C8081463A26A08773B4A30A51B7104B6D2C1AE9A21925C94DA9C54DCD8883C9C1A48013F2B307BD9787489372C300168FAE8971A051748E05E99DD5F55A29DE819E045A2FA331E1031618537B63AD346> |-systemdict /gcheck known {setglobal} if end {end} ifendOPXJEN+Helvetica /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/OPXJEN+Helvetica*1 [45{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four 203{/.notdef}rp]OPXJEN+Helvetica nfOPXJEN+Helvetica*1 [18.1615 0 0 -16.9689 0 0 ]msf155.965 101.781 mo(300)shOPXJEN+Helvetica*1 [18.1615 0 0 -16.9689 0 0 ]msf155.965 41.929 mo(400)sh1 /0 /CSD get_res sepcs
.851074 sep
%ADOBeginSubsetFont: VAAAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.systemdict beginOPXJEN+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/E <1C60D8A8C9B64EDF8862D774151335C23345609532E7B253FE8B912EA10CB8B66F63B30176A08FE63396B229631787D90BB84F93352597783ACEA1> |-/M <1C60D8A8C9B6B41CC7813947DCFB46147222166AB889DC19AD6BD83A46B3F370A8F4ADE784AE0808E3EB1A31A9FBB17372267B6A85127E1913AF73CCCC3FBA360F09F44E09> |-/S <1C60D8A8C9B64EDF77D7EC0546C6DE4C531E1C5BE973B418A5C3A6669194A3A9B942954B93500DC7B71D12696B8C78344F1C5AEB3859E01BDE2DE390CFFA5259BDAEC596D7C695DED6026497B138D584FC722D7FD7B1F9B8AB85825C887B89977C84DA2B26160D00796980BBBDBBC754394093439B363C6DDBCA453A81E770FC829D7EEAC9638BD9E2C5845AF780E9279307DB274E505658085525A88BB2F3> |-/W <1C60D8A8C9B5D6EF3EE48D572F84D3146D37F2D6E3E900BA99AB95BEFC9B3C2D085243F63DEE478B3806B793A34984B1C9D50196ED810B8B70E0ACBAD818784EA4AC7CE6> |-/d <1C60D8A8C9B7EF32A838F0ADA05AA7BE67CAEF6821E2B45DACFBE66781F882286BFB8558FFDC99835F6318B6ABFB469C2D564BB0F5EAEF926B8044CD56E4E3AD78BD0C6E1DDDC794C81B0BFA328D16D8794BDD116779E1AB84C1373C8ED71030E0D172D0AC86C729163A4DA6830737683F05490FA341BA778F34D42B50DEA30638EA8F372A68EA0F05D2> |-/e <1C60D8A8C9B7EF32A839C1FD591230A166F277FECE72B730F1E2F317E00493971DEE8E5EAE9387F2DAF20B78B29FDD6FEE0B6539DE8A33498C1030568392E61F4D3AC749A9AF964BAC7AE995A2B5418E7F9778BBEB9A720A5B1929175BE14597229641042269FF> |-/g <1C60D8A8C9B7EF3224FCC08D582D7B4C7373C759D76B723A1CD8F9043C8DDDA92640BA847D86B5513D17AC26A51F3DF4023321D78CDEBFAAB9B6E39C2F09BBE0718DA89ADE1BCA35A6BCD7CBB05ABDFE2267886205A1DF1F43E692DAE4853731C831755EA39340E2650C1712CC24AA630ADB3AF360C4DF38C782C284BA53A3FF1A3DFFA27651AEAAFDE3AA2FDB9EFC6354A3BD53D80C7B935F6AF1A5ECCDD02DA77213508DF37A6DCE06ACF7443FF03D87112595266FFE8DC4> |-/h <1C60D8A8C9B7EF32570F064E709B8926574C03377BA220AE0888CBE55DD78AB956CD4302BB789AA6D333FFADD104DB65C1220150F33A25DDB6D0C3E3F2A102DFCFBF07D5AE34546281AAAE18BB2A6A1D8790> |-/i <1C60D8A8C9B88C080EFCC82F89BA7CEC445252AFD9C466095706C3632A72A909DDBFB135AC84356031E8C02E54FBB26A6808DC1FFB183B155F5ECA24B946> |-/t <1C60D8A8C9B854D077BC25D4BFB2E66633FA304F09B33E72790D091A1F7493B73F86D2D59BD8ED1F2C3BD662709034A2A779D529AF125A278342C76D9DA0E4C390660AA8DCC02CC67E9DE7> |-systemdict /gcheck known {setglobal} if end {end} ifendOPXJEN+Helvetica /Encoding getdup 32 /space putdup 69 /E putdup 77 /M putdup 83 /S putdup 87 /W putdup 100 /d putdup 101 /e putdup 103 /g putdup 104 /h putdup 105 /i putdup 116 /t putpop%ADOEndSubsetFont
/OPXJEN+Helvetica*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four 16{/.notdef}rp /E 7{/.notdef}rp /M 5{/.notdef}rp /S 3{/.notdef}rp /W 12{/.notdef}rp /d /e /.notdef /g /h /i 10{/.notdef}rp /t 139{/.notdef}rp]OPXJEN+Helvetica nfOPXJEN+Helvetica*1 [0 -16.9689 -18.1615 0 0 0 ]msf149.154 200.146 mo(Weighted MSE)[-16.0187 -9.43472 -3.76711 -9.43472 -9.43474 -4.71736 -9.43472 -9.43472 -4.71738 -14.135 -11.3184 0 ]ysh192.288 7.6503 mo
204.604 108.528 li
216.919 169.605 li
229.236 206.93 li
234.162 217.481 li
241.551 229.977 li
266.182 253.484 li
290.814 263.147 li
315.445 267.386 li
340.077 269.394 li
438.603 270.837 li
487.866 271.264 li
537.129 271.468 li
586.392 271.59 li
586.439 271.59 li
1 /0 /CSD get_res sepcs
1 sep
0 lc
2 lj
[80 80 ] 0 dsh
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
192.288 234.021 mo
241.551 258.937 li
290.814 269.522 li
340.077 271.063 li
438.603 270.948 li
487.866 271.798 li
537.129 272.018 li
586.392 272.358 li
586.439 272.358 li
.883665 .769161 0 0 cmyk
[20 20 ] 0 dsh
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
192.288 231.475 mo
192.288 236.566 li
189.564 234.02 mo
195.012 234.02 li
0 lj
[] 0 dsh
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
241.551 256.392 mo
241.551 261.483 li
238.827 258.937 mo
244.275 258.937 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
290.814 266.976 mo
290.814 272.067 li
288.09 269.521 mo
293.538 269.521 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
340.077 268.518 mo
340.077 273.608 li
337.353 271.063 mo
342.801 271.063 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
438.603 268.403 mo
438.603 273.494 li
435.879 270.948 mo
441.327 270.948 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
487.866 269.252 mo
487.866 274.343 li
485.142 271.798 mo
490.59 271.798 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
537.129 269.472 mo
537.129 274.563 li
534.405 272.018 mo
539.853 272.018 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
586.392 269.812 mo
586.392 274.903 li
583.668 272.358 mo
589.116 272.358 li
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
192.288 243.866 mo
241.551 262.101 li
290.814 270.577 li
340.077 271.69 li
438.603 271.81 li
487.866 272.215 li
537.129 272.462 li
586.392 272.555 li
586.439 272.555 li
0 .993988 1 0 cmyk
1 lj
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
254.945 86.6663 mo
577.311 86.6663 li
577.311 9.88174 li
254.945 9.88174 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: VAAAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.systemdict beginOPXJEN+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/comma <1C60D8A8C9B854D088EEB7F529386F280D9C87121678FF369865635B5BE904BC8BF5B2113F4BECD898> |-/A <1C60D8A8C9B64EDF88209F7A312FACCCCDAD59A2EAB742690040B8D13D5A2C59ADAC34772A84AC971BD62301195DE9BB2EFAEE1F03113D1673CEAA6ED2D8319F> |-/F <1C60D8A8C9B7D8BE6A40C9752DBF6493052E3C73DE0D6A00295E8890CDF81C57C77413034CF0C170DB86143942F39AAF44FD3EC2DA> |-/Z <1C60D8A8C9B7D8BE6A02C8B7AC4B1E33E926F4A42EB3DCBF52BDEFDA4099AE6D8F2CCCC8FDC741D08BB03D80C22B48068881> |-/a <1C60D8A8C9B7EF32A835872312BA38ECCECE8951474DD5CAA68265B2F0077774DC7F3451D7D63DB42834E8CA98DCE698D771C88C86C56509FCA9984ADDEEE62525BCFA73F6F6096DC6AB209FB8ADE6BBD4C7CF55B8C6C5F841A7EC72D3B518EFB8CEC1C99E2B8BF674BC65088F62BA187A00F898BE8D4165CD761A12BB344D72D328F97537AD63F39573A6B34A862751483BBAF63C5AF3337E133F5270C22D63D051516B4F0B> |-/o <1C60D8A8C9B7EF32A839C1F22A8D6B2DAF8CFACFB466AA2D5F9A52A53F97896760D132F78F6B167CFAFA8CFB5D9561B5531C39C66F4BF3CE151A4BF4C30B42EB3D2B9A0463149463A6874D98E475CE2B3B76FD4C2B> |-/r <1C60D8A8C9B81F2C46F7F63704E5ACDCC6A30439F08E2AF0F477AD569AEEAADCA862259957FD70803EF119CB651375205A6F149A33021106CE7C1F5B9BA801BEFCEB8F6C5F05C13FC2CB931C9F> |-systemdict /gcheck known {setglobal} if end {end} ifendOPXJEN+Helvetica /Encoding getdup 44 /comma putdup 65 /A putdup 70 /F putdup 90 /Z putdup 97 /a putdup 111 /o putdup 114 /r putpop%ADOEndSubsetFont
/OPXJEN+Helvetica*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four 12{/.notdef}rp /A 3{/.notdef}rp /E /F 6{/.notdef}rp /M 5{/.notdef}rp /S 3{/.notdef}rp /W 2{/.notdef}rp /Z 6{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g /h /i 5{/.notdef}rp /o 2{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]OPXJEN+Helvetica nfOPXJEN+Helvetica*1 [21.7938 0 0 -20.3627 0 0 ]msf288.544 30.8808 mo(MAF, Zero-Wait)[18.1541 14.5366 13.3158 6.05869 6.05865 13.3159 12.1173 7.25714 12.1173 7.25717 20.5733 12.1173 4.83823 0 ]xsh258.577 23.669 mo
285.819 23.669 li
.75021 .679683 .670222 .90164 cmyk
2 lj
[80 80 ] 0 dsh
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: VAAAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.systemdict beginOPXJEN+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/I <1C60D8A8C9B854D08882A1CCB0E44CE37226A0A6708D7C0F81430C61A4F10702> |-/c <1C60D8A8C9B7A73D3A65C15B5AE8DF81DD1343D8AA6F164496C050DAE1B7AE1C7D1CCEAF2E1097DCFFBFA904FBC8BD2781B69097605934011255CC1E77D974D42A5734080EC34301EC4BC5AA107FFDCEDB9EBE2B62B885971DC22E> |-/l <1C60D8A8C9B88C080EFCC82E6E5A8E04CAEF8E2733B507E0DF1A41EB96B5AE45> |-/n <1C60D8A8C9B7EF32570F064E9AB268C93CCC5A502AC76AA3605F6F842E0C6884B1AC78E4F6F7E0C35601D9142672E63805C6C437F58826490DDF1942A9DD9E1CCD138DDFD598A3C09163CA0FC236518D17D98D39776EB3E76C4DB2FFD5> |-/s <1C60D8A8C9B7A73D3A65C15B5AE8DF91C48D2A2C43668D79F8F3A5F935483A3C34060A94950E9D350B9F868CE3ED993FB40EC7E2AFF7911330405AF7E6F01E787476F0618434BE96954E00B578FFB147A39DAD333F304533F66B3B7418B04EE5BF9C8839EFB740337F67A7CADF9BAF26C32B55149B7D6557640A956083A5> |-/x <1C60D8A8C9B7A73DC54C6E6FD58E3FF027C631C574BD3FD240B1F8C9A95C88F92FF205771BB95068209117D8FBE93B12814FB1E2F770A498FDD7D26313CA0A35A2> |-systemdict /gcheck known {setglobal} if end {end} ifendOPXJEN+Helvetica /Encoding getdup 73 /I putdup 99 /c putdup 108 /l putdup 110 /n putdup 115 /s putdup 120 /x putpop%ADOEndSubsetFont
/OPXJEN+Helvetica*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four 12{/.notdef}rp /A 3{/.notdef}rp /E /F 2{/.notdef}rp /I 3{/.notdef}rp /M 5{/.notdef}rp /S 3{/.notdef}rp /W 2{/.notdef}rp /Z 6{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /h /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s /t 3{/.notdef}rp /x 135{/.notdef}rp]OPXJEN+Helvetica nfOPXJEN+Helvetica*1 [21.7938 0 0 -20.3627 0 0 ]msf288.544 55.4858 mo(Signal-agnostic Whittle Index)[14.5366 4.83823 12.1173 12.1173 12.1173 4.8382 7.25717 12.1173 12.1173 12.1173 12.1173 10.8969 6.05869 4.8382 10.8969 6.05865 20.5733 12.1173 4.83823 6.05865 6.05869 4.83823 12.1173 6.05865 6.05865 12.1173 12.1174 12.1173 0 ]xsh258.577 48.274 mo
285.819 48.274 li
.883665 .769161 0 0 cmyk
[20 20 ] 0 dsh
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
272.198 45.7286 mo
272.198 50.8193 li
269.474 48.274 mo
274.923 48.274 li
0 lj
[] 0 dsh
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: VAAAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.systemdict beginOPXJEN+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/w <1C60D8A8C9B6079F1E495238D734F67FB5E2A2BA6F1F073975099C28237272C5E468B93051F423D5D62417FF2745759EEEF7FD240DC4B0B2C13B5678A844> |-systemdict /gcheck known {setglobal} if end {end} ifendOPXJEN+Helvetica /Encoding getdup 119 /w putpop%ADOEndSubsetFont
/OPXJEN+Helvetica*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four 12{/.notdef}rp /A 3{/.notdef}rp /E /F 2{/.notdef}rp /I 3{/.notdef}rp /M 5{/.notdef}rp /S 3{/.notdef}rp /W 2{/.notdef}rp /Z 6{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /h /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s /t 2{/.notdef}rp /w /x 135{/.notdef}rp]OPXJEN+Helvetica nfOPXJEN+Helvetica*1 [21.7938 0 0 -20.3627 0 0 ]msf288.544 80.0908 mo(Signal-aware Whittle Index)[14.5366 4.83823 12.1173 12.1173 12.1173 4.8382 7.25717 12.1173 15.7351 12.1173 7.25717 12.1173 6.05865 20.5733 12.1173 4.83823 6.05869 6.05865 4.83823 12.1173 6.05865 6.05869 12.1173 12.1173 12.1173 0 ]xsh258.577 72.8789 mo
285.819 72.8789 li
0 .993988 1 0 cmyk
1 lj
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
254.945 86.6662 mo
577.311 86.6662 li
577.311 9.88168 li
254.945 9.88168 li
cp
.710872 .650538 .640284 .693507 cmyk
0 lj
gsave
[.0908074 0 0 -.0848447 125.998 335.261 ]ct
@
grestore newpath
grestore
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/OPXJEM+Calibri-BoldItalic*1 uf/OPXJEM+Calibri-BoldItalic uf/SAAAAA+Calibri-BoldItalic uf/OPXJEN+Helvetica*1 uf/OPXJEN+Helvetica uf/VAAAAA+Helvetica uf/OPXJEL+Calibri-Italic*1 uf/OPXJEL+Calibri-Italic uf/QAAAAA+Calibri-Italic uf/OPXJEI+Calibri-Bold*1 uf/OPXJEI+Calibri-Bold uf/KAAAAA+Calibri-Bold uf/OPXJEK+CambriaMath*1 uf/OPXJEK+CambriaMath uf/OAAAAA+CambriaMath uf/OPXJEJ+Calibri*1 uf/OPXJEJ+Calibri uf/MAAAAA+Calibri ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
